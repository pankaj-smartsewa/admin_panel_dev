{"version":3,"sources":["webpack:///src/app/application/inventory/components/diagnostics/ace-diagnostics/ace-diagnostics.component.ts","webpack:///src/app/application/inventory/components/diagnostics/ace-diagnostics/ace-diagnostics.component.html","webpack:///src/app/application/inventory/components/diagnostics/diagnostics-listing/diagnostics-listing.component.ts","webpack:///src/app/application/inventory/components/diagnostics/diagnostics-listing/diagnostics-listing.component.html","webpack:///src/app/application/inventory/components/diagnostics/view-diagnostics/view-diagnostics.component.ts","webpack:///src/app/application/inventory/components/diagnostics/view-diagnostics/view-diagnostics.component.html","webpack:///src/app/application/inventory/components/medicine/ace-medicine/ace-medicine.component.ts","webpack:///src/app/application/inventory/components/medicine/ace-medicine/ace-medicine.component.html","webpack:///src/app/application/inventory/components/medicine/medicine-listing/medicine-listing.component.ts","webpack:///src/app/application/inventory/components/medicine/medicine-listing/medicine-listing.component.html","webpack:///src/app/application/inventory/components/medicine/view-medicine/view-medicine.component.ts","webpack:///src/app/application/inventory/components/medicine/view-medicine/view-medicine.component.html","webpack:///src/app/application/inventory/components/products/ace-products/ace-products.component.ts","webpack:///src/app/application/inventory/components/products/ace-products/ace-products.component.html","webpack:///src/app/application/inventory/components/products/products-listing/products-listing.component.ts","webpack:///src/app/application/inventory/components/products/products-listing/products-listing.component.html","webpack:///src/app/application/inventory/components/products/view-products/view-products.component.ts","webpack:///src/app/application/inventory/components/products/view-products/view-products.component.html","webpack:///src/app/application/inventory/inventory.module.ts","webpack:///src/app/application/inventory/services/InventoryService.ts"],"names":["AceDiagnosticsComponent","formBuilder","http","inventoryService","router","route","toastrService","submitted","fileDatapancard","fileDatagst","fileDatacertificate","fileDataotherdocs","previewUrlcertificate","previewUrlgst","previewUrlpancard","previewUrlotherdocs","typeDropdownData","categoryDropdownData","serviceDropdownData","dropdownData","sub","queryParams","subscribe","params","vendorDataFormType","type","vendorId","getServiceDropdownData","bindAddForm","gettypeDropdown","today","Date","minDate","getFullYear","getMonth","$","document","ready","on","event","next","html","target","files","name","i","length","reader","FileReader","onload","push","result","readAsDataURL","fileInput","fileDatavendorlogo","mimeType","match","_event","previewUrlvendorlogo","fileDataprofphoto","previewUrlprofphoto","vendordetailsForm","group","required","category","services","vendorName","maxLength","minLength","pattern","contactPersonName","mobile","secondaryMobile","officialEmail","email","personalEmail","country","value","disabled","state","city","pincode","steet_address_1","steet_address_2","latlong","gstNumber","certificationNumber","certificationAuthorties","certificationDate","panCard","bankName","branchName","branchcity","accountNumber","ifsc","holderName","UPIId","defaultDiscountPercentage","panelRequired","pancardFile","regCertificateFile","gstDocumentFile","otherDocs","vendorLogo","profilePhoto","controls","valueChanges","debounceTime","switchMap","term","change","valid","getpincodeData","console","log","data","getCategoryByid","location","financialDetails","UPI","formData","invalid","showWarning","FormData","append","get","JSON","stringify","tempLocation","tempFinancial","pipe","transform","editVendorData","response","success","showSuccess","message","navigate","currentPage","perPage","queryParamsHandling","showError","err","error","saveVendorData","reset","typeQueryStr","label","getVendorData","tempDataString","replaceAll","cId","queryObj","vendorQueryStr","generateQueryString","getVendorDetailById","bindEditForm","vendorDetails","vendorLogoUrl","vendorProfileUrl","enteredpincode","pincodeQueryStr","getpincodedetails","pincode_state","selector","templateUrl","styleUrls","DiagnosticsListingComponent","fb","cities2","id","display","responseCode","SelectionType","enableSummary","summaryPosition","selected","ColumnMode","columns","prop","filterObj","search","pageSize","sort_by","sort_type","LIMITS","limit","searchField","searchForm","navigateUser","getDiagnosticListingData","tempUrlQuery","tempLink","navigateByUrl","events","evt","window","scrollTo","diagnosticQueryStr","getDiagnosticsList","rows","pages","metadata","productId","isConfirmed","confirm","request","removediagnosticQueryStr","removeDiagnosticProduct","page","ViewDiagnosticsComponent","getdiagnosticData","getDiagnosticDetailById","diagnosticDetails","url","open","AceMedicineComponent","MedicineListingComponent","getMedicineListingData","medicineQueryStr","getMedicineList","removemedicineQueryStr","removeMedicine","ViewMedicineComponent","getMedicineData","getMedicineDetailById","medicineDetails","AceProductsComponent","fileDataproductimg","previewUrlproductimg","productDataFormType","productdetailsForm","productImage","productName","productShortName","brandName","packagingType","packageSize","productDescription","ingredients","highlights","productusage","effect","HSN","upc","vendorSKU","ssSKU","costToCompany","mrp","per_unit_price","weight","gst","totalMargin","SS_Margin","SSP_Margin","stock_status","product_availability","tax_exempt","action","direction","tags","sku","isAvailable","editProductData","saveProductData","getENUMData","getProductData","productQueryStr","getProductDetailById","productDetails","ProductsListingComponent","getProductListingData","getProductList","removeproductQueryStr","removeProduct","ViewProductsComponent","productsQueryStr","inventoryRoutes","path","component","InventoryModule","forRoot","forChild","declarations","imports","InventoryService","baseUrl","API_ENDPOINT","queryStr","post","providedIn"],"mappings":"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","file":"src-app-application-inventory-inventory-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { IOption } from 'ng-select';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { of } from 'rxjs';\nimport { isNumeric } from 'rxjs/util/isNumeric';\ndeclare var $:any;\n@Component({\n  selector: 'app-ace-diagnostics',\n  templateUrl: './ace-diagnostics.component.html',\n  styleUrls: ['./ace-diagnostics.component.scss']\n})\nexport class AceDiagnosticsComponent implements OnInit {\n  today: Date;\n  maxDate: Date;\n  minDate: Date;\n  vendordetailsForm: FormGroup;\n  submitted = false;\n  fileDatapancard: string [] = [];\n  fileDatagst: string [] = [];\n  fileDatacertificate: string [] = [];\n  fileDataotherdocs: string [] = [];\n  previewUrlcertificate = [];\n  previewUrlgst = [];\n  previewUrlpancard = [];\n  previewUrlotherdocs = [];\n  typeDropdownData: Array<IOption> = [];\n  categoryDropdownData: Array<IOption> = [];\n  serviceDropdownData: Array<IOption> = [];\n  dropdownData: any = {};\n  sub: any;\n  vendorDataFormType: string;\n  vendorId: string;\n  pincode_state: any;\n  vendorDetails: any;\n  fileDatavendorlogo: File;\n  previewUrlvendorlogo: any;\n  fileDataprofphoto: File;\n  previewUrlprofphoto: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      this.vendorDataFormType = params.type;\n      if ( this.vendorDataFormType !== 'add') {\n        if (!!params.vendorId && params.vendorId !== '') {\n          this.vendorId = params.vendorId;\n          this.getServiceDropdownData();\n        }\n      } \n      else {\n        this.bindAddForm();\n        this.gettypeDropdown();\n        this.getServiceDropdownData();\n      }\n    });\n    this.today = new Date();\n    this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 2);\n  }\n  ngOnInit() {\n    \n  }\n  ngAfterViewInit() {\n    $(document).ready(function() {\n      $(document).on('change', '.custom-file-input', function (event) {\n        $(this).next('.custom-file-label').html(event.target.files[0].name);\n    })\n    });\n}\n  fileProgressgst(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlgst.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatagst.push(event.target.files[i]);\n      }\n  }\n  fileProgresscertificate(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlcertificate.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatacertificate.push(event.target.files[i]);\n      }\n  }\n  fileProgresspancard(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlpancard.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatapancard.push(event.target.files[i]);\n      }\n  }\n  fileProgressotherdoc(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlotherdocs.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDataotherdocs.push(event.target.files[i]);\n      }\n  }\n  fileProgressvendorlogo(fileInput: any) {\n    this.fileDatavendorlogo = <File>fileInput.target.files[0];\n    const mimeType = this.fileDatavendorlogo.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDatavendorlogo);\n    reader.onload = (_event) => {\n      this.previewUrlvendorlogo = reader.result;\n    }\n  }\n  fileProgressvendorprofphoto(fileInput: any) {\n    this.fileDataprofphoto = <File>fileInput.target.files[0];\n    const mimeType = this.fileDataprofphoto.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDataprofphoto);\n    reader.onload = (_event) => {\n      this.previewUrlprofphoto = reader.result;\n    }\n  }\n  // Method: to bind and map fields data for adding data to category list\n  bindAddForm() {\n    this.vendordetailsForm = this.formBuilder.group({\n      type: ['', Validators.required],\n      category: ['', Validators.required],\n      services: ['', Validators.required],\n      vendorName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: ['', [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: ['', [Validators.required, Validators.email]],\n      personalEmail: ['', [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: ['', Validators.required],\n      certificationAuthorties: ['', Validators.required],\n      certificationDate: ['', Validators.required],\n      panCard: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: ['', Validators.required],\n      branchcity: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [''],\n      defaultDiscountPercentage: ['', [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [false],\n      pancardFile: [null, Validators.required],\n      regCertificateFile: [null, Validators.required],\n      gstDocumentFile: [null, Validators.required],\n      otherDocs: [null],\n      vendorLogo: [null, Validators.required],\n      profilePhoto: [null, Validators.required],\n    });\n    this.vendordetailsForm.controls['pincode'].valueChanges.debounceTime(200).switchMap(term => of(term)).subscribe(change => {\n      if (this.vendordetailsForm.controls['pincode'].valid) {\n        this.getpincodeData(this.vendordetailsForm.controls['pincode'].value);\n      } else {\n        console.log('Invalid Pincode.');\n      }\n    });\n  }\n  // End of above code\n  // Method: to bind and map fields data for adding data to category list\n  bindEditForm(data) {\n    this.getCategoryByid(data.type);\n    this.vendordetailsForm = this.formBuilder.group({\n      type: [data.type, Validators.required],\n      category: [data.category, Validators.required],\n      services: [data.services, Validators.required],\n      vendorName: [data.vendorName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: [data.contactPersonName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: [data.mobile, [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: [data.secondaryMobile, [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: [data.officialEmail, [Validators.required, Validators.email]],\n      personalEmail: [data.personalEmail, [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: [data.location.state, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: [data.location.city, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: [data.location.pincode, [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: [data.location.steet_address_1, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: [data.location.steet_address_2, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: [data.gstNumber, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: [data.certificationNumber, Validators.required],\n      certificationAuthorties: [data.certificationAuthorties, Validators.required],\n      certificationDate: [data.certificationDate, Validators.required],\n      panCard: [data.panCard, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: [data.financialDetails.bankName, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: [data.financialDetails.branchName, Validators.required],\n      branchcity: [data.financialDetails.city , [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: [data.financialDetails.accountNumber, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: [data.financialDetails.ifsc, [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: [data.financialDetails.holderName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [data.financialDetails.UPI],\n      defaultDiscountPercentage: [data.defaultDiscountPercentage, [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [data.panelRequired],\n      pancardFile: [null],\n      regCertificateFile: [null],\n      gstDocumentFile: [null],\n      otherDocs: [null],\n      vendorLogo: [null],\n      profilePhoto: [null],\n    });\n  }\n  // End of above code\n  // convenience getter for easy access to form fields\n  get vendorcheckout() { return this.vendordetailsForm.controls; }\n  onSubmit(formData) {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.vendordetailsForm.invalid) {\n      this.toastrService.showWarning('Missing Data', 'Check the entry again!');\n      return;\n    } else {\n      if (!!formData.valid && formData.valid === true) {\n        const formData = new FormData();\n        for (var i = 0; i < this.fileDatapancard.length; i++) {\n          formData.append(\"pancardFile\", !!this.fileDatapancard[i] ? this.fileDatapancard[i] : null);\n        }\n        for (var i = 0; i < this.fileDatacertificate.length; i++) {\n          formData.append(\"regCertificateFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDatagst.length; i++) {\n          formData.append(\"gstDocumentFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDataotherdocs.length; i++) {\n          formData.append(\"otherDocs\", !!this.fileDataotherdocs[i] ? this.fileDataotherdocs[i] : null);\n        }\n        if (!!this.fileDatavendorlogo) {\n          formData.append('vendorLogo', !!this.fileDatavendorlogo ? this.fileDatavendorlogo : null);\n        }\n        if (!!this.fileDataprofphoto) {\n          formData.append('profilePhoto', !!this.fileDataprofphoto ? this.fileDataprofphoto : null);\n        }\n        formData.append('type', this.vendordetailsForm.get('type').value);\n        formData.append('category', this.vendordetailsForm.get('category').value);\n        formData.append('services', JSON.stringify(this.vendordetailsForm.get('services').value));\n        formData.append('vendorName', this.vendordetailsForm.get('vendorName').value);\n        formData.append('contactPersonName', this.vendordetailsForm.get('contactPersonName').value);\n        formData.append('mobile', this.vendordetailsForm.get('mobile').value);\n        formData.append('secondaryMobile', this.vendordetailsForm.get('secondaryMobile').value);\n        formData.append('officialEmail', this.vendordetailsForm.get('officialEmail').value);\n        formData.append('personalEmail', this.vendordetailsForm.get('personalEmail').value);\n        const tempLocation = {\n          country: this.vendordetailsForm.get('country').value,\n          state: this.vendordetailsForm.get('state').value,\n          city: this.vendordetailsForm.get('city').value,\n          steet_address_1: this.vendordetailsForm.get('street_address_1').value,\n          steet_address_2: this.vendordetailsForm.get('street_address_2').value,\n          pincode: this.vendordetailsForm.get('pincode').value,\n          latlong: null,\n        };\n        formData.append('location', JSON.stringify(tempLocation));\n        const tempFinancial = {\n          bankName: this.vendordetailsForm.get('bankName').value,\n          branchName: this.vendordetailsForm.get('branchName').value,\n          city: this.vendordetailsForm.get('branchcity').value,\n          accountNumber: this.vendordetailsForm.get('accountNumber').value,\n          holderName: this.vendordetailsForm.get('holderName').value,\n          ifsc: this.vendordetailsForm.get('ifsc').value,\n          UPI: this.vendordetailsForm.get('UPIId').value\n        };\n        formData.append('financialDetails', JSON.stringify(tempFinancial));\n        formData.append('gstNumber', this.vendordetailsForm.get('gstNumber').value);\n        formData.append('certificationNumber', this.vendordetailsForm.get('certificationNumber').value);\n        formData.append('certificationAuthorties', this.vendordetailsForm.get('certificationAuthorties').value);\n        const pipe = new DatePipe('en-US');\n        formData.append('certificationDate', pipe.transform(this.vendordetailsForm.get('certificationDate').value, 'dd-MM-yyyy'));\n        formData.append('panCard', this.vendordetailsForm.get('panCard').value);\n        formData.append('defaultDiscountPercentage', this.vendordetailsForm.get('defaultDiscountPercentage').value);\n        formData.append('panelRequired', this.vendordetailsForm.get('panelRequired').value);\n        if (this.vendorDataFormType === 'edit') {\n          formData.append('vendorId', this.vendorId);\n          this.inventoryService.editVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/diagnostics'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        } else {\n          this.inventoryService.saveVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/diagnostics'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        }\n      }\n    }\n}\n\nonReset() {\n    this.submitted = false;\n    this.vendordetailsForm.reset();\n}\ngettypeDropdown() {\n  const typeQueryStr = 'name=VENDOR_TYPES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.typeDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.typeDropdownData = [];\n        console.log('No Type Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.getVendorData(this.vendorId);\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetCategoryByid(data) {\n  this.categoryDropdownData = [...[]];\n  let tempDataString = data.replaceAll(' ', '_');\n  tempDataString = data.replaceAll('\"', '');\n  const typeQueryStr = 'name=' + tempDataString;\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.categoryDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.categoryDropdownData = [];\n        console.log('No Category Coming from the BE');\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetServiceDropdownData() {\n  const typeQueryStr = 'name=VENDOR_SERVICES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.serviceDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.serviceDropdownData = [];\n        console.log('No Sub Category Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.gettypeDropdown();\n      }\n    },\n    err => console.error(err)\n  );\n}\n  // Method: to fetch Vendor Detail data from BE\n  getVendorData(cId) {\n    const queryObj = {\n      vendorId: cId\n    }\n    const vendorQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getVendorDetailById(vendorQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.bindEditForm(response.response.data);\n            this.vendorDetails = response.response.data;\n            this.previewUrlvendorlogo = response.response.data.vendorLogoUrl;\n            this.previewUrlprofphoto = response.response.data.vendorProfileUrl;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/diagnostics/'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  // Method: to fetch Pincode Detail data from BE\n  getpincodeData(enteredpincode) {\n    const queryObj = {\n      pincode: enteredpincode\n    }\n    const pincodeQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getpincodedetails(pincodeQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            console.log(response.response.data);\n            this.pincode_state = response.response.data.state;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n}\n","<!-- Add Vendor -->\n<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" *ngIf=\"!!vendorDataFormType && vendorDataFormType !== ''\">\n      <h1 class=\"h3 mb-0 text-gray-800 text-capitalize\">{{vendorDataFormType}} Diagnostics</h1>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i class=\"fa fa-upload fa-sm text-white-50\"></i> Import/Export</a> -->\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/diagnostics']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <div class=\"row pb-5\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <form class=\"user needs-validation\" novalidate [formGroup]=\"vendordetailsForm\" #vendorForm=\"ngForm\" (ngSubmit)=\"onSubmit(vendorForm)\" *ngIf=\"vendordetailsForm\">\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!serviceDropdownData && serviceDropdownData.length > 0\">\n                     <label for=\"services\">Services<span>*</span></label>\n                     <ng-select\n                     [options]=\"serviceDropdownData\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     [multiple]=\"true\"\n                     [closeOnSelect]=\"false\"\n                     [searchable]=\"true\"\n                     placeholder=\"Select Services\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"services\"\n                     name=\"services\"\n                     id=\"services\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.services.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.services.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.services.errors.required\">Service is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!typeDropdownData && typeDropdownData.length > 0\">\n                     <label for=\"vendortype\">Vendor Type<span>*</span></label>\n                     <ng-select\n                     [options]=\"typeDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Vendor type\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"type\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"type\"\n                     id=\"type\"\n                     class=\"form-control bg-light custom\"\n                     (ngModelChange)=\"getCategoryByid(vendordetailsForm.value.type)\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.type.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.type.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.type.errors.required\">Type is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!categoryDropdownData && categoryDropdownData.length > 0\">\n                     <label for=\"vendorcategory\">Vendor Category<span>*</span></label>\n                     <ng-select\n                     [options]=\"categoryDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Category\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"category\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"category\"\n                     id=\"vendorcategory\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.category.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.category.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.category.errors.required\">Category is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendorname\">Vendor Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"vendorname\" placeholder=\"John Doe\" formControlName=\"vendorName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.vendorName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.required\">Name is required</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.pattern\">Name should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.minlength\">Name should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendormob\">Vendor Mobile<span>*</span></label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"mobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"vendormob\" placeholder=\"Mob.\" aria-describedby=\"mobilecodeprepend\" formControlName=\"mobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.mobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.mobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.mobile.errors.required\">Mobile No. is required</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendoremail\">Vendor Email<span>*</span></label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"vendoremail\" placeholder=\"Email\" formControlName=\"officialEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.officialEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.officialEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.required\">Email is required</div>\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"contactpersonname\">Contact Person Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"contactpersonname\" placeholder=\"Name\" formControlName=\"contactPersonName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.contactPersonName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.contactPersonName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.required\">Contact Person Name is required</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"secondarymobile\">Secondary Mobile Number</label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"secondarymobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"secondarymobile\" placeholder=\"Mob.\" aria-describedby=\"secondarymobilecodeprepend\" formControlName=\"secondaryMobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.secondaryMobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.secondaryMobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"personalemail\">Person Email</label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"personalemail\" placeholder=\"Email\" formControlName=\"personalEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.personalEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.personalEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.personalEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address1\">Address 1<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address1\" placeholder=\"Street Address 1\" formControlName=\"steet_address_1\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_1.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_1.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.required\">Address Line 1 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address2\">Address 2<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address2\" placeholder=\"Street Address 2\" formControlName=\"steet_address_2\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_2.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_2.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.required\">Address Line 2 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"city\">City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"city\" placeholder=\"City\" formControlName=\"city\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.city.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.city.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.city.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"state\">State/ UT<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"state\" placeholder=\"State\" formControlName=\"state\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.state.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.state.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.state.errors.required\">State is required</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"country\">Country<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"country\" placeholder=\"India\" formControlName=\"country\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.country.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.country.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.country.errors.required\">Country is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pincode\">Pincode<span>*</span></label>\n                     <input type=\"text\" minlength=\"6\" maxlength=\"6\" class=\"form-control bg-light\" id=\"pincode\" placeholder=\"Pincode\" formControlName=\"pincode\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pincode.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.pincode.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.pincode.errors.required\">Pincode is required</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.pattern\">Pincode is invalid</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.minlength\">Pincode should be minimum 6 digits</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.maxlength\">Pincode should be maximum 6 digits</div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationdate\">Date of Certification<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationdate\" placeholder=\"DD-MM-YYYY\" bsDatepicker [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY', containerClass: 'theme-dark-blue', isAnimated: true }\" [maxDate]=\"today\" formControlName=\"certificationDate\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationDate.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationDate.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationDate.errors.required\">Date is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationno\">Certification No.<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationno\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification No.\" formControlName=\"certificationNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationNumber.errors.required\">Certification Number is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificateauthority\">Certification Authority<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificateauthority\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification Authority\" formControlName=\"certificationAuthorties\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationAuthorties.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationAuthorties.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationAuthorties.errors.required\">Certification Authority is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"gstinno\">GSTIN No<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"gstinno\" placeholder=\"GSTIN No\" formControlName=\"gstNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.gstNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.required\">GSTIN No. is required</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pancardno\">PAN Card<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"pancardno\" placeholder=\"ABHDE0000UT\" formControlName=\"panCard\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.panCard.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.panCard.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.panCard.errors.required\">PanCard No. is required</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"margin\">Margin</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"margin\" placeholder=\"18%\" formControlName=\"defaultDiscountPercentage\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.defaultDiscountPercentage.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.defaultDiscountPercentage.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.defaultDiscountPercentage.errors.pattern\">Should be only numeric/decimal</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"bankname\">Bank Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"bankname\" placeholder=\"Bank Name\" formControlName=\"bankName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.bankName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.bankName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.bankName.errors.required\">Bank Name is required</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankbranch\">Bank Branch<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"bankbranch\" placeholder=\"Bank Branch\" formControlName=\"branchName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchName.errors.required\">Bank Branch Name is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankcity\">Branch City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"bankcity\" placeholder=\"City\" formControlName=\"branchcity\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchcity.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchcity.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"ifsccode\">IFSC Code<span>*</span></label>\n                     <input type=\"email\" minlength=\"5\" maxlength=\"15\" class=\"form-control bg-light\" id=\"ifsccode\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"IFSC Code\" formControlName=\"ifsc\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.ifsc.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.ifsc.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.required\">IFSC is required</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.minlength\">Should be minimum 5 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountholder\">Account Holder’s Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"accountholder\" placeholder=\"Account Holder’s Name\" formControlName=\"holderName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.holderName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.holderName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.holderName.errors.required\">Account Holder Name is required</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountnumber\">Account Number<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"accountnumber\" placeholder=\"123-456-8910-1122\" formControlName=\"accountNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.accountNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.accountNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.required\">Account No. is required</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.pattern\">Should contain only numbers</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.minlength\">Should be minimum 2 number</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"upiid\">UPI ID</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"upiid\" placeholder=\"abc@oksbi\" formControlName=\"UPIId\">\n                  </div>\n               </div>\n               <div class=\"form-check\">\n                  <div class=\"form-group m-auto\">\n                     <input type=\"checkbox\" formControlName=\"panelRequired\" id=\"panelRequired\" class=\"form-check-input\" formControlName=\"panelRequired\"/>\n                     <label for=\"panelRequired\" class=\"form-check-label\">Panel Required</label>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload PAN Card Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadpancard\" (change)=\"fileProgresspancard($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"pancardFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pancardFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadpancard\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.pancardFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.pancardFile.errors.required\">PAN Card should be uploaded</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlpancard;\">\n                           <img [src]=\"url\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.panCardUrl.length != 0 && !(!!previewUrlpancard && previewUrlpancard.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.panCardUrl;\">\n                           <img [src]=\"item\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload GSTIN Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadgstindoc\" (change)=\"fileProgressgst($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"gstDocumentFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstDocumentFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadgstindoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.gstDocumentFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.gstDocumentFile.errors.required\">GSTIN Proof Doc required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlgst;\">\n                           <img [src]=\"url\" alt=\"GST Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.gstNumberUrl.length != 0 && !(!!previewUrlgst && previewUrlgst.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.gstNumberUrl;\">\n                           <img [src]=\"item\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Certificate Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadcertificatedoc\" (change)=\"fileProgresscertificate($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"regCertificateFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.regCertificateFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadcertificatedoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.regCertificateFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.regCertificateFile.errors.required\">Certificate Proof Required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlcertificate;\">\n                           <img [src]=\"url\" alt=\"Certificate Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.certificationUrl.length != 0 && !(!!previewUrlcertificate && previewUrlcertificate.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.certificationUrl;\">\n                           <img [src]=\"item\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                      </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Logo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorlogo\" (change)=\"fileProgressvendorlogo($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"vendorLogo\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorLogo.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorlogo\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.vendorLogo.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.vendorLogo.errors.required\">Vendor Logo is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlvendorlogo && previewUrlvendorlogo !== ''\">\n                           <img [src]=\"previewUrlvendorlogo\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Profile Photo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorprofilephoto\" (change)=\"fileProgressvendorprofphoto($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"profilePhoto\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.profilePhoto.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorprofilephoto\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.profilePhoto.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.profilePhoto.errors.required\">Vendor Profile Pic is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlprofphoto && previewUrlprofphoto !== ''\">\n                           <img [src]=\"previewUrlprofphoto\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Other Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadotherdocs\" (change)=\"fileProgressotherdoc($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"otherDocs\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadotherdocs\">Choose file...</label>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlotherdocs;\">\n                           <img [src]=\"url\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.otherDocumentsUrl.length != 0 && !(!!previewUrlotherdocs && previewUrlotherdocs.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.otherDocumentsUrl;\">\n                           <img [src]=\"item\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-row\">\n            <div class=\"col-md-6\">\n               <button class=\"btn btn-secondary w-25\" type=\"submit\">Submit</button>\n               <button class=\"btn btn-outline-secondary mx-2 w-25\" type=\"button\" (click)=\"onReset()\" [routerLink]=\"['/app/inventory/diagnostics']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\">Cancel</button>\n            </div>\n         </div>\n         </form>\n      </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {IOption} from 'ng-select';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { SelectionType, ColumnMode } from '@swimlane/ngx-datatable';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport 'rxjs/Rx';\nimport { of } from 'rxjs';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-diagnostics-listing',\n  templateUrl: './diagnostics-listing.component.html',\n  styleUrls: ['./diagnostics-listing.component.scss']\n})\nexport class DiagnosticsListingComponent implements OnInit {\n  cities2 = [\n    {id: 1, name: 'Vilnius'},\n    {id: 2, name: 'Kaunas'},\n    {id: 3, name: 'Pavilnys', disabled: true},\n    {id: 4, name: 'Pabradė'},\n    {id: 5, name: 'Klaipėda'}\n];\nselectService: string[];\n  display = 'none';\n  responseCode = ResponseCode;\n  SelectionType = SelectionType;\n  enableSummary = true;\n  summaryPosition = 'top';\n  pages: any;\n  rows: any;\n  selected = [];\n  ColumnMode = ColumnMode;\n  // object: for mapping label with api fields\n  columns = [\n    { name: 'S No', prop: 's_no' },\n    { name: 'Product ID', prop: 'productId'},\n    { name: 'Product Name', prop: 'productName' },\n    { name: 'Category', prop: 'category'},\n    { name: 'Sub Category', prop: 'subcategory' },\n    { name: 'Date', prop: 'updatedAt'},\n    { name: 'Total Tests', prop: 'noOfTests' },\n    { name: 'MRP', prop: 'mrp' },\n    { name: 'Stocky Status', prop: 'inStock'},\n    { name: 'Availability', prop: 'availabilityStatus'},\n  ];\n  searchField: FormControl;\n  searchForm: FormGroup;\n  filterObj = {\n    search: '',\n    pageSize: 50,\n    currentPage: 1,\n    sort_by: '',\n    sort_type: ''\n  };\n  LIMITS = [\n    { name: '10', id: 10 },\n    { name: '25', id: 25 },\n    { name: '50', id: 50 },\n    { name: '100', id: 100 }\n  ];\n  limit: number = this.filterObj.pageSize;\n  sub: any;\n  constructor(private inventoryService: InventoryService,\n              private toastrService: ProductToasterService,\n              private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router) {\n                this.searchField = new FormControl();\n                this.searchForm = fb.group({search: this.searchField});\n                this.searchField.valueChanges\n                  .debounceTime(400)\n                  .switchMap(term => of(term)).subscribe(result => {\n                    this.filterObj.search = result;\n                    this.navigateUser();\n                  });\n              }\n  ngOnInit() {\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.filterObj.search = params.search || '';\n        this.filterObj.pageSize = params.pageSize || '',\n        this.filterObj.currentPage = params.currentPage || '';\n        this.filterObj.sort_by = params.sort_by || '';\n        this.filterObj.sort_type = params.sort_type || '';\n        this.getDiagnosticListingData();\n      });\n  }\n  // Method: is used to Navigate user to a desired filter Page\n   navigateUser() {\n    const tempUrlQuery = ProductUtilities.generateQueryString(this.filterObj);\n    const tempLink = '/app/inventory/diagnostics?' + tempUrlQuery;\n    this.router.navigateByUrl(tempLink);\n  }\n  // End of the Above Code\n  // Method: which is used to fetch the Diagnostics list from the BE\n  getDiagnosticListingData(){\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n          return;\n      }\n      window.scrollTo(0, 0);\n    });\n    const diagnosticQueryStr = ProductUtilities.generateQueryString(this.filterObj);\n    this.inventoryService.getDiagnosticsList(diagnosticQueryStr).subscribe(\n      response => {\n        if (!!response && response.success === true) {\n          if (!!response.response.data && response.response.data.length > 0) {\n            this.rows = response.response.data;\n            console.log(this.rows);\n            this.pages = response.response.metadata;\n          } else {\n            this.rows = [];\n            this.pages = {};\n          }\n        } else {\n          this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        }\n      },\n      err => {\n        this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        console.error(err);\n      }\n      // display error\n    );\n  }\n  // End of the above code\n  viewDiagnostic(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/diagnostics/view-diagnostics'], { queryParams: { productId: data.productId} });\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  editDiagnostic(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/diagnostics/add-edit-diagnostics'], { queryParams: { productId: data.productId, type: 'edit'}});\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  deleteDiagnostic(data) {\n    if (!!data && !!data.productId && data.productId !== '') {\n      const isConfirmed = confirm('Do you seriously want to delete product having Product ID :' + data.productId);\n      if (isConfirmed === true) {\n        const request = {\n          productId: data.productId\n        };\n        const removediagnosticQueryStr = ProductUtilities.generateQueryString(request);\n        this.inventoryService.removeDiagnosticProduct(removediagnosticQueryStr).subscribe(\n          response => {\n            if (!!response && response.success === true) {\n              this.toastrService.showSuccess('Success', response.response.message);\n              this.getDiagnosticListingData();\n            } else {\n              this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n            }\n          },\n          err => {\n            console.error(err);\n            this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n          }\n        );\n      }\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong. Please try again later!!!');\n    }\n  }\n  // Method : to set pagination for list items\n  setPage(event) {\n    this.filterObj.currentPage = event.page;\n    this.navigateUser();\n  }\n  // End of the Above code\n}\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Diagnostics Listing</h1>\n      <form class=\"d-none d-sm-inline-block form-inline ml-auto ml-md-3 my-2 my-md-0 mw-100 w-25\" [formGroup]=\"searchForm\">\n         <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control small\" placeholder=\"Search for...\" aria-label=\"Search\" formControlName=\"search\">\n            <div class=\"input-group-append\">\n               <button class=\"btn btn-primary\" type=\"button\">\n               <i class=\"fa fa-search fa-sm\"></i>\n               </button>\n            </div>\n         </div>\n      </form>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" data-toggle=\"modal\" data-target=\"#filterModal\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i> Filter</a> -->\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/diagnostics/add-edit-diagnostics']\" [queryParams]=\"{ type: 'add'}\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add New Diagnostics</a> -->\n   </div>\n       <div class=\"row pb-4\" *ngIf=\"!!rows && !!pages\">\n         <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"card shadow mb-4\">\n               <ngx-datatable\n                  class=\"material striped\"\n                  [rows]=\"rows\"\n                  [columnMode]=\"ColumnMode.force\"\n                  [headerHeight]=\"50\"\n                  [footerHeight]=\"50\"\n                  [rowHeight]=\"auto\"\n                  [loadingIndicator]=\"loadingIndicator\"\n                  [externalPaging]=\"true\"\n                  [count]=\"pages.totalCount\"\n                  [offset]=\"pages.currentPage\"\n                  [limit]=\"pages.pageSize\"\n                  (page)=\"setPage($event)\"\n                  >\n                  <ngx-datatable-column name=\"S No\" prop=\"s_no\" [width]=\"100\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product ID\" prop=\"productId\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product Name\" prop=\"productName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Category\" prop=\"category\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Subcategory\" prop=\"subcategory\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"MRP\" prop=\"mrp\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Availability\" prop=\"availabilityStatus\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"InStock\" prop=\"inStock\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.inStock === true\">Yes</span>\n                        <span *ngIf=\"row.inStock === false\">No</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Actions\" prop=\"product_id\" [sortable]=false [width]=\"250\">\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span class=\"mx-1 \"></span>\n                        <button class=\"btn btn-sm btn-outline-info btn-icon mx-1\" (click)=\"viewDiagnostic(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View Category\"><i class=\"fa fa-eye\"></i></button>\n                        <!-- <button class=\"btn btn-sm btn-outline-warning btn-icon mx-1\" (click)=\"editDiagnostic(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Edit Category\"><i class=\"fa fa-edit\"></i></button> -->\n                        <button class=\"btn btn-sm btn-outline-danger btn-icon mx-1\" (click)=\"deleteDiagnostic(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete Category\"><i class=\"fa fa-trash\"></i></button>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-footer *ngIf=\"!!pages.totalCount\">\n                     <ng-template\n                        ngx-datatable-footer-template\n                        let-rowCount=\"rowCount\"\n                        let-pageSize=\"pageSize\"\n                        let-count=\"totalCount\"\n                        let-selectedCount=\"selectedCount\"\n                        let-curPage=\"curPage\"\n                        let-offset=\"offset\"\n                        >\n                        <div class=\"w-25\" style=\"padding: 5px 10px\">\n                           <div> Showing {{((curPage - 1) * pageSize) + 1 }} - {{pageSize > rowCount ? rowCount : ((pageSize * curPage) > rowCount ? rowCount : pageSize * curPage)}} products of {{rowCount}} Diagnostics </div>\n                        </div>\n                        <datatable-pager\n                        [pagerLeftArrowIcon]=\"'datatable-icon-left'\"\n                        [pagerRightArrowIcon]=\"'datatable-icon-right'\"\n                        [pagerPreviousIcon]=\"'datatable-icon-prev'\"\n                        [pagerNextIcon]=\"'datatable-icon-skip'\"\n                        [page]=\"curPage\"\n                        [size]=\"pageSize\"\n                        [count]=\"rowCount\"\n                        [hidden]=\"!((rowCount / pageSize) > 1)\"\n                        (change)=\"setPage($event)\">\n                        </datatable-pager>\n                     </ng-template>\n                  </ngx-datatable-footer>\n               </ngx-datatable>\n            </div>\n         </div>\n      </div>\n</div>\n<!-- <div class=\"modal fade\" id=\"filterModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"filterModalLabel\" aria-hidden=\"true\">\n   <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form class=\"user\">\n         <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"filterModalLabel\">Filter</h5>\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n            </button>\n         </div>\n         <div class=\"modal-body\">\n            <div class=\"row pb-5\">\n               <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"form-row\">\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"services\">Services</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendortype\">Vendor Type*</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendorcategory\">Vendor Category</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"modal-footer\">\n            <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n            <button class=\"btn btn-secondary w-25\" type=\"submit\">Apply</button>\n         </div>\n         </form>\n      </div>\n   </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\n\n@Component({\n  selector: 'app-view-diagnostics',\n  templateUrl: './view-diagnostics.component.html',\n  styleUrls: ['./view-diagnostics.component.scss']\n})\nexport class ViewDiagnosticsComponent {\n  sub: any;\n  productId: string;\n  responseCode = ResponseCode;\n  diagnosticDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService,\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      if (!!params.productId && params.productId !== '') {\n      this.productId = params.productId;\n      this.getdiagnosticData(this.productId);\n      }\n    });\n  }\n  // Method: to fetch Vendor Detail data from BE\n  getdiagnosticData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const diagnosticQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getDiagnosticDetailById(diagnosticQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.diagnosticDetails = response.response.data;\n            console.log(this.diagnosticDetails);\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/diagnostics'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  onNavigate(data) {\n    console.log(data);\n    if (!!data) {\n      const url = '' + data;\n      window.open(url, '_blank');\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong, Please try again later !!!');\n    }\n}\n}\n // End of code\n\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Diagnostics Details</h1>\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/diagnostics']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <!-- Page Body -->\n   <div class=\"row pb-4\" *ngIf=\"!!diagnosticDetails && diagnosticDetails !== null\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <div class=\"card shadow p-4\">\n            <div class=\"table-responsive-sm\">\n               <table class=\"table table-bordered\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <span><strong>Vendor ID: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.vendorId && diagnosticDetails.vendorId !== '' ? diagnosticDetails.vendorId : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Test Name: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.testName && diagnosticDetails.testName !== '' ? diagnosticDetails.testName : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Type: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.type && diagnosticDetails.type !== '' ? diagnosticDetails.type : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Test Included: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.testIncludedDetails && diagnosticDetails.testIncludedDetails !== '' ? diagnosticDetails.testIncludedDetails : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Test Code: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.testCode && diagnosticDetails.testCode !== '' ? diagnosticDetails.testCode : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Tags: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.tags && diagnosticDetails.tags !== '' ? diagnosticDetails.tags : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>SSP Margin(%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.SSP_Margin && diagnosticDetails.SSP_Margin !== '' ? diagnosticDetails.SSP_Margin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>SS Margin(%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.category && diagnosticDetails.category !== '' ? diagnosticDetails.category : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Discount (%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.discount && diagnosticDetails.discount !== '' ? diagnosticDetails.discount : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Cost To Company: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.costToCompany && diagnosticDetails.costToCompany !== '' ? diagnosticDetails.costToCompany : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>GST(%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.gst && diagnosticDetails.gst !== '' ? diagnosticDetails.gst : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Creation Date: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.createdAt && diagnosticDetails.createdAt !== ''\">{{diagnosticDetails.createdAt | date: 'dd-MM-yyyy'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.createdAt && diagnosticDetails.createdAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Method: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.method && diagnosticDetails.method !== '' ? diagnosticDetails.method : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>MRP: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.mrp && diagnosticDetails.mrp !== '' ? diagnosticDetails.mrp : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Available: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"diagnosticDetails?.isAvailable === true\">Yes</span>\n                           <span class=\"float-right\" *ngIf=\"diagnosticDetails?.isAvailable === false\">No</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Sub-Category: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.subcategory && diagnosticDetails.subcategory !== '' ? diagnosticDetails.subcategory : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Category: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.category && diagnosticDetails.category !== '' ? diagnosticDetails.category : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>No. of Test: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.noOfTests && diagnosticDetails.noOfTests !== '' ? diagnosticDetails.noOfTests : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Precautions: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.precautions && diagnosticDetails.precautions !== '' ? diagnosticDetails.precautions : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Result Time: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.resultTime && diagnosticDetails.resultTime !== '' ? diagnosticDetails.resultTime : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Total Margin: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.totalMargin && diagnosticDetails.totalMargin !== '' ? diagnosticDetails.totalMargin : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Schedule: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.schedule && diagnosticDetails.schedule !== '' ? diagnosticDetails.schedule : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>SKU: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.sku && diagnosticDetails.sku !== '' ? diagnosticDetails.sku : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Sample Type: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.sampleType && diagnosticDetails.sampleType !== '' ? diagnosticDetails.sampleType : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Updated At: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.updatedAt && diagnosticDetails.updatedAt !== ''\">{{diagnosticDetails.updatedAt | date: 'medium'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.updatedAt && diagnosticDetails.updatedAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n               <table class=\"table table-bordered image-table\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <p><strong>Test Image: </strong></p>\n                           <div *ngIf=\"diagnosticDetails?.testImages.length != 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of diagnosticDetails?.testImages;\">\n                              <img src=\"{{item}}\" alt=\"{{diagnosticDetails?.testName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                              <img src=\"../../../../../assets/img/PDF.svg\" alt=\"{{diagnosticDetails?.testName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                              </a>\n                           </div>\n                           <div *ngIf=\"diagnosticDetails?.testImages.length === 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"../../../../../assets/img/dummy.png\">\n                              <img src=\"../../../../../assets/img/dummy.png\" alt=\"Dummy Image\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n            </div>\n            <div class=\"text-left my-2 d-block\">\n               <p class=\"text-muted\"><small>*NA : Not Available</small></p>\n            </div>\n         </div>\n      </div>\n   </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { IOption } from 'ng-select';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { of } from 'rxjs';\nimport { isNumeric } from 'rxjs/util/isNumeric';\ndeclare var $:any;\n@Component({\n  selector: 'app-ace-medicine',\n  templateUrl: './ace-medicine.component.html',\n  styleUrls: ['./ace-medicine.component.scss']\n})\nexport class AceMedicineComponent implements OnInit {\n  today: Date;\n  maxDate: Date;\n  minDate: Date;\n  vendordetailsForm: FormGroup;\n  submitted = false;\n  fileDatapancard: string [] = [];\n  fileDatagst: string [] = [];\n  fileDatacertificate: string [] = [];\n  fileDataotherdocs: string [] = [];\n  previewUrlcertificate = [];\n  previewUrlgst = [];\n  previewUrlpancard = [];\n  previewUrlotherdocs = [];\n  typeDropdownData: Array<IOption> = [];\n  categoryDropdownData: Array<IOption> = [];\n  serviceDropdownData: Array<IOption> = [];\n  dropdownData: any = {};\n  sub: any;\n  vendorDataFormType: string;\n  vendorId: string;\n  pincode_state: any;\n  vendorDetails: any;\n  fileDatavendorlogo: File;\n  previewUrlvendorlogo: any;\n  fileDataprofphoto: File;\n  previewUrlprofphoto: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      this.vendorDataFormType = params.type;\n      if ( this.vendorDataFormType !== 'add') {\n        if (!!params.vendorId && params.vendorId !== '') {\n          this.vendorId = params.vendorId;\n          this.getServiceDropdownData();\n        }\n      } \n      else {\n        this.bindAddForm();\n        this.gettypeDropdown();\n        this.getServiceDropdownData();\n      }\n    });\n    this.today = new Date();\n    this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 2);\n  }\n  ngOnInit() {\n    \n  }\n  ngAfterViewInit() {\n    $(document).ready(function() {\n      $(document).on('change', '.custom-file-input', function (event) {\n        $(this).next('.custom-file-label').html(event.target.files[0].name);\n    })\n    });\n}\n  fileProgressgst(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlgst.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatagst.push(event.target.files[i]);\n      }\n  }\n  fileProgresscertificate(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlcertificate.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatacertificate.push(event.target.files[i]);\n      }\n  }\n  fileProgresspancard(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlpancard.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatapancard.push(event.target.files[i]);\n      }\n  }\n  fileProgressotherdoc(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlotherdocs.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDataotherdocs.push(event.target.files[i]);\n      }\n  }\n  fileProgressvendorlogo(fileInput: any) {\n    this.fileDatavendorlogo = <File>fileInput.target.files[0];\n    const mimeType = this.fileDatavendorlogo.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDatavendorlogo);\n    reader.onload = (_event) => {\n      this.previewUrlvendorlogo = reader.result;\n    }\n  }\n  fileProgressvendorprofphoto(fileInput: any) {\n    this.fileDataprofphoto = <File>fileInput.target.files[0];\n    const mimeType = this.fileDataprofphoto.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDataprofphoto);\n    reader.onload = (_event) => {\n      this.previewUrlprofphoto = reader.result;\n    }\n  }\n  // Method: to bind and map fields data for adding data to category list\n  bindAddForm() {\n    this.vendordetailsForm = this.formBuilder.group({\n      type: ['', Validators.required],\n      category: ['', Validators.required],\n      services: ['', Validators.required],\n      vendorName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: ['', [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: ['', [Validators.required, Validators.email]],\n      personalEmail: ['', [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: ['', Validators.required],\n      certificationAuthorties: ['', Validators.required],\n      certificationDate: ['', Validators.required],\n      panCard: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: ['', Validators.required],\n      branchcity: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [''],\n      defaultDiscountPercentage: ['', [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [false],\n      pancardFile: [null, Validators.required],\n      regCertificateFile: [null, Validators.required],\n      gstDocumentFile: [null, Validators.required],\n      otherDocs: [null],\n      vendorLogo: [null, Validators.required],\n      profilePhoto: [null, Validators.required],\n    });\n    this.vendordetailsForm.controls['pincode'].valueChanges.debounceTime(200).switchMap(term => of(term)).subscribe(change => {\n      if (this.vendordetailsForm.controls['pincode'].valid) {\n        this.getpincodeData(this.vendordetailsForm.controls['pincode'].value);\n      } else {\n        console.log('Invalid Pincode.');\n      }\n    });\n  }\n  // End of above code\n  // Method: to bind and map fields data for adding data to category list\n  bindEditForm(data) {\n    this.getCategoryByid(data.type);\n    this.vendordetailsForm = this.formBuilder.group({\n      type: [data.type, Validators.required],\n      category: [data.category, Validators.required],\n      services: [data.services, Validators.required],\n      vendorName: [data.vendorName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: [data.contactPersonName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: [data.mobile, [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: [data.secondaryMobile, [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: [data.officialEmail, [Validators.required, Validators.email]],\n      personalEmail: [data.personalEmail, [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: [data.location.state, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: [data.location.city, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: [data.location.pincode, [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: [data.location.steet_address_1, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: [data.location.steet_address_2, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: [data.gstNumber, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: [data.certificationNumber, Validators.required],\n      certificationAuthorties: [data.certificationAuthorties, Validators.required],\n      certificationDate: [data.certificationDate, Validators.required],\n      panCard: [data.panCard, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: [data.financialDetails.bankName, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: [data.financialDetails.branchName, Validators.required],\n      branchcity: [data.financialDetails.city , [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: [data.financialDetails.accountNumber, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: [data.financialDetails.ifsc, [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: [data.financialDetails.holderName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [data.financialDetails.UPI],\n      defaultDiscountPercentage: [data.defaultDiscountPercentage, [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [data.panelRequired],\n      pancardFile: [null],\n      regCertificateFile: [null],\n      gstDocumentFile: [null],\n      otherDocs: [null],\n      vendorLogo: [null],\n      profilePhoto: [null],\n    });\n  }\n  // End of above code\n  // convenience getter for easy access to form fields\n  get vendorcheckout() { return this.vendordetailsForm.controls; }\n  onSubmit(formData) {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.vendordetailsForm.invalid) {\n      this.toastrService.showWarning('Missing Data', 'Check the entry again!');\n      return;\n    } else {\n      if (!!formData.valid && formData.valid === true) {\n        const formData = new FormData();\n        for (var i = 0; i < this.fileDatapancard.length; i++) {\n          formData.append(\"pancardFile\", !!this.fileDatapancard[i] ? this.fileDatapancard[i] : null);\n        }\n        for (var i = 0; i < this.fileDatacertificate.length; i++) {\n          formData.append(\"regCertificateFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDatagst.length; i++) {\n          formData.append(\"gstDocumentFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDataotherdocs.length; i++) {\n          formData.append(\"otherDocs\", !!this.fileDataotherdocs[i] ? this.fileDataotherdocs[i] : null);\n        }\n        if (!!this.fileDatavendorlogo) {\n          formData.append('vendorLogo', !!this.fileDatavendorlogo ? this.fileDatavendorlogo : null);\n        }\n        if (!!this.fileDataprofphoto) {\n          formData.append('profilePhoto', !!this.fileDataprofphoto ? this.fileDataprofphoto : null);\n        }\n        formData.append('type', this.vendordetailsForm.get('type').value);\n        formData.append('category', this.vendordetailsForm.get('category').value);\n        formData.append('services', JSON.stringify(this.vendordetailsForm.get('services').value));\n        formData.append('vendorName', this.vendordetailsForm.get('vendorName').value);\n        formData.append('contactPersonName', this.vendordetailsForm.get('contactPersonName').value);\n        formData.append('mobile', this.vendordetailsForm.get('mobile').value);\n        formData.append('secondaryMobile', this.vendordetailsForm.get('secondaryMobile').value);\n        formData.append('officialEmail', this.vendordetailsForm.get('officialEmail').value);\n        formData.append('personalEmail', this.vendordetailsForm.get('personalEmail').value);\n        const tempLocation = {\n          country: this.vendordetailsForm.get('country').value,\n          state: this.vendordetailsForm.get('state').value,\n          city: this.vendordetailsForm.get('city').value,\n          steet_address_1: this.vendordetailsForm.get('street_address_1').value,\n          steet_address_2: this.vendordetailsForm.get('street_address_2').value,\n          pincode: this.vendordetailsForm.get('pincode').value,\n          latlong: null,\n        };\n        formData.append('location', JSON.stringify(tempLocation));\n        const tempFinancial = {\n          bankName: this.vendordetailsForm.get('bankName').value,\n          branchName: this.vendordetailsForm.get('branchName').value,\n          city: this.vendordetailsForm.get('branchcity').value,\n          accountNumber: this.vendordetailsForm.get('accountNumber').value,\n          holderName: this.vendordetailsForm.get('holderName').value,\n          ifsc: this.vendordetailsForm.get('ifsc').value,\n          UPI: this.vendordetailsForm.get('UPIId').value\n        };\n        formData.append('financialDetails', JSON.stringify(tempFinancial));\n        formData.append('gstNumber', this.vendordetailsForm.get('gstNumber').value);\n        formData.append('certificationNumber', this.vendordetailsForm.get('certificationNumber').value);\n        formData.append('certificationAuthorties', this.vendordetailsForm.get('certificationAuthorties').value);\n        const pipe = new DatePipe('en-US');\n        formData.append('certificationDate', pipe.transform(this.vendordetailsForm.get('certificationDate').value, 'dd-MM-yyyy'));\n        formData.append('panCard', this.vendordetailsForm.get('panCard').value);\n        formData.append('defaultDiscountPercentage', this.vendordetailsForm.get('defaultDiscountPercentage').value);\n        formData.append('panelRequired', this.vendordetailsForm.get('panelRequired').value);\n        if (this.vendorDataFormType === 'edit') {\n          formData.append('vendorId', this.vendorId);\n          this.inventoryService.editVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/medicine'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        } else {\n          this.inventoryService.saveVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/medicine'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        }\n      }\n    }\n}\n\nonReset() {\n    this.submitted = false;\n    this.vendordetailsForm.reset();\n}\ngettypeDropdown() {\n  const typeQueryStr = 'name=VENDOR_TYPES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.typeDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.typeDropdownData = [];\n        console.log('No Type Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.getVendorData(this.vendorId);\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetCategoryByid(data) {\n  this.categoryDropdownData = [...[]];\n  let tempDataString = data.replaceAll(' ', '_');\n  tempDataString = data.replaceAll('\"', '');\n  const typeQueryStr = 'name=' + tempDataString;\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.categoryDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.categoryDropdownData = [];\n        console.log('No Category Coming from the BE');\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetServiceDropdownData() {\n  const typeQueryStr = 'name=VENDOR_SERVICES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.serviceDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.serviceDropdownData = [];\n        console.log('No Sub Category Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.gettypeDropdown();\n      }\n    },\n    err => console.error(err)\n  );\n}\n  // Method: to fetch Vendor Detail data from BE\n  getVendorData(cId) {\n    const queryObj = {\n      vendorId: cId\n    }\n    const vendorQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getVendorDetailById(vendorQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.bindEditForm(response.response.data);\n            this.vendorDetails = response.response.data;\n            this.previewUrlvendorlogo = response.response.data.vendorLogoUrl;\n            this.previewUrlprofphoto = response.response.data.vendorProfileUrl;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/medicine'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  // Method: to fetch Pincode Detail data from BE\n  getpincodeData(enteredpincode) {\n    const queryObj = {\n      pincode: enteredpincode\n    }\n    const pincodeQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getpincodedetails(pincodeQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            console.log(response.response.data);\n            this.pincode_state = response.response.data.state;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n}\n","<!-- Add Vendor -->\n<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" *ngIf=\"!!vendorDataFormType && vendorDataFormType !== ''\">\n      <h1 class=\"h3 mb-0 text-gray-800 text-capitalize\">{{vendorDataFormType}} Medicine</h1>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i class=\"fa fa-upload fa-sm text-white-50\"></i> Import/Export</a> -->\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/medicine']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <div class=\"row pb-5\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <form class=\"user needs-validation\" novalidate [formGroup]=\"vendordetailsForm\" #vendorForm=\"ngForm\" (ngSubmit)=\"onSubmit(vendorForm)\" *ngIf=\"vendordetailsForm\">\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!serviceDropdownData && serviceDropdownData.length > 0\">\n                     <label for=\"services\">Services<span>*</span></label>\n                     <ng-select\n                     [options]=\"serviceDropdownData\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     [multiple]=\"true\"\n                     [closeOnSelect]=\"false\"\n                     [searchable]=\"true\"\n                     placeholder=\"Select Services\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"services\"\n                     name=\"services\"\n                     id=\"services\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.services.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.services.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.services.errors.required\">Service is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!typeDropdownData && typeDropdownData.length > 0\">\n                     <label for=\"vendortype\">Medicine Type<span>*</span></label>\n                     <ng-select\n                     [options]=\"typeDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Vendor type\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"type\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"type\"\n                     id=\"type\"\n                     class=\"form-control bg-light custom\"\n                     (ngModelChange)=\"getCategoryByid(vendordetailsForm.value.type)\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.type.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.type.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.type.errors.required\">Type is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!categoryDropdownData && categoryDropdownData.length > 0\">\n                     <label for=\"vendorcategory\">Medicine Category<span>*</span></label>\n                     <ng-select\n                     [options]=\"categoryDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Category\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"category\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"category\"\n                     id=\"vendorcategory\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.category.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.category.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.category.errors.required\">Category is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendorname\">Medicine Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"vendorname\" placeholder=\"John Doe\" formControlName=\"vendorName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.vendorName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.required\">Name is required</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.pattern\">Name should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.minlength\">Name should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendormob\">Medicine Mobile<span>*</span></label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"mobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"vendormob\" placeholder=\"Mob.\" aria-describedby=\"mobilecodeprepend\" formControlName=\"mobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.mobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.mobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.mobile.errors.required\">Mobile No. is required</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendoremail\">Medicine Email<span>*</span></label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"vendoremail\" placeholder=\"Email\" formControlName=\"officialEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.officialEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.officialEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.required\">Email is required</div>\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"contactpersonname\">Contact Person Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"contactpersonname\" placeholder=\"Name\" formControlName=\"contactPersonName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.contactPersonName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.contactPersonName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.required\">Contact Person Name is required</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"secondarymobile\">Secondary Mobile Number</label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"secondarymobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"secondarymobile\" placeholder=\"Mob.\" aria-describedby=\"secondarymobilecodeprepend\" formControlName=\"secondaryMobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.secondaryMobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.secondaryMobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"personalemail\">Person Email</label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"personalemail\" placeholder=\"Email\" formControlName=\"personalEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.personalEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.personalEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.personalEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address1\">Address 1<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address1\" placeholder=\"Street Address 1\" formControlName=\"steet_address_1\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_1.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_1.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.required\">Address Line 1 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address2\">Address 2<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address2\" placeholder=\"Street Address 2\" formControlName=\"steet_address_2\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_2.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_2.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.required\">Address Line 2 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"city\">City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"city\" placeholder=\"City\" formControlName=\"city\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.city.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.city.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.city.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"state\">State/ UT<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"state\" placeholder=\"State\" formControlName=\"state\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.state.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.state.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.state.errors.required\">State is required</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"country\">Country<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"country\" placeholder=\"India\" formControlName=\"country\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.country.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.country.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.country.errors.required\">Country is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pincode\">Pincode<span>*</span></label>\n                     <input type=\"text\" minlength=\"6\" maxlength=\"6\" class=\"form-control bg-light\" id=\"pincode\" placeholder=\"Pincode\" formControlName=\"pincode\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pincode.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.pincode.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.pincode.errors.required\">Pincode is required</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.pattern\">Pincode is invalid</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.minlength\">Pincode should be minimum 6 digits</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.maxlength\">Pincode should be maximum 6 digits</div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationdate\">Date of Certification<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationdate\" placeholder=\"DD-MM-YYYY\" bsDatepicker [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY', containerClass: 'theme-dark-blue', isAnimated: true }\" [maxDate]=\"today\" formControlName=\"certificationDate\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationDate.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationDate.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationDate.errors.required\">Date is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationno\">Certification No.<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationno\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification No.\" formControlName=\"certificationNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationNumber.errors.required\">Certification Number is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificateauthority\">Certification Authority<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificateauthority\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification Authority\" formControlName=\"certificationAuthorties\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationAuthorties.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationAuthorties.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationAuthorties.errors.required\">Certification Authority is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"gstinno\">GSTIN No<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"gstinno\" placeholder=\"GSTIN No\" formControlName=\"gstNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.gstNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.required\">GSTIN No. is required</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pancardno\">PAN Card<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"pancardno\" placeholder=\"ABHDE0000UT\" formControlName=\"panCard\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.panCard.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.panCard.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.panCard.errors.required\">PanCard No. is required</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"margin\">Margin</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"margin\" placeholder=\"18%\" formControlName=\"defaultDiscountPercentage\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.defaultDiscountPercentage.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.defaultDiscountPercentage.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.defaultDiscountPercentage.errors.pattern\">Should be only numeric/decimal</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"bankname\">Bank Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"bankname\" placeholder=\"Bank Name\" formControlName=\"bankName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.bankName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.bankName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.bankName.errors.required\">Bank Name is required</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankbranch\">Bank Branch<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"bankbranch\" placeholder=\"Bank Branch\" formControlName=\"branchName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchName.errors.required\">Bank Branch Name is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankcity\">Branch City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"bankcity\" placeholder=\"City\" formControlName=\"branchcity\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchcity.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchcity.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"ifsccode\">IFSC Code<span>*</span></label>\n                     <input type=\"email\" minlength=\"5\" maxlength=\"15\" class=\"form-control bg-light\" id=\"ifsccode\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"IFSC Code\" formControlName=\"ifsc\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.ifsc.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.ifsc.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.required\">IFSC is required</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.minlength\">Should be minimum 5 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountholder\">Account Holder’s Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"accountholder\" placeholder=\"Account Holder’s Name\" formControlName=\"holderName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.holderName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.holderName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.holderName.errors.required\">Account Holder Name is required</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountnumber\">Account Number<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"accountnumber\" placeholder=\"123-456-8910-1122\" formControlName=\"accountNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.accountNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.accountNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.required\">Account No. is required</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.pattern\">Should contain only numbers</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.minlength\">Should be minimum 2 number</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"upiid\">UPI ID</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"upiid\" placeholder=\"abc@oksbi\" formControlName=\"UPIId\">\n                  </div>\n               </div>\n               <div class=\"form-check\">\n                  <div class=\"form-group m-auto\">\n                     <input type=\"checkbox\" formControlName=\"panelRequired\" id=\"panelRequired\" class=\"form-check-input\" formControlName=\"panelRequired\"/>\n                     <label for=\"panelRequired\" class=\"form-check-label\">Panel Required</label>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload PAN Card Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadpancard\" (change)=\"fileProgresspancard($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"pancardFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pancardFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadpancard\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.pancardFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.pancardFile.errors.required\">PAN Card should be uploaded</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlpancard;\">\n                           <img [src]=\"url\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.panCardUrl.length != 0 && !(!!previewUrlpancard && previewUrlpancard.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.panCardUrl;\">\n                           <img [src]=\"item\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload GSTIN Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadgstindoc\" (change)=\"fileProgressgst($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"gstDocumentFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstDocumentFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadgstindoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.gstDocumentFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.gstDocumentFile.errors.required\">GSTIN Proof Doc required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlgst;\">\n                           <img [src]=\"url\" alt=\"GST Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.gstNumberUrl.length != 0 && !(!!previewUrlgst && previewUrlgst.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.gstNumberUrl;\">\n                           <img [src]=\"item\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Certificate Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadcertificatedoc\" (change)=\"fileProgresscertificate($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"regCertificateFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.regCertificateFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadcertificatedoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.regCertificateFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.regCertificateFile.errors.required\">Certificate Proof Required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlcertificate;\">\n                           <img [src]=\"url\" alt=\"Certificate Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.certificationUrl.length != 0 && !(!!previewUrlcertificate && previewUrlcertificate.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.certificationUrl;\">\n                           <img [src]=\"item\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                      </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Logo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorlogo\" (change)=\"fileProgressvendorlogo($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"vendorLogo\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorLogo.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorlogo\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.vendorLogo.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.vendorLogo.errors.required\">Vendor Logo is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlvendorlogo && previewUrlvendorlogo !== ''\">\n                           <img [src]=\"previewUrlvendorlogo\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Profile Photo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorprofilephoto\" (change)=\"fileProgressvendorprofphoto($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"profilePhoto\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.profilePhoto.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorprofilephoto\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.profilePhoto.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.profilePhoto.errors.required\">Vendor Profile Pic is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlprofphoto && previewUrlprofphoto !== ''\">\n                           <img [src]=\"previewUrlprofphoto\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Other Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadotherdocs\" (change)=\"fileProgressotherdoc($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"otherDocs\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadotherdocs\">Choose file...</label>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlotherdocs;\">\n                           <img [src]=\"url\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.otherDocumentsUrl.length != 0 && !(!!previewUrlotherdocs && previewUrlotherdocs.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.otherDocumentsUrl;\">\n                           <img [src]=\"item\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-row\">\n            <div class=\"col-md-6\">\n               <button class=\"btn btn-secondary w-25\" type=\"submit\">Submit</button>\n               <button class=\"btn btn-outline-secondary mx-2 w-25\" type=\"button\" (click)=\"onReset()\" [routerLink]=\"['/app/inventory/medicine']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\">Cancel</button>\n            </div>\n         </div>\n         </form>\n      </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {IOption} from 'ng-select';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { SelectionType, ColumnMode } from '@swimlane/ngx-datatable';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport 'rxjs/Rx';\nimport { of } from 'rxjs';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-medicine-listing',\n  templateUrl: './medicine-listing.component.html',\n  styleUrls: ['./medicine-listing.component.scss']\n})\nexport class MedicineListingComponent implements OnInit {\n  cities2 = [\n    {id: 1, name: 'Vilnius'},\n    {id: 2, name: 'Kaunas'},\n    {id: 3, name: 'Pavilnys', disabled: true},\n    {id: 4, name: 'Pabradė'},\n    {id: 5, name: 'Klaipėda'}\n];\nselectService: string[];\n  display = 'none';\n  responseCode = ResponseCode;\n  SelectionType = SelectionType;\n  enableSummary = true;\n  summaryPosition = 'top';\n  pages: any;\n  rows: any;\n  selected = [];\n  ColumnMode = ColumnMode;\n  // object: for mapping label with api fields\n  columns = [\n    { name: 'S No', prop: 's_no' },\n    { name: 'Product ID', prop: 'productId'},\n    { name: 'Product Name', prop: 'productName' },\n    { name: 'Category', prop: 'category'},\n    { name: 'Sub Category', prop: 'subcategory' },\n    { name: 'Precription', prop: 'prescriptionRequired'},\n    { name: 'MRP', prop: 'mrp' },\n    { name: 'Stocky Status', prop: 'inStock'},\n    { name: 'Availability', prop: 'availabilityStatus'},\n  ];\n  searchField: FormControl;\n  searchForm: FormGroup;\n  filterObj = {\n    search: '',\n    pageSize: 50,\n    currentPage: 1,\n    sort_by: '',\n    sort_type: ''\n  };\n  LIMITS = [\n    { name: '10', id: 10 },\n    { name: '25', id: 25 },\n    { name: '50', id: 50 },\n    { name: '100', id: 100 }\n  ];\n  limit: number = this.filterObj.pageSize;\n  sub: any;\n  constructor(private inventoryService: InventoryService,\n              private toastrService: ProductToasterService,\n              private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router) {\n                this.searchField = new FormControl();\n                this.searchForm = fb.group({search: this.searchField});\n                this.searchField.valueChanges\n                  .debounceTime(400)\n                  .switchMap(term => of(term)).subscribe(result => {\n                    this.filterObj.search = result;\n                    this.navigateUser();\n                  });\n              }\n  ngOnInit() {\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.filterObj.search = params.search || '';\n        this.filterObj.pageSize = params.pageSize || '',\n        this.filterObj.currentPage = params.currentPage || '';\n        this.filterObj.sort_by = params.sort_by || '';\n        this.filterObj.sort_type = params.sort_type || '';\n        this.getMedicineListingData();\n      });\n  }\n  // Method: is used to Navigate user to a desired filter Page\n   navigateUser() {\n    const tempUrlQuery = ProductUtilities.generateQueryString(this.filterObj);\n    const tempLink = '/app/inventory/medicine?' + tempUrlQuery;\n    this.router.navigateByUrl(tempLink);\n  }\n  // End of the Above Code\n  // Method: which is used to fetch the medicine list from the BE\n  getMedicineListingData(){\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n          return;\n      }\n      window.scrollTo(0, 0);\n    });\n    const medicineQueryStr = ProductUtilities.generateQueryString(this.filterObj);\n    this.inventoryService.getMedicineList(medicineQueryStr).subscribe(\n      response => {\n        if (!!response && response.success === true) {\n          if (!!response.response.data && response.response.data.length > 0) {\n            this.rows = response.response.data;\n            this.pages = response.response.metadata;\n          } else {\n            this.rows = [];\n            this.pages = {};\n          }\n        } else {\n          this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        }\n      },\n      err => {\n        this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        console.error(err);\n      }\n      // display error\n    );\n  }\n  // End of the above code\n  viewMedicine(data) {\n    if (!!data.productId && data.productId !== '') {\n      this.router.navigate(['/app/inventory/medicine/view-medicine'], { queryParams: { productId: data.productId} });\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  editMedicine(data) {\n    if (!!data.productId && data.productId !== '') {\n      this.router.navigate(['/app/inventory/medicine/add-edit-medicine'], { queryParams: { productId: data.productId, type: 'edit'}});\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  deleteMedicine(data) {\n    if (!!data && !!data.productId && data.productId !== '') {\n      const isConfirmed = confirm('Do you seriously want to delete product having Product ID :' + data.productId);\n      if (isConfirmed === true) {\n        const request = {\n          productId: data.productId\n        };\n        const removemedicineQueryStr = ProductUtilities.generateQueryString(request);\n        this.inventoryService.removeMedicine(removemedicineQueryStr).subscribe(\n          response => {\n            if (!!response && response.success === true) {\n              this.toastrService.showSuccess('Success', response.response.message);\n              this.getMedicineListingData();\n            } else {\n              this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n            }\n          },\n          err => {\n            console.error(err);\n            this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n          }\n        );\n      }\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong. Please try again later!!!');\n    }\n  }\n  // Method : to set pagination for list items\n  setPage(event) {\n    this.filterObj.currentPage = event.page;\n    this.navigateUser();\n  }\n  // End of the Above code\n}\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Medicine Listing</h1>\n      <!-- <form class=\"d-none d-sm-inline-block form-inline ml-auto ml-md-3 my-2 my-md-0 mw-100 w-25\" [formGroup]=\"searchForm\">\n         <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control small\" placeholder=\"Search Medicine...\" aria-label=\"Search\" formControlName=\"search\">\n            <div class=\"input-group-append\">\n               <button class=\"btn btn-primary\" type=\"button\">\n               <i class=\"fa fa-search fa-sm\"></i>\n               </button>\n            </div>\n         </div>\n      </form> -->\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" data-toggle=\"modal\" data-target=\"#filterModal\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i> Filter</a> -->\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/medicine/add-edit-medicine']\" [queryParams]=\"{ type: 'add'}\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add New Medicine</a> -->\n   </div>\n       <div class=\"row pb-4\" *ngIf=\"!!rows && !!pages\">\n         <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"card shadow mb-4\">\n               <ngx-datatable\n                  class=\"material striped\"\n                  [rows]=\"rows\"\n                  [columnMode]=\"ColumnMode.force\"\n                  [headerHeight]=\"50\"\n                  [footerHeight]=\"50\"\n                  [rowHeight]=\"auto\"\n                  [loadingIndicator]=\"loadingIndicator\"\n                  [externalPaging]=\"true\"\n                  [count]=\"pages.totalCount\"\n                  [offset]=\"pages.currentPage\"\n                  [limit]=\"pages.pageSize\"\n                  (page)=\"setPage($event)\"\n                  >\n                  <ngx-datatable-column name=\"S No\" prop=\"s_no\" [width]=\"100\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product ID\" prop=\"productId\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product Name\" prop=\"productName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Category\" prop=\"category\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Subcategory\" prop=\"subcategory\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Prescription\" prop=\"prescriptionRequired\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.prescriptionRequired === true\">Required</span>\n                        <span *ngIf=\"row.prescriptionRequired === false\">Not Required</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"MRP\" prop=\"mrp\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Availability\" prop=\"availabilityStatus\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"InStock\" prop=\"inStock\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.inStock === true\">Yes</span>\n                        <span *ngIf=\"row.inStock === false\">No</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Actions\" prop=\"product_id\" [sortable]=false [width]=\"250\">\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span class=\"mx-1 \"></span>\n                        <button class=\"btn btn-sm btn-outline-info btn-icon mx-1\" (click)=\"viewMedicine(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View Category\"><i class=\"fa fa-eye\"></i></button>\n                        <!-- <button class=\"btn btn-sm btn-outline-warning btn-icon mx-1\" (click)=\"editMedicine(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Edit Category\"><i class=\"fa fa-edit\"></i></button> -->\n                        <button class=\"btn btn-sm btn-outline-danger btn-icon mx-1\" (click)=\"deleteMedicine(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete Category\"><i class=\"fa fa-trash\"></i></button>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-footer *ngIf=\"!!pages.totalCount\">\n                     <ng-template\n                        ngx-datatable-footer-template\n                        let-rowCount=\"rowCount\"\n                        let-pageSize=\"pageSize\"\n                        let-count=\"totalCount\"\n                        let-selectedCount=\"selectedCount\"\n                        let-curPage=\"curPage\"\n                        let-offset=\"offset\"\n                        >\n                        <div class=\"w-25\" style=\"padding: 5px 10px\">\n                           <div> Showing {{((curPage - 1) * pageSize) + 1 }} - {{pageSize > rowCount ? rowCount : ((pageSize * curPage) > rowCount ? rowCount : pageSize * curPage)}} medicine of {{rowCount}} Medicines </div>\n                        </div>\n                        <datatable-pager\n                        [pagerLeftArrowIcon]=\"'datatable-icon-left'\"\n                        [pagerRightArrowIcon]=\"'datatable-icon-right'\"\n                        [pagerPreviousIcon]=\"'datatable-icon-prev'\"\n                        [pagerNextIcon]=\"'datatable-icon-skip'\"\n                        [page]=\"curPage\"\n                        [size]=\"pageSize\"\n                        [count]=\"rowCount\"\n                        [hidden]=\"!((rowCount / pageSize) > 1)\"\n                        (change)=\"setPage($event)\">\n                        </datatable-pager>\n                     </ng-template>\n                  </ngx-datatable-footer>\n               </ngx-datatable>\n            </div>\n         </div>\n      </div>\n</div>\n<!-- <div class=\"modal fade\" id=\"filterModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"filterModalLabel\" aria-hidden=\"true\">\n   <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form class=\"user\">\n         <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"filterModalLabel\">Filter</h5>\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n            </button>\n         </div>\n         <div class=\"modal-body\">\n            <div class=\"row pb-5\">\n               <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"form-row\">\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"services\">Services</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendortype\">Vendor Type*</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendorcategory\">Vendor Category</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"modal-footer\">\n            <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n            <button class=\"btn btn-secondary w-25\" type=\"submit\">Apply</button>\n         </div>\n         </form>\n      </div>\n   </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\n\n@Component({\n  selector: 'app-view-medicine',\n  templateUrl: './view-medicine.component.html',\n  styleUrls: ['./view-medicine.component.scss']\n})\nexport class ViewMedicineComponent {\n  sub: any;\n  productId: string;\n  responseCode = ResponseCode;\n  medicineDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService,\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      if (!!params.productId && params.productId !== '') {\n      this.productId = params.productId;\n      this.getMedicineData(this.productId);\n      }\n    });\n  }\n  // Method: to fetch Vendor Detail data from BE\n  getMedicineData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const medicineQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getMedicineDetailById(medicineQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.medicineDetails = response.response.data;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/medicine'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  onNavigate(data) {\n    console.log(data);\n    if (!!data) {\n      const url = '' + data;\n      window.open(url, '_blank');\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong, Please try again later !!!');\n    }\n}\n}\n // End of code\n\n","<div class=\"container-fluid\">\n    <!-- Page Heading -->\n    <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n       <h1 class=\"h3 mb-0 text-gray-800\">Medicine Details</h1>\n       <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/medicine']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n    </div>\n    <!-- Page Body -->\n    <div class=\"row pb-4\" *ngIf=\"!!medicineDetails && medicineDetails !== null\">\n       <div class=\"col-xl-12 col-lg-12\">\n          <div class=\"card shadow p-4\">\n             <div class=\"table-responsive-sm\">\n                <table class=\"table table-bordered\">\n                   <tbody>\n                      <tr>\n                         <td>\n                            <span><strong>Vendor ID: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.vendorId && medicineDetails.vendorId !== '' ? medicineDetails.vendorId : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Vendor SKU : </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.vendorSku && medicineDetails.vendorSku !== '' ? medicineDetails.vendorSku : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Item Type: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.type && medicineDetails.type !== '' ? medicineDetails.type : 'NA'}}</span>\n                         </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>Medicine Name: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.itemName && medicineDetails.itemName !== '' ? medicineDetails.itemName : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Category: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.category && medicineDetails.category !== '' ? medicineDetails.category : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Subcategory: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.subcategory && medicineDetails.subcategory !== '' ? medicineDetails.subcategory : 'NA'}}</span>\n                         </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>MRP: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.mrp && medicineDetails.mrp !== '' ? medicineDetails.mrp : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Cost To Company: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.costToCompany && medicineDetails.costToCompany !== '' ? medicineDetails.costToCompany : 'NA'}}</span>\n                         </td>\n                         <td>\n                           <span><strong>GST (%): </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.gst && medicineDetails.gst !== '' ? medicineDetails.gst : 'NA'}}</span>\n                        </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>Packaging Type: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.packing && medicineDetails.packing !== '' ? medicineDetails.packing : 'NA'}}</span>\n                         </td>\n                         <td>\n                           <span><strong>Prescription Required?: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"medicineDetails?.prescriptionRequired === true\">Yes</span>\n                           <span class=\"float-right\" *ngIf=\"medicineDetails?.prescriptionRequired === false\">No</span>\n                        </td>\n                         <td>\n                            <span><strong>Salt Name: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.saltName && medicineDetails.saltName !== '' ? medicineDetails.saltName : 'NA'}}</span>\n                         </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>Total Margin: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.totalMargin && medicineDetails.totalMargin !== '' ? medicineDetails.totalMargin : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>SKU: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.sku && medicineDetails.sku !== '' ? medicineDetails.sku : 'NA'}}</span>\n                         </td>\n                         <td>\n                           <span><strong>Company: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.companyName && medicineDetails.companyName !== '' ? medicineDetails.companyName : 'NA'}}</span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                           <span><strong>Batch ID: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.batchId && medicineDetails.batchId !== '' ? medicineDetails.batchId : 'NA'}}</span>\n                        </td>\n                         <td>\n                            <span><strong>Available?: </strong></span>\n                            <span class=\"float-right\" *ngIf=\"medicineDetails?.isAvailable === true\">Yes</span>\n                            <span class=\"float-right\" *ngIf=\"medicineDetails?.isAvailable === false\">No</span>\n                         </td>\n                         <td>\n                           <span><strong>Status: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.availabilityStatus && medicineDetails.availabilityStatus !== '' ? medicineDetails.availabilityStatus : 'NA'}}</span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                           <span><strong>SSP Margin: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.SSP_Margin && medicineDetails.SSP_Margin !== '' ? medicineDetails.SSP_Margin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>SS Margin: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.SS_Margin && medicineDetails.SS_Margin !== '' ? medicineDetails.SS_Margin : 'NA'}}</span>\n                        </td>\n                      </tr>\n                   </tbody>\n                </table>\n                <table class=\"table table-bordered image-table\">\n                   <tbody>\n                      <tr>\n                         <td class=\"w-50\">\n                            <span><strong>Medicine Image: </strong></span>\n                         </td>\n                         <td class=\"w-50\">\n                           <div *ngIf=\"medicineDetails?.images.length != 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of medicineDetails?.images;\">\n                                 <img src=\"{{item}}\" alt=\"{{medicineDetails?.itemName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                                 <img src=\"../../../../../assets/img/PDF.svg\" alt=\"{{medicineDetails?.itemName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                              </a>\n                            </div>\n                            <div *ngIf=\"medicineDetails?.images.length === 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"../../../../../assets/img/dummy.png\">\n                                 <img src=\"../../../../../assets/img/dummy.png\" alt=\"Dummy Image\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                         </td>\n                      </tr>\n                   </tbody>\n                </table>\n             </div>\n             <div class=\"text-left my-2 d-block\">\n                <p class=\"text-muted\"><small>*NA : Not Available</small></p>\n             </div>\n          </div>\n       </div>\n    </div>\n </div>","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { IOption } from 'ng-select';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { of } from 'rxjs';\nimport { isNumeric } from 'rxjs/util/isNumeric';\ndeclare var $:any;\n@Component({\n  selector: 'app-ace-products',\n  templateUrl: './ace-products.component.html',\n  styleUrls: ['./ace-products.component.scss']\n})\nexport class AceProductsComponent implements OnInit {\n  today: Date;\n  maxDate: Date;\n  minDate: Date;\n  productdetailsForm: FormGroup;\n  submitted = false;\n  fileDataproductimg: string [] = [];\n  previewUrlproductimg = [];\n  typeDropdownData: Array<IOption> = [];\n  categoryDropdownData: Array<IOption> = [];\n  serviceDropdownData: Array<IOption> = [];\n  dropdownData: any = {};\n  sub: any;\n  productDataFormType: string;\n  productId: string;\n  productDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      this.productDataFormType = params.type;\n      if ( this.productDataFormType !== 'add') {\n        if (!!params.productId && params.productId !== '') {\n          this.productId = params.productId;\n          this.getServiceDropdownData();\n        }\n      } \n      else {\n        this.bindAddForm();\n        this.gettypeDropdown();\n        this.getServiceDropdownData();\n      }\n    });\n    this.today = new Date();\n    this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 2);\n  }\n  ngOnInit() {\n    \n  }\n  ngAfterViewInit() {\n    $(document).ready(function() {\n      $(document).on('change', '.custom-file-input', function (event) {\n        $(this).next('.custom-file-label').html(event.target.files[0].name);\n    })\n    });\n}\n  fileProgresspancard(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlproductimg.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDataproductimg.push(event.target.files[i]);\n      }\n  }\n  // Method: to bind and map fields data for adding data to category list\n  bindAddForm() {\n    this.productdetailsForm = this.formBuilder.group({\n      productImage: [null, Validators.required],\n      category: ['', Validators.required],\n      vendorId: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(8), Validators.pattern('^[0-9]*$')]],\n      productName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      productShortName: ['', [Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      brandName: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packagingType: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packageSize: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      productDescription: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      ingredients: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      highlights: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      productusage: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      effect: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      HSN: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      upc: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      vendorSKU: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      ssSKU: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      costToCompany: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      mrp: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      per_unit_price: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      weight: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      gst: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      totalMargin: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SS_Margin: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SSP_Margin: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      stock_status: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(1), Validators.pattern('^[0-9]*$')]],\n      product_availability: [false],\n      tax_exempt: [false],\n      action: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      direction: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      tags: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n\n      type: ['', Validators.required],\n      services: ['', Validators.required],\n    });\n  }\n  // End of above code\n  // Method: to bind and map fields data for adding data to category list\n  bindEditForm(data) {\n    this.getCategoryByid(data.type);\n    this.productdetailsForm = this.formBuilder.group({\n      productImage: [null],\n      category: [data.category, Validators.required],\n      vendorId: [data.vendorId, [Validators.required, Validators.maxLength(20), Validators.minLength(8), Validators.pattern('^[0-9]*$')]],\n      productName: [data.productName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      productShortName: [data.productShortName, [Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      brandName: [data.brandName, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packagingType: [data.packagingType , [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packageSize: [data.packageSize, [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      productDescription: [data.productDescription, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      ingredients: [data.ingredients, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      highlights: [data.highlights, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      productusage: [data.productusage, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      effect: [data.effect, [Validators.required, Validators.maxLength(100), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      HSN: [data.HSN, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      upc: [data.upc, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      vendorSKU: [data.sku, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      ssSKU: [data.ssSKU, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      costToCompany: [data.costToCompany, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      mrp: [data.mrp, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      per_unit_price: [data.per_unit_price, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      weight: [data.weight, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      gst: [data.gst, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      totalMargin: [data.totalMargin, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SS_Margin: [data.SS_Margin, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SSP_Margin: [data.SSP_Margin, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      stock_status: [data.stock_status, [Validators.required, Validators.maxLength(10), Validators.minLength(1), Validators.pattern('^[0-9]*$')]],\n      product_availability: [data.isAvailable],\n      tax_exempt: [data.tax_exempt],\n      action: [data.action, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      direction: [data.direction, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      tags: [data.tags, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n\n      type: [data.type, Validators.required],\n      services: [data.services, Validators.required],\n    });\n  }\n  // End of above code\n  // convenience getter for easy access to form fields\n  get productcheckout() { return this.productdetailsForm.controls; }\n  onSubmit(formData) {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.productdetailsForm.invalid) {\n      this.toastrService.showWarning('Missing Data', 'Check the entry again!');\n      return;\n    } else {\n      if (!!formData.valid && formData.valid === true) {\n        const formData = new FormData();\n        for (var i = 0; i < this.fileDataproductimg.length; i++) {\n          formData.append(\"productImage\", !!this.fileDataproductimg[i] ? this.fileDataproductimg[i] : null);\n        }\n        formData.append('category', this.productdetailsForm.get('category').value);\n        formData.append('productName', this.productdetailsForm.get('productName').value);\n        formData.append('productShortName', this.productdetailsForm.get('productShortName').value);\n        formData.append('brandName', this.productdetailsForm.get('brandName').value);\n        formData.append('mrp', this.productdetailsForm.get('mrp').value);\n        formData.append('per_unit_price', this.productdetailsForm.get('per_unit_price').value);\n        formData.append('weight', this.productdetailsForm.get('weight').value);\n        formData.append('productDescription', this.productdetailsForm.get('productDescription').value);\n        formData.append('action', this.productdetailsForm.get('action').value);\n        formData.append('direction', this.productdetailsForm.get('direction').value);\n        formData.append('tags', this.productdetailsForm.get('tags').value);\n        formData.append('ingredients', this.productdetailsForm.get('ingredients').value);\n        formData.append('highlights', this.productdetailsForm.get('highlights').value);\n        formData.append('productusage', this.productdetailsForm.get('productusage').value);\n        formData.append('effect', this.productdetailsForm.get('effect').value);\n        formData.append('vendorId', this.productdetailsForm.get('vendorId').value);\n        formData.append('packageSize', this.productdetailsForm.get('packageSize').value);\n        formData.append('HSN', this.productdetailsForm.get('HSN').value);\n        formData.append('upc', this.productdetailsForm.get('upc').value);\n        formData.append('vendorSKU', this.productdetailsForm.get('vendorSKU').value);\n        formData.append('ssSKU', this.productdetailsForm.get('ssSKU').value);\n        formData.append('gst', this.productdetailsForm.get('gst').value);\n        formData.append('totalMargin', this.productdetailsForm.get('totalMargin').value);\n        formData.append('SSP_Margin', this.productdetailsForm.get('SSP_Margin').value);\n        formData.append('SS_Margin', this.productdetailsForm.get('SS_Margin').value);\n        formData.append('costToCompany', this.productdetailsForm.get('costToCompany').value);\n        formData.append('packagingType', this.productdetailsForm.get('packagingType').value);\n        formData.append('stock_status', this.productdetailsForm.get('stock_status').value);\n        formData.append('product_availability', this.productdetailsForm.get('product_availability').value);\n        formData.append('tax_exempt', this.productdetailsForm.get('tax_exempt').value);\n\n        formData.append('type', this.productdetailsForm.get('type').value);\n        formData.append('services', JSON.stringify(this.productdetailsForm.get('services').value));\n        if (this.productDataFormType === 'edit') {\n          formData.append('productId', this.productId);\n          this.inventoryService.editProductData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/products'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        } else {\n          this.inventoryService.saveProductData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/products'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        }\n      }\n    }\n}\n\nonReset() {\n    this.submitted = false;\n    this.productdetailsForm.reset();\n}\ngettypeDropdown() {\n  const typeQueryStr = '?name=[\"Services\",\"VENDOR_TYPES\"]';\n  this.inventoryService.getENUMData(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.typeDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.typeDropdownData = [];\n        console.log('No Type Coming from the BE');\n      }\n      if ( this.productDataFormType !== 'add') {\n      this.getProductData(this.productId);\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetCategoryByid(data) {\n  this.categoryDropdownData = [...[]];\n  let tempDataString = data.replaceAll(' ', '_');\n  tempDataString = data.replaceAll('\"', '');\n  const typeQueryStr = 'name=' + tempDataString;\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.categoryDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.categoryDropdownData = [];\n        console.log('No Category Coming from the BE');\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetServiceDropdownData() {\n  const typeQueryStr = 'name=VENDOR_SERVICES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.serviceDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.serviceDropdownData = [];\n        console.log('No Sub Category Coming from the BE');\n      }\n      if ( this.productDataFormType !== 'add') {\n      this.gettypeDropdown();\n      }\n    },\n    err => console.error(err)\n  );\n}\n  // Method: to fetch Vendor Detail data from BE\n  getProductData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const productQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getProductDetailById(productQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.bindEditForm(response.response.data);\n            this.productDetails = response.response.data;\n            console.log(this.productDetails);\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/products'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n}\n","<!-- Add Vendor -->\n<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" *ngIf=\"!!productDataFormType && productDataFormType !== ''\">\n      <h1 class=\"h3 mb-0 text-gray-800 text-capitalize\">{{productDataFormType}} Product</h1>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i class=\"fa fa-upload fa-sm text-white-50\"></i> Import/Export</a> -->\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/products']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <div class=\"row pb-5\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <form class=\"user needs-validation\" novalidate [formGroup]=\"productdetailsForm\" #vendorForm=\"ngForm\" (ngSubmit)=\"onSubmit(vendorForm)\" *ngIf=\"productdetailsForm\">\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!serviceDropdownData && serviceDropdownData.length > 0\">\n                     <label for=\"services\">Services<span>*</span></label>\n                     <ng-select\n                     [options]=\"serviceDropdownData\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     [multiple]=\"true\"\n                     [closeOnSelect]=\"false\"\n                     [searchable]=\"true\"\n                     placeholder=\"Select Services\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"services\"\n                     name=\"services\"\n                     id=\"services\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && productcheckout.services.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && productcheckout.services.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.services.errors.required\">Service is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!typeDropdownData && typeDropdownData.length > 0\">\n                     <label for=\"vendortype\">Vendor Type<span>*</span></label>\n                     <ng-select\n                     [options]=\"typeDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Vendor type\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"type\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"type\"\n                     id=\"type\"\n                     class=\"form-control bg-light custom\"\n                     (ngModelChange)=\"getCategoryByid(productdetailsForm.value.type)\"\n                     [ngClass]=\"{ 'is-invalid': submitted && productcheckout.type.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && productcheckout.type.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.type.errors.required\">Type is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!categoryDropdownData && categoryDropdownData.length > 0\">\n                     <label for=\"productcategory\">Product Category<span>*</span></label>\n                     <ng-select\n                     [options]=\"categoryDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Category\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"category\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"category\"\n                     id=\"productcategory\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && productcheckout.category.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && productcheckout.category.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.category.errors.required\">Category is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendorId\">Vendor ID<span>*</span></label>\n                     <input type=\"text\" minlength=\"8\" maxlength=\"20\" class=\"form-control bg-light\" id=\"vendorId\" placeholder=\"26512735\" formControlName=\"vendorId\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.vendorId.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.vendorId.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.vendorId.errors.required\">Vendor ID is required</div>\n                        <div *ngIf=\"productcheckout.vendorId.errors.pattern\">Should contain only numbers</div>\n                        <div *ngIf=\"productcheckout.vendorId.errors.minlength\">Should be minimum 8 number</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productName\">Product Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"productName\" placeholder=\"Dettol-10ml\" formControlName=\"productName\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productName.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.productName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productName.errors.required\">Name is required</div>\n                        <div *ngIf=\"productcheckout.productName.errors.pattern\">Name should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.productName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productShortName\">Product Short Name</label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"productShortName\" placeholder=\"Name\" formControlName=\"productShortName\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productShortName.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.productShortName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productShortName.errors.pattern\">Name should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.productShortName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"brandName\">Brand Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"brandName\" placeholder=\"Cipla\" formControlName=\"brandName\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.brandName.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.brandName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.brandName.errors.required\">Brand Name is required</div>\n                        <div *ngIf=\"productcheckout.brandName.errors.pattern\">Name should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.brandName.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"packagingType\">Packaging Type<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"packagingType\" placeholder=\"Bottle\" formControlName=\"packagingType\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.packagingType.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.packagingType.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.packagingType.errors.required\">Packaging Type is required</div>\n                        <div *ngIf=\"productcheckout.packagingType.errors.pattern\">Should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.packagingType.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"packageSize\">Package Size<span>*</span></label>\n                     <input type=\"text\" minlength=\"5\" maxlength=\"15\" class=\"form-control bg-light\" id=\"packageSize\" placeholder=\"23 Inches.\" formControlName=\"packageSize\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.packageSize.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.packageSize.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.packageSize.errors.required\">Size is required</div>\n                        <div *ngIf=\"productcheckout.packageSize.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.packageSize.errors.minlength\">Should be minimum 5 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"weight\">Weight (in grams)<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"weight\" placeholder=\"15.5\" formControlName=\"weight\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.weight.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.weight.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.weight.errors.required\">Weight is required</div>\n                        <div *ngIf=\"productcheckout.weight.errors.pattern\">Only decimals/numbers</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"hsnno\">HSN No<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"hsnno\" placeholder=\"123299129\" formControlName=\"HSN\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.HSN.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.HSN.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.HSN.errors.required\">HSN No. is required</div>\n                        <div *ngIf=\"productcheckout.HSN.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.HSN.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"costToCompany\">Purchase Price<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"costToCompany\" placeholder=\"400\" formControlName=\"costToCompany\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.costToCompany.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.costToCompany.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.costToCompany.errors.required\">Purchase Price is required</div>\n                        <div *ngIf=\"productcheckout.costToCompany.errors.pattern\">Should be only numeric/decimal</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"gst\">GST<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"gst\" placeholder=\"18.00\" formControlName=\"gst\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.gst.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.gst.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.gst.errors.required\">GST is required</div>\n                        <div *ngIf=\"productcheckout.gst.errors.pattern\">GST is invalid</div>\n                        <div *ngIf=\"productcheckout.gst.errors.minlength\">GST should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.gst.errors.maxlength\">GST should be maximum 5 digits</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"mrp\">MRP<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"mrp\" placeholder=\"23\" formControlName=\"mrp\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.mrp.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.mrp.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.mrp.errors.required\">MRP is required</div>\n                        <div *ngIf=\"productcheckout.mrp.errors.pattern\">Only decimals/numbers</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"per_unit_price\">Price Per Unit<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"per_unit_price\" placeholder=\"24.5\" formControlName=\"per_unit_price\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.per_unit_price.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.per_unit_price.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.per_unit_price.errors.required\">Price Per Unit is required</div>\n                        <div *ngIf=\"productcheckout.per_unit_price.errors.pattern\">Only decimals/numbers</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"totalMargin\">Total Margin(%)<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"totalMargin\" placeholder=\"12\" formControlName=\"totalMargin\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.totalMargin.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.totalMargin.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.totalMargin.errors.required\">Total Margin(%) is required</div>\n                        <div *ngIf=\"productcheckout.totalMargin.errors.pattern\">Total Margin(%) is invalid</div>\n                        <div *ngIf=\"productcheckout.totalMargin.errors.minlength\">Total Margin(%) should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.totalMargin.errors.maxlength\">Total Margin(%) should be maximum 5 digits</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"stock_status\">Stock Status<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"10\" class=\"form-control bg-light\" id=\"stock_status\" placeholder=\"100\" formControlName=\"stock_status\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.stock_status.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.stock_status.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.stock_status.errors.required\">Stock Status is required</div>\n                        <div *ngIf=\"productcheckout.stock_status.errors.pattern\">Stock Status should be numeric</div>\n                        <div *ngIf=\"productcheckout.stock_status.errors.minlength\">Stock Status should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.stock_status.errors.maxlength\">Stock Status should be maximum 10 digits</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"vendorSKU\">Vendor SKU<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"vendorSKU\" placeholder=\"JI88\" formControlName=\"vendorSKU\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.vendorSKU.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.vendorSKU.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.vendorSKU.errors.required\">Vendor SKU is required</div>\n                        <div *ngIf=\"productcheckout.vendorSKU.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.vendorSKU.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"ssSKU\">SS SKU<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"ssSKU\" placeholder=\"IP9\" formControlName=\"ssSKU\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.ssSKU.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.ssSKU.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.ssSKU.errors.required\">SS SKU is required</div>\n                        <div *ngIf=\"productcheckout.ssSKU.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.ssSKU.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"SS_Margin\">SS_Margin(%)<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"SS_Margin\" placeholder=\"12\" formControlName=\"SS_Margin\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.SS_Margin.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.SS_Margin.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.required\">SS_Margin is required</div>\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.pattern\">SS_Margin is invalid</div>\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.minlength\">SS_Margin should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.maxlength\">SS_Margin should be maximum 5 digits</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"SSP_Margin\">SSP_Margin(%)<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"SSP_Margin\" placeholder=\"43\" formControlName=\"SSP_Margin\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.SSP_Margin.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.SSP_Margin.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.required\">SSP_Margin is required</div>\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.pattern\">SSP_Margin is invalid</div>\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.minlength\">SSP_Margin should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.maxlength\">SSP_Margin should be maximum 5 digits</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"ingredients\">Ingredients<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Calcium\" id=\"ingredients\" formControlName=\"ingredients\" name=\"ingredients\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.ingredients.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.ingredients.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.ingredients.errors.required\">Ingredients is required</div>\n                        <div *ngIf=\"productcheckout.ingredients.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.ingredients.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"effect\">Product Side Effects<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"2\" maxlength=\"100\" placeholder=\"NA\" id=\"effect\" formControlName=\"effect\" name=\"effect\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.effect.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.effect.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.effect.errors.required\">Cannot be blank</div>\n                        <div *ngIf=\"productcheckout.effect.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.effect.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"upc\">Universal Product Code<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"upc\" placeholder=\"USDJS9832983\" formControlName=\"upc\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.upc.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.upc.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.upc.errors.required\">UPC is required</div>\n                        <div *ngIf=\"productcheckout.upc.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.upc.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productusage\">Product Usage<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Daily\" id=\"productusage\" formControlName=\"productusage\" name=\"productusage\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productusage.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.productusage.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productusage.errors.required\">Usage is required</div>\n                        <div *ngIf=\"productcheckout.productusage.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.productusage.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"highlights\">Product Highlights<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"NA\" id=\"highlights\" formControlName=\"highlights\" name=\"highlights\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.highlights.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.highlights.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.highlights.errors.required\">Cannot be blank</div>\n                        <div *ngIf=\"productcheckout.highlights.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.highlights.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productDescription\">Product Description<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Decription\" id=\"productDescription\" formControlName=\"productDescription\" name=\"productDescription\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productDescription.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.productDescription.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productDescription.errors.required\">Description is required</div>\n                        <div *ngIf=\"productcheckout.productDescription.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.productDescription.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"action\">Product Action<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Headache\" id=\"action\" formControlName=\"action\" name=\"action\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.action.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.action.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.action.errors.required\">Action is required</div>\n                        <div *ngIf=\"productcheckout.action.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.action.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"direction\">Product Direction<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Direction for use\" id=\"direction\" formControlName=\"direction\" name=\"direction\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.direction.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.direction.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.direction.errors.required\">Direction is required</div>\n                        <div *ngIf=\"productcheckout.direction.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.direction.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"tags\">Tags<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Cough\" id=\"tags\" formControlName=\"tags\" name=\"tags\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.tags.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.tags.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.tags.errors.required\">Tags is required</div>\n                        <div *ngIf=\"productcheckout.tags.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.tags.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-check ml-1\">\n                     <div class=\"form-group m-auto\">\n                        <input type=\"checkbox\" formControlName=\"product_availability\" id=\"product_availability\" class=\"form-check-input\"/>\n                        <label for=\"product_availability\" class=\"form-check-label\">Product Available</label>\n                     </div>\n                  </div>\n                  <div class=\"form-check ml-auto mr-1\">\n                     <div class=\"form-group m-auto\">\n                        <input type=\"checkbox\" formControlName=\"tax_exempt\" id=\"tax_exempt\" class=\"form-check-input\"/>\n                        <label for=\"tax_exempt\" class=\"form-check-label\">Tax Exempt</label>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Product Image<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadproductimg\" (change)=\"fileProgresspancard($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"productImage\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productImage.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadproductimg\">Choose file...</label>\n                        <div *ngIf=\"submitted && productcheckout.productImage.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"productcheckout.productImage.errors.required\">Images should be uploaded</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"productDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlproductimg;\">\n                           <img [src]=\"url\" alt=\"Product Image\" class=\"view-thumbnail-img\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"productDataFormType !== 'add' && !!productDetails && productDetails.productImages.length != 0 && !(!!previewUrlproductimg && previewUrlproductimg.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of productDetails?.productImages;\">\n                           <img [src]=\"item\" alt=\"Product Image\" class=\"view-thumbnail-img\">\n                        </a>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-row\">\n            <div class=\"col-md-6\">\n               <button class=\"btn btn-secondary w-25\" type=\"submit\">Submit</button>\n               <button class=\"btn btn-outline-secondary mx-2 w-25\" type=\"button\" (click)=\"onReset()\">Cancel</button>\n            </div>\n         </div>\n         </form>\n      </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {IOption} from 'ng-select';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { SelectionType, ColumnMode } from '@swimlane/ngx-datatable';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport 'rxjs/Rx';\nimport { of } from 'rxjs';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-products-listing',\n  templateUrl: './products-listing.component.html',\n  styleUrls: ['./products-listing.component.scss']\n})\nexport class ProductsListingComponent implements OnInit {\n  cities2 = [\n    {id: 1, name: 'Vilnius'},\n    {id: 2, name: 'Kaunas'},\n    {id: 3, name: 'Pavilnys', disabled: true},\n    {id: 4, name: 'Pabradė'},\n    {id: 5, name: 'Klaipėda'}\n];\nselectService: string[];\n  display = 'none';\n  responseCode = ResponseCode;\n  SelectionType = SelectionType;\n  enableSummary = true;\n  summaryPosition = 'top';\n  pages: any;\n  rows: any;\n  selected = [];\n  ColumnMode = ColumnMode;\n  // object: for mapping label with api fields\n  columns = [\n    { name: 'S No', prop: 's_no' },\n    { name: 'Product ID', prop: 'productId'},\n    { name: 'Product Name', prop: 'productName' },\n    { name: 'Stock', prop: 'inStock' },\n    { name: 'Category', prop: 'category'},\n    { name: 'Brand Name', prop: 'brandName'},\n    { name: 'Availability', prop: 'availabilityStatus'},\n  ];\n  searchField: FormControl;\n  searchForm: FormGroup;\n  filterObj = {\n    search: '',\n    pageSize: 50,\n    currentPage: 1,\n    sort_by: '',\n    sort_type: ''\n  };\n  LIMITS = [\n    { name: '10', id: 10 },\n    { name: '25', id: 25 },\n    { name: '50', id: 50 },\n    { name: '100', id: 100 }\n  ];\n  limit: number = this.filterObj.pageSize;\n  sub: any;\n  constructor(private inventoryService: InventoryService,\n              private toastrService: ProductToasterService,\n              private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router) {\n                this.searchField = new FormControl();\n                this.searchForm = fb.group({search: this.searchField});\n                this.searchField.valueChanges\n                  .debounceTime(400)\n                  .switchMap(term => of(term)).subscribe(result => {\n                    this.filterObj.search = result;\n                    this.navigateUser();\n                  });\n              }\n  ngOnInit() {\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.filterObj.search = params.search || '';\n        this.filterObj.pageSize = params.pageSize || '',\n        this.filterObj.currentPage = params.currentPage || '';\n        this.filterObj.sort_by = params.sort_by || '';\n        this.filterObj.sort_type = params.sort_type || '';\n        this.getProductListingData();\n      });\n  }\n  // Method: is used to Navigate user to a desired filter Page\n   navigateUser() {\n    const tempUrlQuery = ProductUtilities.generateQueryString(this.filterObj);\n    const tempLink = '/app/inventory/products?' + tempUrlQuery;\n    this.router.navigateByUrl(tempLink);\n  }\n  // End of the Above Code\n  // Method: which is used to fetch the products list from the BE\n  getProductListingData(){\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n          return;\n      }\n      window.scrollTo(0, 0);\n    });\n    const productQueryStr = ProductUtilities.generateQueryString(this.filterObj);\n    this.inventoryService.getProductList(productQueryStr).subscribe(\n      response => {\n        if (!!response && response.success === true) {\n          if (!!response.response.data && response.response.data.length > 0) {\n            this.rows = response.response.data;\n            console.log(this.rows);\n            this.pages = response.response.metadata;\n          } else {\n            this.rows = [];\n            this.pages = {};\n          }\n        } else {\n          this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        }\n      },\n      err => {\n        this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        console.error(err);\n      }\n      // display error\n    );\n  }\n  // End of the above code\n  viewProduct(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/products/view-products'], { queryParams: { productId: data.productId} });\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  editProduct(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/products/add-edit-products'], { queryParams: { productId: data.productId, type: 'edit'}});\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  deleteProduct(data) {\n    if (!!data && !!data.productId && data.productId !== '') {\n      const isConfirmed = confirm('Do you seriously want to delete ' + data.productName + '?');\n      if (isConfirmed === true) {\n        const request = {\n          productId: data.productId\n        };\n        const removeproductQueryStr = ProductUtilities.generateQueryString(request);\n        this.inventoryService.removeProduct(removeproductQueryStr).subscribe(\n          response => {\n            if (!!response && response.success === true) {\n              this.toastrService.showSuccess('Success', response.response.message);\n              this.getProductListingData();\n            } else {\n              this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n            }\n          },\n          err => {\n            console.error(err);\n            this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n          }\n        );\n      }\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong. Please try again later!!!');\n    }\n  }\n  // Method : to set pagination for list items\n  setPage(event) {\n    this.filterObj.currentPage = event.page;\n    this.navigateUser();\n  }\n  // End of the Above code\n}\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Products Listing</h1>\n      <form class=\"d-none d-sm-inline-block form-inline ml-auto ml-md-3 my-2 my-md-0 mw-100 w-25\" [formGroup]=\"searchForm\">\n         <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control small\" placeholder=\"Search Products...\" aria-label=\"Search\" formControlName=\"search\">\n            <div class=\"input-group-append\">\n               <button class=\"btn btn-primary\" type=\"button\">\n               <i class=\"fa fa-search fa-sm\"></i>\n               </button>\n            </div>\n         </div>\n      </form>\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm mx-1 ml-auto\" data-toggle=\"modal\" data-target=\"#importProduct\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i> Import Product</a>\n      <button type=\"button\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/products/add-edit-products']\" [queryParams]=\"{ type: 'add'}\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add New Product</button>\n   </div>\n       <div class=\"row pb-4\" *ngIf=\"!!rows && !!pages\">\n         <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"card shadow mb-4\">\n               <ngx-datatable\n                  class=\"material striped\"\n                  [rows]=\"rows\"\n                  [columnMode]=\"ColumnMode.force\"\n                  [headerHeight]=\"50\"\n                  [footerHeight]=\"50\"\n                  [rowHeight]=\"auto\"\n                  [loadingIndicator]=\"loadingIndicator\"\n                  [externalPaging]=\"true\"\n                  [count]=\"pages.totalCount\"\n                  [offset]=\"pages.currentPage\"\n                  [limit]=\"pages.pageSize\"\n                  (page)=\"setPage($event)\"\n                  >\n                  <ngx-datatable-column name=\"Sr No.\" prop=\"s_no\" [width]=\"60\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product ID\" prop=\"productId\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product Name\" prop=\"productName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Category\" prop=\"category\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Brand\" prop=\"brandName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Availability\" prop=\"availabilityStatus\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"InStock\" prop=\"inStock\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.inStock === true\">Yes</span>\n                        <span *ngIf=\"row.inStock === false\">No</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Actions\" prop=\"product_id\" [sortable]=false [width]=\"250\">\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span class=\"mx-1 \"></span>\n                        <button class=\"btn btn-sm btn-outline-info btn-icon mx-1\" (click)=\"viewProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View Product\"><i class=\"fa fa-eye\"></i></button>\n                        <button class=\"btn btn-sm btn-outline-warning btn-icon mx-1\" (click)=\"editProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Edit Product\"><i class=\"fa fa-edit\"></i></button> \n                        <!-- <button class=\"btn btn-sm btn-outline-success btn-icon mx-1\" (click)=\"copyProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Copy Category\"><i class=\"fa fa-copy\"></i></button>  -->\n                        <button class=\"btn btn-sm btn-outline-danger btn-icon mx-1\" (click)=\"deleteProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete Product\"><i class=\"fa fa-trash\"></i></button>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-footer *ngIf=\"!!pages.totalCount\">\n                     <ng-template\n                        ngx-datatable-footer-template\n                        let-rowCount=\"rowCount\"\n                        let-pageSize=\"pageSize\"\n                        let-count=\"totalCount\"\n                        let-selectedCount=\"selectedCount\"\n                        let-curPage=\"curPage\"\n                        let-offset=\"offset\"\n                        >\n                        <div class=\"w-25\" style=\"padding: 5px 10px\">\n                           <div> Showing {{((curPage - 1) * pageSize) + 1 }} - {{pageSize > rowCount ? rowCount : ((pageSize * curPage) > rowCount ? rowCount : pageSize * curPage)}} product of {{rowCount}} Products </div>\n                        </div>\n                        <datatable-pager\n                        [pagerLeftArrowIcon]=\"'datatable-icon-left'\"\n                        [pagerRightArrowIcon]=\"'datatable-icon-right'\"\n                        [pagerPreviousIcon]=\"'datatable-icon-prev'\"\n                        [pagerNextIcon]=\"'datatable-icon-skip'\"\n                        [page]=\"curPage\"\n                        [size]=\"pageSize\"\n                        [count]=\"rowCount\"\n                        [hidden]=\"!((rowCount / pageSize) > 1)\"\n                        (change)=\"setPage($event)\">\n                        </datatable-pager>\n                     </ng-template>\n                  </ngx-datatable-footer>\n               </ngx-datatable>\n            </div>\n         </div>\n      </div>\n</div>\n<!-- <div class=\"modal fade\" id=\"filterModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"filterModalLabel\" aria-hidden=\"true\">\n   <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form class=\"user\">\n         <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"filterModalLabel\">Filter</h5>\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n            </button>\n         </div>\n         <div class=\"modal-body\">\n            <div class=\"row pb-5\">\n               <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"form-row\">\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"services\">Services</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendortype\">Vendor Type*</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendorcategory\">Vendor Category</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"modal-footer\">\n            <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n            <button class=\"btn btn-secondary w-25\" type=\"submit\">Apply</button>\n         </div>\n         </form>\n      </div>\n   </div>\n</div> -->\n<!-- Below code is for product import -->\n<div class=\"modal fade\" id=\"importProduct\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"importProduct\" aria-hidden=\"true\">\n   <!-- <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form>\n            <div class=\"modal-header\">\n               <h5 class=\"modal-title\" id=\"importProductLabel\">Import Product</h5>\n               <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n               <span aria-hidden=\"true\">×</span>\n               </button>\n            </div>\n            <div class=\"modal-body\">\n               <div class=\"row pb-5\">\n                  <div class=\"col-12 p-0\">\n                     <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                           <label>Upload File<span>*</span></label>\n                           <div class=\"custom-file mb-4\">\n                              <input  id=\"importxls\" type=\"file\" accept=\".xlsx, .xls\" name=\"importxls\" required class=\"custom-file-input\" (change)=\"fileProgresspancard($event)\" formControlName=\"importxls\">\n                              <label class=\"custom-file-label bg-light\" for=\"uploadproductimg\">Choose file...</label>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div class=\"modal-footer\">\n               <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n               <button class=\"btn btn-secondary w-25\" type=\"button\">Import</button>\n            </div>\n         </form>\n      </div>\n   </div> -->\n</div>\n<!-- End of the above code -->\n","import { Component, OnInit } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\n\n@Component({\n  selector: 'app-view-products',\n  templateUrl: './view-products.component.html',\n  styleUrls: ['./view-products.component.scss']\n})\nexport class ViewProductsComponent {\n  sub: any;\n  productId: string;\n  responseCode = ResponseCode;\n  productDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService,\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      if (!!params.productId && params.productId !== '') {\n      this.productId = params.productId;\n      this.getProductData(this.productId);\n      }\n    });\n  }\n  // Method: to fetch Vendor Detail data from BE\n  getProductData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const productsQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getProductDetailById(productsQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.productDetails = response.response.data;\n            console.log(this.productDetails);\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/products'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  onNavigate(data) {\n    console.log(data);\n    if (!!data) {\n      const url = '' + data;\n      window.open(url, '_blank');\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong, Please try again later !!!');\n    }\n}\n}\n // End of code\n\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Product Details</h1>\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/products']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <!-- Page Body -->\n   <div class=\"row pb-4\" *ngIf=\"!!productDetails && productDetails !== null\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <div class=\"card shadow p-4\">\n            <div class=\"table-responsive-sm\">\n               <table class=\"table table-bordered\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <span><strong>Product ID: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.sku && productDetails.sku !== '' ? productDetails.sku : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Vendor Name : </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.productName && productDetails.productName !== '' ? productDetails.productName : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Contact Person Name: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.productShortName && productDetails.productShortName !== '' ? productDetails.productShortName : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>HSN: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.HSN && productDetails.HSN !== '' ? productDetails.HSN : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Margin 1: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.SSP_Margin && productDetails.SSP_Margin !== '' ? productDetails.SSP_Margin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Margin 2: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.SS_Margin && productDetails.SS_Margin !== '' ? productDetails.SS_Margin : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>UPC: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.UPC && productDetails.UPC !== '' ? productDetails.UPC : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Action: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.action && productDetails.action !== '' ? productDetails.action : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Availability: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.availabilityStatus && productDetails.availabilityStatus !== '' ? productDetails.availabilityStatus : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Brand: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.brandName && productDetails.brandName !== '' ? productDetails.brandName : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Category: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.category && productDetails.category !== '' ? productDetails.category : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Created Date: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.createdAt && productDetails.createdAt !== ''\">{{productDetails.createdAt | date: 'dd-MM-yyyy'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.createdAt && productDetails.createdAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Cost to Company: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.costToCompany && productDetails.costToCompany !== '' ? productDetails.costToCompany : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Description: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.description && productDetails.description !== '' ? productDetails.description : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Direction: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.direction && productDetails.direction !== '' ? productDetails.direction : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Effects: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.effect && productDetails.effect !== '' ? productDetails.effect : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>GST: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.gst && productDetails.gst !== '' ? productDetails.gst : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Highlights: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.highlights && productDetails.highlights !== '' ? productDetails.highlights : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Indication: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.indication && productDetails.indication !== '' ? productDetails.indication : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Ingredients: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.ingredients && productDetails.ingredients !== '' ? productDetails.ingredients : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>MRP: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.mrp && productDetails.mrp !== '' ? productDetails.mrp : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Is Available: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"productDetails?.isAvailable === true\">Yes</span>\n                           <span class=\"float-right\" *ngIf=\"productDetails?.isAvailable === false\">No</span>\n                        </td>\n                        <td>\n                           <span><strong>Package Size: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.packageSize && productDetails.packageSize !== '' ? productDetails.packageSize : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Packaging Type: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.packagingType && productDetails.packagingType !== '' ? productDetails.packagingType : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Product Description: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.productDescription && productDetails.productDescription !== '' ? productDetails.productDescription : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Tags: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.tags && productDetails.tags !== '' ? productDetails.tags : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Targeted User: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.targetedUser && productDetails.targetedUser !== '' ? productDetails.targetedUser : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Total Margin: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.totalMargin && productDetails.totalMargin !== '' ? productDetails.totalMargin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Type: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.type && productDetails.type !== '' ? productDetails.type : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Updated At: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.updatedAt && productDetails.updatedAt !== ''\">{{productDetails.updatedAt | date: 'medium'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.updatedAt && productDetails.updatedAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Variant: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.variant && productDetails.variant !== '' ? productDetails.variant : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Vendor ID: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.vendorId && productDetails.vendorId !== '' ? productDetails.vendorId : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Weight: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.weight && productDetails.weight !== '' ? productDetails.weight : 'NA'}}</span>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n               <table class=\"table table-bordered image-table\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <p><strong>Product Images: </strong></p>\n                           <div *ngIf=\"productDetails?.productImages.length != 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of productDetails?.productImages;\">\n                              <img src=\"{{item}}\" alt=\"{{productDetails?.productName}}\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                           <div *ngIf=\"productDetails?.productImages.length === 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"../../../../../assets/img/dummy.png\">\n                              <img src=\"../../../../../assets/img/dummy.png\" alt=\"Dummy Image\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n            </div>\n            <div class=\"text-left my-2 d-block\">\n               <p class=\"text-muted\"><small>*NA : Not Available</small></p>\n            </div>\n         </div>\n      </div>\n   </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SelectModule } from 'ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ProductsListingComponent } from './components/products/products-listing/products-listing.component';\nimport { AceProductsComponent } from './components/products/ace-products/ace-products.component';\nimport { ViewProductsComponent } from './components/products/view-products/view-products.component';\nimport { DiagnosticsListingComponent } from './components/diagnostics/diagnostics-listing/diagnostics-listing.component';\nimport { AceDiagnosticsComponent } from './components/diagnostics/ace-diagnostics/ace-diagnostics.component';\nimport { ViewDiagnosticsComponent } from './components/diagnostics/view-diagnostics/view-diagnostics.component';\nimport { MedicineListingComponent } from './components/medicine/medicine-listing/medicine-listing.component';\nimport { AceMedicineComponent } from './components/medicine/ace-medicine/ace-medicine.component';\nimport { ViewMedicineComponent } from './components/medicine/view-medicine/view-medicine.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nconst inventoryRoutes: Routes = [\n  {\n    path: 'products', component: ProductsListingComponent\n  },\n  {\n    path: 'products/add-edit-products', component: AceProductsComponent\n  },\n  {\n    path: 'products/view-products', component: ViewProductsComponent\n  },\n  {\n    path: 'diagnostics', component: DiagnosticsListingComponent\n  },\n  {\n    path: 'diagnostics/add-edit-diagnostics', component: AceDiagnosticsComponent\n  },\n  {\n    path: 'diagnostics/view-diagnostics', component: ViewDiagnosticsComponent\n  },\n  {\n    path: 'medicine', component: MedicineListingComponent\n  },\n  {\n    path: 'medicine/add-edit-medicine', component: AceMedicineComponent\n  },\n  {\n    path: 'medicine/view-medicine', component: ViewMedicineComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    ProductsListingComponent,\n    AceProductsComponent,\n    ViewProductsComponent,\n    DiagnosticsListingComponent,\n    AceDiagnosticsComponent,\n    ViewDiagnosticsComponent,\n    MedicineListingComponent,\n    AceMedicineComponent,\n    ViewMedicineComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    SelectModule,\n    BsDatepickerModule.forRoot(),\n    RouterModule.forChild(inventoryRoutes)\n  ]\n})\nexport class InventoryModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from '../../../core/app-settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n  baseUrl = AppSettings.API_ENDPOINT;\n  constructor(private http: HttpClient) { }\n  // Method: declaring api to fetch product-listing data\n  getProductList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/allProducts' + queryStr);\n  }\n  // Method: declaring api to fetch diagnostic-listing data\n  getDiagnosticsList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/allDiagnosticProducts' + queryStr);\n  }\n  // Method: declaring api to fetch diagnostic-listing data\n  getMedicineList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/allMedicines' + queryStr);\n  }\n  // Method: getting Type from BE\n  gettypeDropdown(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'api/user/eproducts/get/getEnumByName' + queryStr);\n  }\n  // Method: getting Array from BE\n  getENUMData(queryStr) {\n    return this.http.get<any>(this.baseUrl + 'api/user/eproducts/get/getEnumByName' + queryStr);\n  }\n  // Method: Save Product Data from BE\n  saveProductData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/create/addProduct', data);\n  }\n  // Method: Edit Product Data from BE\n  editProductData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/update/product', data);\n  }\n  // Method: declaring api to view products details\n  getProductDetailById(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/getProductDetails' + queryStr);\n  }\n  // Method: declaring api to view diagnostic products details\n  getDiagnosticDetailById(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/getDiagnosticProductDetails' + queryStr);\n  }\n  // Method: declaring api to view diagnostic products details\n  getMedicineDetailById(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/getMedicineDetails' + queryStr);\n  }\n  // Method: declaring api to view item details\n  getpincodedetails(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'public/api/get/locationByPincode' + queryStr);\n  }\n  // Method: declaring api to delete product\n  removeProduct(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.delete<any>(this.baseUrl + 'admin/web/inventory/api/delete/removeProductById' + queryStr);\n  }\n  // Method: declaring api to delete diagnostic product\n  removeDiagnosticProduct(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.delete<any>(this.baseUrl + 'admin/web/inventory/api/delete/removeDiagnosticProductById' + queryStr);\n  }\n  // Method: declaring api to delete medicine\n  removeMedicine(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.delete<any>(this.baseUrl + 'admin/web/inventory/api/delete/removeMedicine' + queryStr);\n  }\n  // End of above code\n  // Method: declaring api to fetch items for category-listing\n  getCategoryList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'category-listing/' + queryStr);\n  }\n  // End of above cod\n  // Method: declaring api to fetch items for dropdown in categpry-add in category list\n  getCategoryDropdownData() {\n    return this.http.get<any>(this.baseUrl + 'category-create/');\n  }\n  // End of above code\n  // Method: declaring api to send data to add items to category-listing\n  saveCategoryData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'category-create/', data);\n  }\n  // End of above code\n  // Method: declaring api to edit data to add items to category-listing\n  editCategoryData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'category-edit/', data);\n  }\n\n  // Below Methpds are used for Temporary Use\n  getVendorDetailById(queryStr: string) {\n    if (!!queryStr) {\n        queryStr = '?' + queryStr;\n    } else {\n        queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/api/vendor/getVendorDetails' + queryStr);\n  }\n  saveVendorData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/create/addProduct', data);\n  }\n  editVendorData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/update/product', data);\n  }\n}\n"]}