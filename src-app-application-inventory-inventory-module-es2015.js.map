{"version":3,"sources":["./src/app/application/inventory/components/diagnostics/ace-diagnostics/ace-diagnostics.component.ts","./src/app/application/inventory/components/diagnostics/ace-diagnostics/ace-diagnostics.component.html","./src/app/application/inventory/components/diagnostics/diagnostics-listing/diagnostics-listing.component.ts","./src/app/application/inventory/components/diagnostics/diagnostics-listing/diagnostics-listing.component.html","./src/app/application/inventory/components/diagnostics/view-diagnostics/view-diagnostics.component.ts","./src/app/application/inventory/components/diagnostics/view-diagnostics/view-diagnostics.component.html","./src/app/application/inventory/components/medicine/ace-medicine/ace-medicine.component.ts","./src/app/application/inventory/components/medicine/ace-medicine/ace-medicine.component.html","./src/app/application/inventory/components/medicine/medicine-listing/medicine-listing.component.ts","./src/app/application/inventory/components/medicine/medicine-listing/medicine-listing.component.html","./src/app/application/inventory/components/medicine/view-medicine/view-medicine.component.ts","./src/app/application/inventory/components/medicine/view-medicine/view-medicine.component.html","./src/app/application/inventory/components/products/ace-products/ace-products.component.ts","./src/app/application/inventory/components/products/ace-products/ace-products.component.html","./src/app/application/inventory/components/products/products-listing/products-listing.component.ts","./src/app/application/inventory/components/products/products-listing/products-listing.component.html","./src/app/application/inventory/components/products/view-products/view-products.component.ts","./src/app/application/inventory/components/products/view-products/view-products.component.html","./src/app/application/inventory/inventory.module.ts","./src/app/application/inventory/services/InventoryService.ts"],"names":[],"mappings":"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","file":"src-app-application-inventory-inventory-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { IOption } from 'ng-select';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { of } from 'rxjs';\nimport { isNumeric } from 'rxjs/util/isNumeric';\ndeclare var $:any;\n@Component({\n  selector: 'app-ace-diagnostics',\n  templateUrl: './ace-diagnostics.component.html',\n  styleUrls: ['./ace-diagnostics.component.scss']\n})\nexport class AceDiagnosticsComponent implements OnInit {\n  today: Date;\n  maxDate: Date;\n  minDate: Date;\n  vendordetailsForm: FormGroup;\n  submitted = false;\n  fileDatapancard: string [] = [];\n  fileDatagst: string [] = [];\n  fileDatacertificate: string [] = [];\n  fileDataotherdocs: string [] = [];\n  previewUrlcertificate = [];\n  previewUrlgst = [];\n  previewUrlpancard = [];\n  previewUrlotherdocs = [];\n  typeDropdownData: Array<IOption> = [];\n  categoryDropdownData: Array<IOption> = [];\n  serviceDropdownData: Array<IOption> = [];\n  dropdownData: any = {};\n  sub: any;\n  vendorDataFormType: string;\n  vendorId: string;\n  pincode_state: any;\n  vendorDetails: any;\n  fileDatavendorlogo: File;\n  previewUrlvendorlogo: any;\n  fileDataprofphoto: File;\n  previewUrlprofphoto: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      this.vendorDataFormType = params.type;\n      if ( this.vendorDataFormType !== 'add') {\n        if (!!params.vendorId && params.vendorId !== '') {\n          this.vendorId = params.vendorId;\n          this.getServiceDropdownData();\n        }\n      } \n      else {\n        this.bindAddForm();\n        this.gettypeDropdown();\n        this.getServiceDropdownData();\n      }\n    });\n    this.today = new Date();\n    this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 2);\n  }\n  ngOnInit() {\n    \n  }\n  ngAfterViewInit() {\n    $(document).ready(function() {\n      $(document).on('change', '.custom-file-input', function (event) {\n        $(this).next('.custom-file-label').html(event.target.files[0].name);\n    })\n    });\n}\n  fileProgressgst(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlgst.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatagst.push(event.target.files[i]);\n      }\n  }\n  fileProgresscertificate(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlcertificate.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatacertificate.push(event.target.files[i]);\n      }\n  }\n  fileProgresspancard(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlpancard.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatapancard.push(event.target.files[i]);\n      }\n  }\n  fileProgressotherdoc(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlotherdocs.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDataotherdocs.push(event.target.files[i]);\n      }\n  }\n  fileProgressvendorlogo(fileInput: any) {\n    this.fileDatavendorlogo = <File>fileInput.target.files[0];\n    const mimeType = this.fileDatavendorlogo.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDatavendorlogo);\n    reader.onload = (_event) => {\n      this.previewUrlvendorlogo = reader.result;\n    }\n  }\n  fileProgressvendorprofphoto(fileInput: any) {\n    this.fileDataprofphoto = <File>fileInput.target.files[0];\n    const mimeType = this.fileDataprofphoto.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDataprofphoto);\n    reader.onload = (_event) => {\n      this.previewUrlprofphoto = reader.result;\n    }\n  }\n  // Method: to bind and map fields data for adding data to category list\n  bindAddForm() {\n    this.vendordetailsForm = this.formBuilder.group({\n      type: ['', Validators.required],\n      category: ['', Validators.required],\n      services: ['', Validators.required],\n      vendorName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: ['', [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: ['', [Validators.required, Validators.email]],\n      personalEmail: ['', [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: ['', Validators.required],\n      certificationAuthorties: ['', Validators.required],\n      certificationDate: ['', Validators.required],\n      panCard: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: ['', Validators.required],\n      branchcity: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [''],\n      defaultDiscountPercentage: ['', [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [false],\n      pancardFile: [null, Validators.required],\n      regCertificateFile: [null, Validators.required],\n      gstDocumentFile: [null, Validators.required],\n      otherDocs: [null],\n      vendorLogo: [null, Validators.required],\n      profilePhoto: [null, Validators.required],\n    });\n    this.vendordetailsForm.controls['pincode'].valueChanges.debounceTime(200).switchMap(term => of(term)).subscribe(change => {\n      if (this.vendordetailsForm.controls['pincode'].valid) {\n        this.getpincodeData(this.vendordetailsForm.controls['pincode'].value);\n      } else {\n        console.log('Invalid Pincode.');\n      }\n    });\n  }\n  // End of above code\n  // Method: to bind and map fields data for adding data to category list\n  bindEditForm(data) {\n    this.getCategoryByid(data.type);\n    this.vendordetailsForm = this.formBuilder.group({\n      type: [data.type, Validators.required],\n      category: [data.category, Validators.required],\n      services: [data.services, Validators.required],\n      vendorName: [data.vendorName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: [data.contactPersonName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: [data.mobile, [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: [data.secondaryMobile, [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: [data.officialEmail, [Validators.required, Validators.email]],\n      personalEmail: [data.personalEmail, [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: [data.location.state, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: [data.location.city, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: [data.location.pincode, [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: [data.location.steet_address_1, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: [data.location.steet_address_2, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: [data.gstNumber, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: [data.certificationNumber, Validators.required],\n      certificationAuthorties: [data.certificationAuthorties, Validators.required],\n      certificationDate: [data.certificationDate, Validators.required],\n      panCard: [data.panCard, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: [data.financialDetails.bankName, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: [data.financialDetails.branchName, Validators.required],\n      branchcity: [data.financialDetails.city , [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: [data.financialDetails.accountNumber, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: [data.financialDetails.ifsc, [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: [data.financialDetails.holderName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [data.financialDetails.UPI],\n      defaultDiscountPercentage: [data.defaultDiscountPercentage, [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [data.panelRequired],\n      pancardFile: [null],\n      regCertificateFile: [null],\n      gstDocumentFile: [null],\n      otherDocs: [null],\n      vendorLogo: [null],\n      profilePhoto: [null],\n    });\n  }\n  // End of above code\n  // convenience getter for easy access to form fields\n  get vendorcheckout() { return this.vendordetailsForm.controls; }\n  onSubmit(formData) {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.vendordetailsForm.invalid) {\n      this.toastrService.showWarning('Missing Data', 'Check the entry again!');\n      return;\n    } else {\n      if (!!formData.valid && formData.valid === true) {\n        const formData = new FormData();\n        for (var i = 0; i < this.fileDatapancard.length; i++) {\n          formData.append(\"pancardFile\", !!this.fileDatapancard[i] ? this.fileDatapancard[i] : null);\n        }\n        for (var i = 0; i < this.fileDatacertificate.length; i++) {\n          formData.append(\"regCertificateFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDatagst.length; i++) {\n          formData.append(\"gstDocumentFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDataotherdocs.length; i++) {\n          formData.append(\"otherDocs\", !!this.fileDataotherdocs[i] ? this.fileDataotherdocs[i] : null);\n        }\n        if (!!this.fileDatavendorlogo) {\n          formData.append('vendorLogo', !!this.fileDatavendorlogo ? this.fileDatavendorlogo : null);\n        }\n        if (!!this.fileDataprofphoto) {\n          formData.append('profilePhoto', !!this.fileDataprofphoto ? this.fileDataprofphoto : null);\n        }\n        formData.append('type', this.vendordetailsForm.get('type').value);\n        formData.append('category', this.vendordetailsForm.get('category').value);\n        formData.append('services', JSON.stringify(this.vendordetailsForm.get('services').value));\n        formData.append('vendorName', this.vendordetailsForm.get('vendorName').value);\n        formData.append('contactPersonName', this.vendordetailsForm.get('contactPersonName').value);\n        formData.append('mobile', this.vendordetailsForm.get('mobile').value);\n        formData.append('secondaryMobile', this.vendordetailsForm.get('secondaryMobile').value);\n        formData.append('officialEmail', this.vendordetailsForm.get('officialEmail').value);\n        formData.append('personalEmail', this.vendordetailsForm.get('personalEmail').value);\n        const tempLocation = {\n          country: this.vendordetailsForm.get('country').value,\n          state: this.vendordetailsForm.get('state').value,\n          city: this.vendordetailsForm.get('city').value,\n          steet_address_1: this.vendordetailsForm.get('street_address_1').value,\n          steet_address_2: this.vendordetailsForm.get('street_address_2').value,\n          pincode: this.vendordetailsForm.get('pincode').value,\n          latlong: null,\n        };\n        formData.append('location', JSON.stringify(tempLocation));\n        const tempFinancial = {\n          bankName: this.vendordetailsForm.get('bankName').value,\n          branchName: this.vendordetailsForm.get('branchName').value,\n          city: this.vendordetailsForm.get('branchcity').value,\n          accountNumber: this.vendordetailsForm.get('accountNumber').value,\n          holderName: this.vendordetailsForm.get('holderName').value,\n          ifsc: this.vendordetailsForm.get('ifsc').value,\n          UPI: this.vendordetailsForm.get('UPIId').value\n        };\n        formData.append('financialDetails', JSON.stringify(tempFinancial));\n        formData.append('gstNumber', this.vendordetailsForm.get('gstNumber').value);\n        formData.append('certificationNumber', this.vendordetailsForm.get('certificationNumber').value);\n        formData.append('certificationAuthorties', this.vendordetailsForm.get('certificationAuthorties').value);\n        const pipe = new DatePipe('en-US');\n        formData.append('certificationDate', pipe.transform(this.vendordetailsForm.get('certificationDate').value, 'dd-MM-yyyy'));\n        formData.append('panCard', this.vendordetailsForm.get('panCard').value);\n        formData.append('defaultDiscountPercentage', this.vendordetailsForm.get('defaultDiscountPercentage').value);\n        formData.append('panelRequired', this.vendordetailsForm.get('panelRequired').value);\n        if (this.vendorDataFormType === 'edit') {\n          formData.append('vendorId', this.vendorId);\n          this.inventoryService.editVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/diagnostics'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        } else {\n          this.inventoryService.saveVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/diagnostics'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        }\n      }\n    }\n}\n\nonReset() {\n    this.submitted = false;\n    this.vendordetailsForm.reset();\n}\ngettypeDropdown() {\n  const typeQueryStr = 'name=VENDOR_TYPES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.typeDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.typeDropdownData = [];\n        console.log('No Type Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.getVendorData(this.vendorId);\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetCategoryByid(data) {\n  this.categoryDropdownData = [...[]];\n  let tempDataString = data.replaceAll(' ', '_');\n  tempDataString = data.replaceAll('\"', '');\n  const typeQueryStr = 'name=' + tempDataString;\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.categoryDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.categoryDropdownData = [];\n        console.log('No Category Coming from the BE');\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetServiceDropdownData() {\n  const typeQueryStr = 'name=VENDOR_SERVICES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.serviceDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.serviceDropdownData = [];\n        console.log('No Sub Category Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.gettypeDropdown();\n      }\n    },\n    err => console.error(err)\n  );\n}\n  // Method: to fetch Vendor Detail data from BE\n  getVendorData(cId) {\n    const queryObj = {\n      vendorId: cId\n    }\n    const vendorQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getVendorDetailById(vendorQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.bindEditForm(response.response.data);\n            this.vendorDetails = response.response.data;\n            this.previewUrlvendorlogo = response.response.data.vendorLogoUrl;\n            this.previewUrlprofphoto = response.response.data.vendorProfileUrl;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/diagnostics/'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  // Method: to fetch Pincode Detail data from BE\n  getpincodeData(enteredpincode) {\n    const queryObj = {\n      pincode: enteredpincode\n    }\n    const pincodeQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getpincodedetails(pincodeQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            console.log(response.response.data);\n            this.pincode_state = response.response.data.state;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n}\n","<!-- Add Vendor -->\n<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" *ngIf=\"!!vendorDataFormType && vendorDataFormType !== ''\">\n      <h1 class=\"h3 mb-0 text-gray-800 text-capitalize\">{{vendorDataFormType}} Diagnostics</h1>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i class=\"fa fa-upload fa-sm text-white-50\"></i> Import/Export</a> -->\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/diagnostics']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <div class=\"row pb-5\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <form class=\"user needs-validation\" novalidate [formGroup]=\"vendordetailsForm\" #vendorForm=\"ngForm\" (ngSubmit)=\"onSubmit(vendorForm)\" *ngIf=\"vendordetailsForm\">\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!serviceDropdownData && serviceDropdownData.length > 0\">\n                     <label for=\"services\">Services<span>*</span></label>\n                     <ng-select\n                     [options]=\"serviceDropdownData\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     [multiple]=\"true\"\n                     [closeOnSelect]=\"false\"\n                     [searchable]=\"true\"\n                     placeholder=\"Select Services\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"services\"\n                     name=\"services\"\n                     id=\"services\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.services.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.services.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.services.errors.required\">Service is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!typeDropdownData && typeDropdownData.length > 0\">\n                     <label for=\"vendortype\">Vendor Type<span>*</span></label>\n                     <ng-select\n                     [options]=\"typeDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Vendor type\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"type\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"type\"\n                     id=\"type\"\n                     class=\"form-control bg-light custom\"\n                     (ngModelChange)=\"getCategoryByid(vendordetailsForm.value.type)\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.type.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.type.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.type.errors.required\">Type is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!categoryDropdownData && categoryDropdownData.length > 0\">\n                     <label for=\"vendorcategory\">Vendor Category<span>*</span></label>\n                     <ng-select\n                     [options]=\"categoryDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Category\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"category\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"category\"\n                     id=\"vendorcategory\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.category.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.category.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.category.errors.required\">Category is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendorname\">Vendor Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"vendorname\" placeholder=\"John Doe\" formControlName=\"vendorName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.vendorName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.required\">Name is required</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.pattern\">Name should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.minlength\">Name should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendormob\">Vendor Mobile<span>*</span></label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"mobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"vendormob\" placeholder=\"Mob.\" aria-describedby=\"mobilecodeprepend\" formControlName=\"mobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.mobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.mobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.mobile.errors.required\">Mobile No. is required</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendoremail\">Vendor Email<span>*</span></label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"vendoremail\" placeholder=\"Email\" formControlName=\"officialEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.officialEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.officialEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.required\">Email is required</div>\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"contactpersonname\">Contact Person Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"contactpersonname\" placeholder=\"Name\" formControlName=\"contactPersonName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.contactPersonName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.contactPersonName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.required\">Contact Person Name is required</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"secondarymobile\">Secondary Mobile Number</label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"secondarymobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"secondarymobile\" placeholder=\"Mob.\" aria-describedby=\"secondarymobilecodeprepend\" formControlName=\"secondaryMobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.secondaryMobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.secondaryMobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"personalemail\">Person Email</label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"personalemail\" placeholder=\"Email\" formControlName=\"personalEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.personalEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.personalEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.personalEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address1\">Address 1<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address1\" placeholder=\"Street Address 1\" formControlName=\"steet_address_1\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_1.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_1.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.required\">Address Line 1 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address2\">Address 2<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address2\" placeholder=\"Street Address 2\" formControlName=\"steet_address_2\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_2.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_2.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.required\">Address Line 2 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"city\">City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"city\" placeholder=\"City\" formControlName=\"city\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.city.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.city.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.city.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"state\">State/ UT<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"state\" placeholder=\"State\" formControlName=\"state\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.state.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.state.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.state.errors.required\">State is required</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"country\">Country<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"country\" placeholder=\"India\" formControlName=\"country\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.country.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.country.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.country.errors.required\">Country is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pincode\">Pincode<span>*</span></label>\n                     <input type=\"text\" minlength=\"6\" maxlength=\"6\" class=\"form-control bg-light\" id=\"pincode\" placeholder=\"Pincode\" formControlName=\"pincode\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pincode.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.pincode.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.pincode.errors.required\">Pincode is required</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.pattern\">Pincode is invalid</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.minlength\">Pincode should be minimum 6 digits</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.maxlength\">Pincode should be maximum 6 digits</div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationdate\">Date of Certification<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationdate\" placeholder=\"DD-MM-YYYY\" bsDatepicker [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY', containerClass: 'theme-dark-blue', isAnimated: true }\" [maxDate]=\"today\" formControlName=\"certificationDate\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationDate.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationDate.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationDate.errors.required\">Date is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationno\">Certification No.<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationno\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification No.\" formControlName=\"certificationNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationNumber.errors.required\">Certification Number is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificateauthority\">Certification Authority<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificateauthority\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification Authority\" formControlName=\"certificationAuthorties\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationAuthorties.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationAuthorties.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationAuthorties.errors.required\">Certification Authority is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"gstinno\">GSTIN No<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"gstinno\" placeholder=\"GSTIN No\" formControlName=\"gstNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.gstNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.required\">GSTIN No. is required</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pancardno\">PAN Card<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"pancardno\" placeholder=\"ABHDE0000UT\" formControlName=\"panCard\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.panCard.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.panCard.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.panCard.errors.required\">PanCard No. is required</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"margin\">Margin</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"margin\" placeholder=\"18%\" formControlName=\"defaultDiscountPercentage\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.defaultDiscountPercentage.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.defaultDiscountPercentage.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.defaultDiscountPercentage.errors.pattern\">Should be only numeric/decimal</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"bankname\">Bank Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"bankname\" placeholder=\"Bank Name\" formControlName=\"bankName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.bankName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.bankName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.bankName.errors.required\">Bank Name is required</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankbranch\">Bank Branch<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"bankbranch\" placeholder=\"Bank Branch\" formControlName=\"branchName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchName.errors.required\">Bank Branch Name is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankcity\">Branch City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"bankcity\" placeholder=\"City\" formControlName=\"branchcity\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchcity.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchcity.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"ifsccode\">IFSC Code<span>*</span></label>\n                     <input type=\"email\" minlength=\"5\" maxlength=\"15\" class=\"form-control bg-light\" id=\"ifsccode\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"IFSC Code\" formControlName=\"ifsc\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.ifsc.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.ifsc.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.required\">IFSC is required</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.minlength\">Should be minimum 5 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountholder\">Account Holder’s Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"accountholder\" placeholder=\"Account Holder’s Name\" formControlName=\"holderName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.holderName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.holderName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.holderName.errors.required\">Account Holder Name is required</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountnumber\">Account Number<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"accountnumber\" placeholder=\"123-456-8910-1122\" formControlName=\"accountNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.accountNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.accountNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.required\">Account No. is required</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.pattern\">Should contain only numbers</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.minlength\">Should be minimum 2 number</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"upiid\">UPI ID</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"upiid\" placeholder=\"abc@oksbi\" formControlName=\"UPIId\">\n                  </div>\n               </div>\n               <div class=\"form-check\">\n                  <div class=\"form-group m-auto\">\n                     <input type=\"checkbox\" formControlName=\"panelRequired\" id=\"panelRequired\" class=\"form-check-input\" formControlName=\"panelRequired\"/>\n                     <label for=\"panelRequired\" class=\"form-check-label\">Panel Required</label>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload PAN Card Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadpancard\" (change)=\"fileProgresspancard($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"pancardFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pancardFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadpancard\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.pancardFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.pancardFile.errors.required\">PAN Card should be uploaded</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlpancard;\">\n                           <img [src]=\"url\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.panCardUrl.length != 0 && !(!!previewUrlpancard && previewUrlpancard.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.panCardUrl;\">\n                           <img [src]=\"item\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload GSTIN Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadgstindoc\" (change)=\"fileProgressgst($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"gstDocumentFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstDocumentFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadgstindoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.gstDocumentFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.gstDocumentFile.errors.required\">GSTIN Proof Doc required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlgst;\">\n                           <img [src]=\"url\" alt=\"GST Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.gstNumberUrl.length != 0 && !(!!previewUrlgst && previewUrlgst.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.gstNumberUrl;\">\n                           <img [src]=\"item\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Certificate Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadcertificatedoc\" (change)=\"fileProgresscertificate($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"regCertificateFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.regCertificateFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadcertificatedoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.regCertificateFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.regCertificateFile.errors.required\">Certificate Proof Required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlcertificate;\">\n                           <img [src]=\"url\" alt=\"Certificate Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.certificationUrl.length != 0 && !(!!previewUrlcertificate && previewUrlcertificate.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.certificationUrl;\">\n                           <img [src]=\"item\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                      </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Logo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorlogo\" (change)=\"fileProgressvendorlogo($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"vendorLogo\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorLogo.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorlogo\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.vendorLogo.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.vendorLogo.errors.required\">Vendor Logo is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlvendorlogo && previewUrlvendorlogo !== ''\">\n                           <img [src]=\"previewUrlvendorlogo\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Profile Photo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorprofilephoto\" (change)=\"fileProgressvendorprofphoto($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"profilePhoto\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.profilePhoto.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorprofilephoto\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.profilePhoto.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.profilePhoto.errors.required\">Vendor Profile Pic is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlprofphoto && previewUrlprofphoto !== ''\">\n                           <img [src]=\"previewUrlprofphoto\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Other Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadotherdocs\" (change)=\"fileProgressotherdoc($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"otherDocs\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadotherdocs\">Choose file...</label>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlotherdocs;\">\n                           <img [src]=\"url\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.otherDocumentsUrl.length != 0 && !(!!previewUrlotherdocs && previewUrlotherdocs.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.otherDocumentsUrl;\">\n                           <img [src]=\"item\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-row\">\n            <div class=\"col-md-6\">\n               <button class=\"btn btn-secondary w-25\" type=\"submit\">Submit</button>\n               <button class=\"btn btn-outline-secondary mx-2 w-25\" type=\"button\" (click)=\"onReset()\" [routerLink]=\"['/app/inventory/diagnostics']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\">Cancel</button>\n            </div>\n         </div>\n         </form>\n      </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {IOption} from 'ng-select';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { SelectionType, ColumnMode } from '@swimlane/ngx-datatable';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport 'rxjs/Rx';\nimport { of } from 'rxjs';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-diagnostics-listing',\n  templateUrl: './diagnostics-listing.component.html',\n  styleUrls: ['./diagnostics-listing.component.scss']\n})\nexport class DiagnosticsListingComponent implements OnInit {\n  cities2 = [\n    {id: 1, name: 'Vilnius'},\n    {id: 2, name: 'Kaunas'},\n    {id: 3, name: 'Pavilnys', disabled: true},\n    {id: 4, name: 'Pabradė'},\n    {id: 5, name: 'Klaipėda'}\n];\nselectService: string[];\n  display = 'none';\n  responseCode = ResponseCode;\n  SelectionType = SelectionType;\n  enableSummary = true;\n  summaryPosition = 'top';\n  pages: any;\n  rows: any;\n  selected = [];\n  ColumnMode = ColumnMode;\n  // object: for mapping label with api fields\n  columns = [\n    { name: 'S No', prop: 's_no' },\n    { name: 'Product ID', prop: 'productId'},\n    { name: 'Product Name', prop: 'productName' },\n    { name: 'Category', prop: 'category'},\n    { name: 'Sub Category', prop: 'subcategory' },\n    { name: 'Date', prop: 'updatedAt'},\n    { name: 'Total Tests', prop: 'noOfTests' },\n    { name: 'MRP', prop: 'mrp' },\n    { name: 'Stocky Status', prop: 'inStock'},\n    { name: 'Availability', prop: 'availabilityStatus'},\n  ];\n  searchField: FormControl;\n  searchForm: FormGroup;\n  filterObj = {\n    search: '',\n    pageSize: 50,\n    currentPage: 1,\n    sort_by: '',\n    sort_type: ''\n  };\n  LIMITS = [\n    { name: '10', id: 10 },\n    { name: '25', id: 25 },\n    { name: '50', id: 50 },\n    { name: '100', id: 100 }\n  ];\n  limit: number = this.filterObj.pageSize;\n  sub: any;\n  constructor(private inventoryService: InventoryService,\n              private toastrService: ProductToasterService,\n              private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router) {\n                this.searchField = new FormControl();\n                this.searchForm = fb.group({search: this.searchField});\n                this.searchField.valueChanges\n                  .debounceTime(400)\n                  .switchMap(term => of(term)).subscribe(result => {\n                    this.filterObj.search = result;\n                    this.navigateUser();\n                  });\n              }\n  ngOnInit() {\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.filterObj.search = params.search || '';\n        this.filterObj.pageSize = params.pageSize || '',\n        this.filterObj.currentPage = params.currentPage || '';\n        this.filterObj.sort_by = params.sort_by || '';\n        this.filterObj.sort_type = params.sort_type || '';\n        this.getDiagnosticListingData();\n      });\n  }\n  // Method: is used to Navigate user to a desired filter Page\n   navigateUser() {\n    const tempUrlQuery = ProductUtilities.generateQueryString(this.filterObj);\n    const tempLink = '/app/inventory/diagnostics?' + tempUrlQuery;\n    this.router.navigateByUrl(tempLink);\n  }\n  // End of the Above Code\n  // Method: which is used to fetch the Diagnostics list from the BE\n  getDiagnosticListingData(){\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n          return;\n      }\n      window.scrollTo(0, 0);\n    });\n    const diagnosticQueryStr = ProductUtilities.generateQueryString(this.filterObj);\n    this.inventoryService.getDiagnosticsList(diagnosticQueryStr).subscribe(\n      response => {\n        if (!!response && response.success === true) {\n          if (!!response.response.data && response.response.data.length > 0) {\n            this.rows = response.response.data;\n            console.log(this.rows);\n            this.pages = response.response.metadata;\n          } else {\n            this.rows = [];\n            this.pages = {};\n          }\n        } else {\n          this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        }\n      },\n      err => {\n        this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        console.error(err);\n      }\n      // display error\n    );\n  }\n  // End of the above code\n  viewDiagnostic(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/diagnostics/view-diagnostics'], { queryParams: { productId: data.productId} });\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  editDiagnostic(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/diagnostics/add-edit-diagnostics'], { queryParams: { productId: data.productId, type: 'edit'}});\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  deleteDiagnostic(data) {\n    if (!!data && !!data.productId && data.productId !== '') {\n      const isConfirmed = confirm('Do you seriously want to delete product having Product ID :' + data.productId);\n      if (isConfirmed === true) {\n        const request = {\n          productId: data.productId\n        };\n        const removediagnosticQueryStr = ProductUtilities.generateQueryString(request);\n        this.inventoryService.removeDiagnosticProduct(removediagnosticQueryStr).subscribe(\n          response => {\n            if (!!response && response.success === true) {\n              this.toastrService.showSuccess('Success', response.response.message);\n              this.getDiagnosticListingData();\n            } else {\n              this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n            }\n          },\n          err => {\n            console.error(err);\n            this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n          }\n        );\n      }\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong. Please try again later!!!');\n    }\n  }\n  // Method : to set pagination for list items\n  setPage(event) {\n    this.filterObj.currentPage = event.page;\n    this.navigateUser();\n  }\n  // End of the Above code\n}\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Diagnostics Listing</h1>\n      <form class=\"d-none d-sm-inline-block form-inline ml-auto ml-md-3 my-2 my-md-0 mw-100 w-25\" [formGroup]=\"searchForm\">\n         <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control small\" placeholder=\"Search for...\" aria-label=\"Search\" formControlName=\"search\">\n            <div class=\"input-group-append\">\n               <button class=\"btn btn-primary\" type=\"button\">\n               <i class=\"fa fa-search fa-sm\"></i>\n               </button>\n            </div>\n         </div>\n      </form>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" data-toggle=\"modal\" data-target=\"#filterModal\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i> Filter</a> -->\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/diagnostics/add-edit-diagnostics']\" [queryParams]=\"{ type: 'add'}\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add New Diagnostics</a> -->\n   </div>\n       <div class=\"row pb-4\" *ngIf=\"!!rows && !!pages\">\n         <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"card shadow mb-4\">\n               <ngx-datatable\n                  class=\"material striped\"\n                  [rows]=\"rows\"\n                  [columnMode]=\"ColumnMode.force\"\n                  [headerHeight]=\"50\"\n                  [footerHeight]=\"50\"\n                  [rowHeight]=\"auto\"\n                  [loadingIndicator]=\"loadingIndicator\"\n                  [externalPaging]=\"true\"\n                  [count]=\"pages.totalCount\"\n                  [offset]=\"pages.currentPage\"\n                  [limit]=\"pages.pageSize\"\n                  (page)=\"setPage($event)\"\n                  >\n                  <ngx-datatable-column name=\"S No\" prop=\"s_no\" [width]=\"100\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product ID\" prop=\"productId\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product Name\" prop=\"productName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Category\" prop=\"category\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Subcategory\" prop=\"subcategory\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"MRP\" prop=\"mrp\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Availability\" prop=\"availabilityStatus\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"InStock\" prop=\"inStock\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.inStock === true\">Yes</span>\n                        <span *ngIf=\"row.inStock === false\">No</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Actions\" prop=\"product_id\" [sortable]=false [width]=\"250\">\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span class=\"mx-1 \"></span>\n                        <button class=\"btn btn-sm btn-outline-info btn-icon mx-1\" (click)=\"viewDiagnostic(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View Category\"><i class=\"fa fa-eye\"></i></button>\n                        <!-- <button class=\"btn btn-sm btn-outline-warning btn-icon mx-1\" (click)=\"editDiagnostic(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Edit Category\"><i class=\"fa fa-edit\"></i></button> -->\n                        <button class=\"btn btn-sm btn-outline-danger btn-icon mx-1\" (click)=\"deleteDiagnostic(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete Category\"><i class=\"fa fa-trash\"></i></button>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-footer *ngIf=\"!!pages.totalCount\">\n                     <ng-template\n                        ngx-datatable-footer-template\n                        let-rowCount=\"rowCount\"\n                        let-pageSize=\"pageSize\"\n                        let-count=\"totalCount\"\n                        let-selectedCount=\"selectedCount\"\n                        let-curPage=\"curPage\"\n                        let-offset=\"offset\"\n                        >\n                        <div class=\"w-25\" style=\"padding: 5px 10px\">\n                           <div> Showing {{((curPage - 1) * pageSize) + 1 }} - {{pageSize > rowCount ? rowCount : ((pageSize * curPage) > rowCount ? rowCount : pageSize * curPage)}} products of {{rowCount}} Diagnostics </div>\n                        </div>\n                        <datatable-pager\n                        [pagerLeftArrowIcon]=\"'datatable-icon-left'\"\n                        [pagerRightArrowIcon]=\"'datatable-icon-right'\"\n                        [pagerPreviousIcon]=\"'datatable-icon-prev'\"\n                        [pagerNextIcon]=\"'datatable-icon-skip'\"\n                        [page]=\"curPage\"\n                        [size]=\"pageSize\"\n                        [count]=\"rowCount\"\n                        [hidden]=\"!((rowCount / pageSize) > 1)\"\n                        (change)=\"setPage($event)\">\n                        </datatable-pager>\n                     </ng-template>\n                  </ngx-datatable-footer>\n               </ngx-datatable>\n            </div>\n         </div>\n      </div>\n</div>\n<!-- <div class=\"modal fade\" id=\"filterModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"filterModalLabel\" aria-hidden=\"true\">\n   <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form class=\"user\">\n         <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"filterModalLabel\">Filter</h5>\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n            </button>\n         </div>\n         <div class=\"modal-body\">\n            <div class=\"row pb-5\">\n               <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"form-row\">\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"services\">Services</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendortype\">Vendor Type*</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendorcategory\">Vendor Category</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"modal-footer\">\n            <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n            <button class=\"btn btn-secondary w-25\" type=\"submit\">Apply</button>\n         </div>\n         </form>\n      </div>\n   </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\n\n@Component({\n  selector: 'app-view-diagnostics',\n  templateUrl: './view-diagnostics.component.html',\n  styleUrls: ['./view-diagnostics.component.scss']\n})\nexport class ViewDiagnosticsComponent {\n  sub: any;\n  productId: string;\n  responseCode = ResponseCode;\n  diagnosticDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService,\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      if (!!params.productId && params.productId !== '') {\n      this.productId = params.productId;\n      this.getdiagnosticData(this.productId);\n      }\n    });\n  }\n  // Method: to fetch Vendor Detail data from BE\n  getdiagnosticData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const diagnosticQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getDiagnosticDetailById(diagnosticQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.diagnosticDetails = response.response.data;\n            console.log(this.diagnosticDetails);\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/diagnostics'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  onNavigate(data) {\n    console.log(data);\n    if (!!data) {\n      const url = '' + data;\n      window.open(url, '_blank');\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong, Please try again later !!!');\n    }\n}\n}\n // End of code\n\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Diagnostics Details</h1>\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/diagnostics']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <!-- Page Body -->\n   <div class=\"row pb-4\" *ngIf=\"!!diagnosticDetails && diagnosticDetails !== null\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <div class=\"card shadow p-4\">\n            <div class=\"table-responsive-sm\">\n               <table class=\"table table-bordered\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <span><strong>Vendor ID: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.vendorId && diagnosticDetails.vendorId !== '' ? diagnosticDetails.vendorId : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Test Name: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.testName && diagnosticDetails.testName !== '' ? diagnosticDetails.testName : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Type: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.type && diagnosticDetails.type !== '' ? diagnosticDetails.type : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Test Included: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.testIncludedDetails && diagnosticDetails.testIncludedDetails !== '' ? diagnosticDetails.testIncludedDetails : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Test Code: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.testCode && diagnosticDetails.testCode !== '' ? diagnosticDetails.testCode : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Tags: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.tags && diagnosticDetails.tags !== '' ? diagnosticDetails.tags : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>SSP Margin(%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.SSP_Margin && diagnosticDetails.SSP_Margin !== '' ? diagnosticDetails.SSP_Margin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>SS Margin(%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.category && diagnosticDetails.category !== '' ? diagnosticDetails.category : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Discount (%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.discount && diagnosticDetails.discount !== '' ? diagnosticDetails.discount : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Cost To Company: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.costToCompany && diagnosticDetails.costToCompany !== '' ? diagnosticDetails.costToCompany : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>GST(%): </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.gst && diagnosticDetails.gst !== '' ? diagnosticDetails.gst : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Creation Date: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.createdAt && diagnosticDetails.createdAt !== ''\">{{diagnosticDetails.createdAt | date: 'dd-MM-yyyy'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.createdAt && diagnosticDetails.createdAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Method: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.method && diagnosticDetails.method !== '' ? diagnosticDetails.method : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>MRP: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.mrp && diagnosticDetails.mrp !== '' ? diagnosticDetails.mrp : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Available: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"diagnosticDetails?.isAvailable === true\">Yes</span>\n                           <span class=\"float-right\" *ngIf=\"diagnosticDetails?.isAvailable === false\">No</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Sub-Category: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.subcategory && diagnosticDetails.subcategory !== '' ? diagnosticDetails.subcategory : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Category: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.category && diagnosticDetails.category !== '' ? diagnosticDetails.category : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>No. of Test: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.noOfTests && diagnosticDetails.noOfTests !== '' ? diagnosticDetails.noOfTests : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Precautions: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.precautions && diagnosticDetails.precautions !== '' ? diagnosticDetails.precautions : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Result Time: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.resultTime && diagnosticDetails.resultTime !== '' ? diagnosticDetails.resultTime : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Total Margin: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.totalMargin && diagnosticDetails.totalMargin !== '' ? diagnosticDetails.totalMargin : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Schedule: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.schedule && diagnosticDetails.schedule !== '' ? diagnosticDetails.schedule : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>SKU: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.sku && diagnosticDetails.sku !== '' ? diagnosticDetails.sku : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Sample Type: </strong></span>\n                           <span class=\"float-right\">{{!!diagnosticDetails.sampleType && diagnosticDetails.sampleType !== '' ? diagnosticDetails.sampleType : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Updated At: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.updatedAt && diagnosticDetails.updatedAt !== ''\">{{diagnosticDetails.updatedAt | date: 'medium'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!diagnosticDetails.updatedAt && diagnosticDetails.updatedAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n               <table class=\"table table-bordered image-table\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <p><strong>Test Image: </strong></p>\n                           <div *ngIf=\"diagnosticDetails?.testImages.length != 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of diagnosticDetails?.testImages;\">\n                              <img src=\"{{item}}\" alt=\"{{diagnosticDetails?.testName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                              <img src=\"../../../../../assets/img/PDF.svg\" alt=\"{{diagnosticDetails?.testName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                              </a>\n                           </div>\n                           <div *ngIf=\"diagnosticDetails?.testImages.length === 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"../../../../../assets/img/dummy.png\">\n                              <img src=\"../../../../../assets/img/dummy.png\" alt=\"Dummy Image\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n            </div>\n            <div class=\"text-left my-2 d-block\">\n               <p class=\"text-muted\"><small>*NA : Not Available</small></p>\n            </div>\n         </div>\n      </div>\n   </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { IOption } from 'ng-select';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { of } from 'rxjs';\nimport { isNumeric } from 'rxjs/util/isNumeric';\ndeclare var $:any;\n@Component({\n  selector: 'app-ace-medicine',\n  templateUrl: './ace-medicine.component.html',\n  styleUrls: ['./ace-medicine.component.scss']\n})\nexport class AceMedicineComponent implements OnInit {\n  today: Date;\n  maxDate: Date;\n  minDate: Date;\n  vendordetailsForm: FormGroup;\n  submitted = false;\n  fileDatapancard: string [] = [];\n  fileDatagst: string [] = [];\n  fileDatacertificate: string [] = [];\n  fileDataotherdocs: string [] = [];\n  previewUrlcertificate = [];\n  previewUrlgst = [];\n  previewUrlpancard = [];\n  previewUrlotherdocs = [];\n  typeDropdownData: Array<IOption> = [];\n  categoryDropdownData: Array<IOption> = [];\n  serviceDropdownData: Array<IOption> = [];\n  dropdownData: any = {};\n  sub: any;\n  vendorDataFormType: string;\n  vendorId: string;\n  pincode_state: any;\n  vendorDetails: any;\n  fileDatavendorlogo: File;\n  previewUrlvendorlogo: any;\n  fileDataprofphoto: File;\n  previewUrlprofphoto: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      this.vendorDataFormType = params.type;\n      if ( this.vendorDataFormType !== 'add') {\n        if (!!params.vendorId && params.vendorId !== '') {\n          this.vendorId = params.vendorId;\n          this.getServiceDropdownData();\n        }\n      } \n      else {\n        this.bindAddForm();\n        this.gettypeDropdown();\n        this.getServiceDropdownData();\n      }\n    });\n    this.today = new Date();\n    this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 2);\n  }\n  ngOnInit() {\n    \n  }\n  ngAfterViewInit() {\n    $(document).ready(function() {\n      $(document).on('change', '.custom-file-input', function (event) {\n        $(this).next('.custom-file-label').html(event.target.files[0].name);\n    })\n    });\n}\n  fileProgressgst(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlgst.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatagst.push(event.target.files[i]);\n      }\n  }\n  fileProgresscertificate(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlcertificate.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatacertificate.push(event.target.files[i]);\n      }\n  }\n  fileProgresspancard(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlpancard.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDatapancard.push(event.target.files[i]);\n      }\n  }\n  fileProgressotherdoc(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlotherdocs.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDataotherdocs.push(event.target.files[i]);\n      }\n  }\n  fileProgressvendorlogo(fileInput: any) {\n    this.fileDatavendorlogo = <File>fileInput.target.files[0];\n    const mimeType = this.fileDatavendorlogo.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDatavendorlogo);\n    reader.onload = (_event) => {\n      this.previewUrlvendorlogo = reader.result;\n    }\n  }\n  fileProgressvendorprofphoto(fileInput: any) {\n    this.fileDataprofphoto = <File>fileInput.target.files[0];\n    const mimeType = this.fileDataprofphoto.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.fileDataprofphoto);\n    reader.onload = (_event) => {\n      this.previewUrlprofphoto = reader.result;\n    }\n  }\n  // Method: to bind and map fields data for adding data to category list\n  bindAddForm() {\n    this.vendordetailsForm = this.formBuilder.group({\n      type: ['', Validators.required],\n      category: ['', Validators.required],\n      services: ['', Validators.required],\n      vendorName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: ['', [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: ['', [Validators.required, Validators.email]],\n      personalEmail: ['', [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: ['', Validators.required],\n      certificationAuthorties: ['', Validators.required],\n      certificationDate: ['', Validators.required],\n      panCard: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: ['', Validators.required],\n      branchcity: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [''],\n      defaultDiscountPercentage: ['', [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [false],\n      pancardFile: [null, Validators.required],\n      regCertificateFile: [null, Validators.required],\n      gstDocumentFile: [null, Validators.required],\n      otherDocs: [null],\n      vendorLogo: [null, Validators.required],\n      profilePhoto: [null, Validators.required],\n    });\n    this.vendordetailsForm.controls['pincode'].valueChanges.debounceTime(200).switchMap(term => of(term)).subscribe(change => {\n      if (this.vendordetailsForm.controls['pincode'].valid) {\n        this.getpincodeData(this.vendordetailsForm.controls['pincode'].value);\n      } else {\n        console.log('Invalid Pincode.');\n      }\n    });\n  }\n  // End of above code\n  // Method: to bind and map fields data for adding data to category list\n  bindEditForm(data) {\n    this.getCategoryByid(data.type);\n    this.vendordetailsForm = this.formBuilder.group({\n      type: [data.type, Validators.required],\n      category: [data.category, Validators.required],\n      services: [data.services, Validators.required],\n      vendorName: [data.vendorName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      contactPersonName: [data.contactPersonName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      mobile: [data.mobile, [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      secondaryMobile: [data.secondaryMobile, [Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[6-9]\\\\d{9}')]],\n      officialEmail: [data.officialEmail, [Validators.required, Validators.email]],\n      personalEmail: [data.personalEmail, [Validators.email]],\n      country: [{value: 'India', disabled: true}, Validators.required],\n      state: [data.location.state, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      city: [data.location.city, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      pincode: [data.location.pincode, [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern(/^[1-9][0-9]{5}$/)]],\n      steet_address_1: [data.location.steet_address_1, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      steet_address_2: [data.location.steet_address_2, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      latlong: [{value: null, disabled: true}, Validators.required],\n      gstNumber: [data.gstNumber, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      certificationNumber: [data.certificationNumber, Validators.required],\n      certificationAuthorties: [data.certificationAuthorties, Validators.required],\n      certificationDate: [data.certificationDate, Validators.required],\n      panCard: [data.panCard, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      bankName: [data.financialDetails.bankName, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      branchName: [data.financialDetails.branchName, Validators.required],\n      branchcity: [data.financialDetails.city , [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      accountNumber: [data.financialDetails.accountNumber, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern('^[0-9]*$')]],\n      ifsc: [data.financialDetails.ifsc, [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      holderName: [data.financialDetails.holderName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z\\s-]+$/)]],\n      UPIId: [data.financialDetails.UPI],\n      defaultDiscountPercentage: [data.defaultDiscountPercentage, [Validators.pattern(/^[0-9\\.]+$/)]],\n      panelRequired: [data.panelRequired],\n      pancardFile: [null],\n      regCertificateFile: [null],\n      gstDocumentFile: [null],\n      otherDocs: [null],\n      vendorLogo: [null],\n      profilePhoto: [null],\n    });\n  }\n  // End of above code\n  // convenience getter for easy access to form fields\n  get vendorcheckout() { return this.vendordetailsForm.controls; }\n  onSubmit(formData) {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.vendordetailsForm.invalid) {\n      this.toastrService.showWarning('Missing Data', 'Check the entry again!');\n      return;\n    } else {\n      if (!!formData.valid && formData.valid === true) {\n        const formData = new FormData();\n        for (var i = 0; i < this.fileDatapancard.length; i++) {\n          formData.append(\"pancardFile\", !!this.fileDatapancard[i] ? this.fileDatapancard[i] : null);\n        }\n        for (var i = 0; i < this.fileDatacertificate.length; i++) {\n          formData.append(\"regCertificateFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDatagst.length; i++) {\n          formData.append(\"gstDocumentFile\", !!this.fileDatagst[i] ? this.fileDatagst[i] : null);\n        }\n        for (var i = 0; i < this.fileDataotherdocs.length; i++) {\n          formData.append(\"otherDocs\", !!this.fileDataotherdocs[i] ? this.fileDataotherdocs[i] : null);\n        }\n        if (!!this.fileDatavendorlogo) {\n          formData.append('vendorLogo', !!this.fileDatavendorlogo ? this.fileDatavendorlogo : null);\n        }\n        if (!!this.fileDataprofphoto) {\n          formData.append('profilePhoto', !!this.fileDataprofphoto ? this.fileDataprofphoto : null);\n        }\n        formData.append('type', this.vendordetailsForm.get('type').value);\n        formData.append('category', this.vendordetailsForm.get('category').value);\n        formData.append('services', JSON.stringify(this.vendordetailsForm.get('services').value));\n        formData.append('vendorName', this.vendordetailsForm.get('vendorName').value);\n        formData.append('contactPersonName', this.vendordetailsForm.get('contactPersonName').value);\n        formData.append('mobile', this.vendordetailsForm.get('mobile').value);\n        formData.append('secondaryMobile', this.vendordetailsForm.get('secondaryMobile').value);\n        formData.append('officialEmail', this.vendordetailsForm.get('officialEmail').value);\n        formData.append('personalEmail', this.vendordetailsForm.get('personalEmail').value);\n        const tempLocation = {\n          country: this.vendordetailsForm.get('country').value,\n          state: this.vendordetailsForm.get('state').value,\n          city: this.vendordetailsForm.get('city').value,\n          steet_address_1: this.vendordetailsForm.get('street_address_1').value,\n          steet_address_2: this.vendordetailsForm.get('street_address_2').value,\n          pincode: this.vendordetailsForm.get('pincode').value,\n          latlong: null,\n        };\n        formData.append('location', JSON.stringify(tempLocation));\n        const tempFinancial = {\n          bankName: this.vendordetailsForm.get('bankName').value,\n          branchName: this.vendordetailsForm.get('branchName').value,\n          city: this.vendordetailsForm.get('branchcity').value,\n          accountNumber: this.vendordetailsForm.get('accountNumber').value,\n          holderName: this.vendordetailsForm.get('holderName').value,\n          ifsc: this.vendordetailsForm.get('ifsc').value,\n          UPI: this.vendordetailsForm.get('UPIId').value\n        };\n        formData.append('financialDetails', JSON.stringify(tempFinancial));\n        formData.append('gstNumber', this.vendordetailsForm.get('gstNumber').value);\n        formData.append('certificationNumber', this.vendordetailsForm.get('certificationNumber').value);\n        formData.append('certificationAuthorties', this.vendordetailsForm.get('certificationAuthorties').value);\n        const pipe = new DatePipe('en-US');\n        formData.append('certificationDate', pipe.transform(this.vendordetailsForm.get('certificationDate').value, 'dd-MM-yyyy'));\n        formData.append('panCard', this.vendordetailsForm.get('panCard').value);\n        formData.append('defaultDiscountPercentage', this.vendordetailsForm.get('defaultDiscountPercentage').value);\n        formData.append('panelRequired', this.vendordetailsForm.get('panelRequired').value);\n        if (this.vendorDataFormType === 'edit') {\n          formData.append('vendorId', this.vendorId);\n          this.inventoryService.editVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/medicine'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        } else {\n          this.inventoryService.saveVendorData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/medicine'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        }\n      }\n    }\n}\n\nonReset() {\n    this.submitted = false;\n    this.vendordetailsForm.reset();\n}\ngettypeDropdown() {\n  const typeQueryStr = 'name=VENDOR_TYPES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.typeDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.typeDropdownData = [];\n        console.log('No Type Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.getVendorData(this.vendorId);\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetCategoryByid(data) {\n  this.categoryDropdownData = [...[]];\n  let tempDataString = data.replaceAll(' ', '_');\n  tempDataString = data.replaceAll('\"', '');\n  const typeQueryStr = 'name=' + tempDataString;\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.categoryDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.categoryDropdownData = [];\n        console.log('No Category Coming from the BE');\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetServiceDropdownData() {\n  const typeQueryStr = 'name=VENDOR_SERVICES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.serviceDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.serviceDropdownData = [];\n        console.log('No Sub Category Coming from the BE');\n      }\n      if ( this.vendorDataFormType !== 'add') {\n      this.gettypeDropdown();\n      }\n    },\n    err => console.error(err)\n  );\n}\n  // Method: to fetch Vendor Detail data from BE\n  getVendorData(cId) {\n    const queryObj = {\n      vendorId: cId\n    }\n    const vendorQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getVendorDetailById(vendorQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.bindEditForm(response.response.data);\n            this.vendorDetails = response.response.data;\n            this.previewUrlvendorlogo = response.response.data.vendorLogoUrl;\n            this.previewUrlprofphoto = response.response.data.vendorProfileUrl;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/medicine'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  // Method: to fetch Pincode Detail data from BE\n  getpincodeData(enteredpincode) {\n    const queryObj = {\n      pincode: enteredpincode\n    }\n    const pincodeQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getpincodedetails(pincodeQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            console.log(response.response.data);\n            this.pincode_state = response.response.data.state;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n}\n","<!-- Add Vendor -->\n<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" *ngIf=\"!!vendorDataFormType && vendorDataFormType !== ''\">\n      <h1 class=\"h3 mb-0 text-gray-800 text-capitalize\">{{vendorDataFormType}} Medicine</h1>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i class=\"fa fa-upload fa-sm text-white-50\"></i> Import/Export</a> -->\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/medicine']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <div class=\"row pb-5\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <form class=\"user needs-validation\" novalidate [formGroup]=\"vendordetailsForm\" #vendorForm=\"ngForm\" (ngSubmit)=\"onSubmit(vendorForm)\" *ngIf=\"vendordetailsForm\">\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!serviceDropdownData && serviceDropdownData.length > 0\">\n                     <label for=\"services\">Services<span>*</span></label>\n                     <ng-select\n                     [options]=\"serviceDropdownData\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     [multiple]=\"true\"\n                     [closeOnSelect]=\"false\"\n                     [searchable]=\"true\"\n                     placeholder=\"Select Services\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"services\"\n                     name=\"services\"\n                     id=\"services\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.services.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.services.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.services.errors.required\">Service is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!typeDropdownData && typeDropdownData.length > 0\">\n                     <label for=\"vendortype\">Medicine Type<span>*</span></label>\n                     <ng-select\n                     [options]=\"typeDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Vendor type\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"type\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"type\"\n                     id=\"type\"\n                     class=\"form-control bg-light custom\"\n                     (ngModelChange)=\"getCategoryByid(vendordetailsForm.value.type)\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.type.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.type.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.type.errors.required\">Type is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!categoryDropdownData && categoryDropdownData.length > 0\">\n                     <label for=\"vendorcategory\">Medicine Category<span>*</span></label>\n                     <ng-select\n                     [options]=\"categoryDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Category\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"category\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"category\"\n                     id=\"vendorcategory\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.category.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && vendorcheckout.category.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.category.errors.required\">Category is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendorname\">Medicine Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"vendorname\" placeholder=\"John Doe\" formControlName=\"vendorName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.vendorName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.required\">Name is required</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.pattern\">Name should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.vendorName.errors.minlength\">Name should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendormob\">Medicine Mobile<span>*</span></label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"mobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"vendormob\" placeholder=\"Mob.\" aria-describedby=\"mobilecodeprepend\" formControlName=\"mobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.mobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.mobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.mobile.errors.required\">Mobile No. is required</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.mobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendoremail\">Medicine Email<span>*</span></label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"vendoremail\" placeholder=\"Email\" formControlName=\"officialEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.officialEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.officialEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.required\">Email is required</div>\n                        <div *ngIf=\"vendorcheckout.officialEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"contactpersonname\">Contact Person Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"contactpersonname\" placeholder=\"Name\" formControlName=\"contactPersonName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.contactPersonName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.contactPersonName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.required\">Contact Person Name is required</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.contactPersonName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"secondarymobile\">Secondary Mobile Number</label>\n                     <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                           <span class=\"input-group-text bg-light\" id=\"secondarymobilecodeprepend\">+91</span>\n                        </div>\n                        <input type=\"text\" minlength=\"10\" maxlength=\"10\" class=\"form-control bg-light\" id=\"secondarymobile\" placeholder=\"Mob.\" aria-describedby=\"secondarymobilecodeprepend\" formControlName=\"secondaryMobile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.secondaryMobile.errors }\">\n                        <div *ngIf=\"submitted && vendorcheckout.secondaryMobile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.pattern\">Mobile No. is Invalid</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.minlength\">Mobile No. should be minimum 10 digits</div>\n                           <div *ngIf=\"vendorcheckout.secondaryMobile.errors.maxlength\">Mobile No. should be maximum 10 digits</div>\n                        </div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"personalemail\">Person Email</label>\n                     <input type=\"email\" class=\"form-control bg-light\" id=\"personalemail\" placeholder=\"Email\" formControlName=\"personalEmail\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.personalEmail.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.personalEmail.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.personalEmail.errors.email\">Email is invalid</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address1\">Address 1<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address1\" placeholder=\"Street Address 1\" formControlName=\"steet_address_1\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_1.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_1.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.required\">Address Line 1 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_1.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"address2\">Address 2<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"40\" class=\"form-control bg-light\" id=\"address2\" placeholder=\"Street Address 2\" formControlName=\"steet_address_2\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.steet_address_2.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.steet_address_2.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.required\">Address Line 2 is required</div>\n                        <div *ngIf=\"vendorcheckout.steet_address_2.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"city\">City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"city\" placeholder=\"City\" formControlName=\"city\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.city.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.city.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.city.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.city.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"state\">State/ UT<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"state\" placeholder=\"State\" formControlName=\"state\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.state.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.state.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.state.errors.required\">State is required</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.state.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"country\">Country<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"country\" placeholder=\"India\" formControlName=\"country\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.country.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.country.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.country.errors.required\">Country is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pincode\">Pincode<span>*</span></label>\n                     <input type=\"text\" minlength=\"6\" maxlength=\"6\" class=\"form-control bg-light\" id=\"pincode\" placeholder=\"Pincode\" formControlName=\"pincode\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pincode.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.pincode.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.pincode.errors.required\">Pincode is required</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.pattern\">Pincode is invalid</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.minlength\">Pincode should be minimum 6 digits</div>\n                        <div *ngIf=\"vendorcheckout.pincode.errors.maxlength\">Pincode should be maximum 6 digits</div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationdate\">Date of Certification<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationdate\" placeholder=\"DD-MM-YYYY\" bsDatepicker [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY', containerClass: 'theme-dark-blue', isAnimated: true }\" [maxDate]=\"today\" formControlName=\"certificationDate\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationDate.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationDate.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationDate.errors.required\">Date is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificationno\">Certification No.<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificationno\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification No.\" formControlName=\"certificationNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationNumber.errors.required\">Certification Number is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"certificateauthority\">Certification Authority<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"certificateauthority\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Certification Authority\" formControlName=\"certificationAuthorties\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.certificationAuthorties.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.certificationAuthorties.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.certificationAuthorties.errors.required\">Certification Authority is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"gstinno\">GSTIN No<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"gstinno\" placeholder=\"GSTIN No\" formControlName=\"gstNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.gstNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.required\">GSTIN No. is required</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.gstNumber.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"pancardno\">PAN Card<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"pancardno\" placeholder=\"ABHDE0000UT\" formControlName=\"panCard\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.panCard.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.panCard.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.panCard.errors.required\">PanCard No. is required</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.panCard.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"margin\">Margin</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"margin\" placeholder=\"18%\" formControlName=\"defaultDiscountPercentage\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.defaultDiscountPercentage.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.defaultDiscountPercentage.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.defaultDiscountPercentage.errors.pattern\">Should be only numeric/decimal</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"bankname\">Bank Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"bankname\" placeholder=\"Bank Name\" formControlName=\"bankName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.bankName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.bankName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.bankName.errors.required\">Bank Name is required</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.bankName.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankbranch\">Bank Branch<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"bankbranch\" placeholder=\"Bank Branch\" formControlName=\"branchName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchName.errors.required\">Bank Branch Name is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-2\">\n                     <label for=\"bankcity\">Branch City<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"bankcity\" placeholder=\"City\" formControlName=\"branchcity\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.branchcity.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.branchcity.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.required\">City is required</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.branchcity.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"ifsccode\">IFSC Code<span>*</span></label>\n                     <input type=\"email\" minlength=\"5\" maxlength=\"15\" class=\"form-control bg-light\" id=\"ifsccode\" oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"IFSC Code\" formControlName=\"ifsc\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.ifsc.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.ifsc.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.required\">IFSC is required</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"vendorcheckout.ifsc.errors.minlength\">Should be minimum 5 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountholder\">Account Holder’s Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"accountholder\" placeholder=\"Account Holder’s Name\" formControlName=\"holderName\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.holderName.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.holderName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.holderName.errors.required\">Account Holder Name is required</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.pattern\">Should contain only alphabets</div>\n                        <div *ngIf=\"vendorcheckout.holderName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"accountnumber\">Account Number<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"accountnumber\" placeholder=\"123-456-8910-1122\" formControlName=\"accountNumber\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.accountNumber.errors }\">\n                     <div *ngIf=\"submitted && vendorcheckout.accountNumber.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.required\">Account No. is required</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.pattern\">Should contain only numbers</div>\n                        <div *ngIf=\"vendorcheckout.accountNumber.errors.minlength\">Should be minimum 2 number</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"upiid\">UPI ID</label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"upiid\" placeholder=\"abc@oksbi\" formControlName=\"UPIId\">\n                  </div>\n               </div>\n               <div class=\"form-check\">\n                  <div class=\"form-group m-auto\">\n                     <input type=\"checkbox\" formControlName=\"panelRequired\" id=\"panelRequired\" class=\"form-check-input\" formControlName=\"panelRequired\"/>\n                     <label for=\"panelRequired\" class=\"form-check-label\">Panel Required</label>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload PAN Card Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadpancard\" (change)=\"fileProgresspancard($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"pancardFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.pancardFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadpancard\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.pancardFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.pancardFile.errors.required\">PAN Card should be uploaded</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlpancard;\">\n                           <img [src]=\"url\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.panCardUrl.length != 0 && !(!!previewUrlpancard && previewUrlpancard.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.panCardUrl;\">\n                           <img [src]=\"item\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload GSTIN Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadgstindoc\" (change)=\"fileProgressgst($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"gstDocumentFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.gstDocumentFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadgstindoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.gstDocumentFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.gstDocumentFile.errors.required\">GSTIN Proof Doc required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlgst;\">\n                           <img [src]=\"url\" alt=\"GST Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.gstNumberUrl.length != 0 && !(!!previewUrlgst && previewUrlgst.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.gstNumberUrl;\">\n                           <img [src]=\"item\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"GSTIN Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Certificate Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadcertificatedoc\" (change)=\"fileProgresscertificate($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"regCertificateFile\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.regCertificateFile.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadcertificatedoc\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.regCertificateFile.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.regCertificateFile.errors.required\">Certificate Proof Required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlcertificate;\">\n                           <img [src]=\"url\" alt=\"Certificate Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Pancard Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.certificationUrl.length != 0 && !(!!previewUrlcertificate && previewUrlcertificate.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.certificationUrl;\">\n                           <img [src]=\"item\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Certification Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                      </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Logo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorlogo\" (change)=\"fileProgressvendorlogo($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"vendorLogo\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.vendorLogo.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorlogo\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.vendorLogo.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.vendorLogo.errors.required\">Vendor Logo is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlvendorlogo && previewUrlvendorlogo !== ''\">\n                           <img [src]=\"previewUrlvendorlogo\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Vendor Profile Photo<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"uploadvendorprofilephoto\" (change)=\"fileProgressvendorprofphoto($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"profilePhoto\" [ngClass]=\"{ 'is-invalid': submitted && vendorcheckout.profilePhoto.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadvendorprofilephoto\">Choose file...</label>\n                        <div *ngIf=\"submitted && vendorcheckout.profilePhoto.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"vendorcheckout.profilePhoto.errors.required\">Vendor Profile Pic is required.</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"previewUrlprofphoto && previewUrlprofphoto !== ''\">\n                           <img [src]=\"previewUrlprofphoto\" alt=\"Vendor Logo\" class=\"view-thumbnail-img\">\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Other Document<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadotherdocs\" (change)=\"fileProgressotherdoc($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png, application/pdf\" formControlName=\"otherDocs\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadotherdocs\">Choose file...</label>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlotherdocs;\">\n                           <img [src]=\"url\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('jpeg')) || (url.includes('png')) || (url.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(url.includes('.pdf'))\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"vendorDataFormType !== 'add' && !!vendorDetails && vendorDetails.otherDocumentsUrl.length != 0 && !(!!previewUrlotherdocs && previewUrlotherdocs.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of vendorDetails?.otherDocumentsUrl;\">\n                           <img [src]=\"item\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                           <img src=\"../../../../../assets/img/PDF.svg\" alt=\"Other Document\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                        </a>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-row\">\n            <div class=\"col-md-6\">\n               <button class=\"btn btn-secondary w-25\" type=\"submit\">Submit</button>\n               <button class=\"btn btn-outline-secondary mx-2 w-25\" type=\"button\" (click)=\"onReset()\" [routerLink]=\"['/app/inventory/medicine']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\">Cancel</button>\n            </div>\n         </div>\n         </form>\n      </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {IOption} from 'ng-select';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { SelectionType, ColumnMode } from '@swimlane/ngx-datatable';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport 'rxjs/Rx';\nimport { of } from 'rxjs';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-medicine-listing',\n  templateUrl: './medicine-listing.component.html',\n  styleUrls: ['./medicine-listing.component.scss']\n})\nexport class MedicineListingComponent implements OnInit {\n  cities2 = [\n    {id: 1, name: 'Vilnius'},\n    {id: 2, name: 'Kaunas'},\n    {id: 3, name: 'Pavilnys', disabled: true},\n    {id: 4, name: 'Pabradė'},\n    {id: 5, name: 'Klaipėda'}\n];\nselectService: string[];\n  display = 'none';\n  responseCode = ResponseCode;\n  SelectionType = SelectionType;\n  enableSummary = true;\n  summaryPosition = 'top';\n  pages: any;\n  rows: any;\n  selected = [];\n  ColumnMode = ColumnMode;\n  // object: for mapping label with api fields\n  columns = [\n    { name: 'S No', prop: 's_no' },\n    { name: 'Product ID', prop: 'productId'},\n    { name: 'Product Name', prop: 'productName' },\n    { name: 'Category', prop: 'category'},\n    { name: 'Sub Category', prop: 'subcategory' },\n    { name: 'Precription', prop: 'prescriptionRequired'},\n    { name: 'MRP', prop: 'mrp' },\n    { name: 'Stocky Status', prop: 'inStock'},\n    { name: 'Availability', prop: 'availabilityStatus'},\n  ];\n  searchField: FormControl;\n  searchForm: FormGroup;\n  filterObj = {\n    search: '',\n    pageSize: 50,\n    currentPage: 1,\n    sort_by: '',\n    sort_type: ''\n  };\n  LIMITS = [\n    { name: '10', id: 10 },\n    { name: '25', id: 25 },\n    { name: '50', id: 50 },\n    { name: '100', id: 100 }\n  ];\n  limit: number = this.filterObj.pageSize;\n  sub: any;\n  constructor(private inventoryService: InventoryService,\n              private toastrService: ProductToasterService,\n              private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router) {\n                this.searchField = new FormControl();\n                this.searchForm = fb.group({search: this.searchField});\n                this.searchField.valueChanges\n                  .debounceTime(400)\n                  .switchMap(term => of(term)).subscribe(result => {\n                    this.filterObj.search = result;\n                    this.navigateUser();\n                  });\n              }\n  ngOnInit() {\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.filterObj.search = params.search || '';\n        this.filterObj.pageSize = params.pageSize || '',\n        this.filterObj.currentPage = params.currentPage || '';\n        this.filterObj.sort_by = params.sort_by || '';\n        this.filterObj.sort_type = params.sort_type || '';\n        this.getMedicineListingData();\n      });\n  }\n  // Method: is used to Navigate user to a desired filter Page\n   navigateUser() {\n    const tempUrlQuery = ProductUtilities.generateQueryString(this.filterObj);\n    const tempLink = '/app/inventory/medicine?' + tempUrlQuery;\n    this.router.navigateByUrl(tempLink);\n  }\n  // End of the Above Code\n  // Method: which is used to fetch the medicine list from the BE\n  getMedicineListingData(){\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n          return;\n      }\n      window.scrollTo(0, 0);\n    });\n    const medicineQueryStr = ProductUtilities.generateQueryString(this.filterObj);\n    this.inventoryService.getMedicineList(medicineQueryStr).subscribe(\n      response => {\n        if (!!response && response.success === true) {\n          if (!!response.response.data && response.response.data.length > 0) {\n            this.rows = response.response.data;\n            this.pages = response.response.metadata;\n          } else {\n            this.rows = [];\n            this.pages = {};\n          }\n        } else {\n          this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        }\n      },\n      err => {\n        this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        console.error(err);\n      }\n      // display error\n    );\n  }\n  // End of the above code\n  viewMedicine(data) {\n    if (!!data.productId && data.productId !== '') {\n      this.router.navigate(['/app/inventory/medicine/view-medicine'], { queryParams: { productId: data.productId} });\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  editMedicine(data) {\n    if (!!data.productId && data.productId !== '') {\n      this.router.navigate(['/app/inventory/medicine/add-edit-medicine'], { queryParams: { productId: data.productId, type: 'edit'}});\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  deleteMedicine(data) {\n    if (!!data && !!data.productId && data.productId !== '') {\n      const isConfirmed = confirm('Do you seriously want to delete product having Product ID :' + data.productId);\n      if (isConfirmed === true) {\n        const request = {\n          productId: data.productId\n        };\n        const removemedicineQueryStr = ProductUtilities.generateQueryString(request);\n        this.inventoryService.removeMedicine(removemedicineQueryStr).subscribe(\n          response => {\n            if (!!response && response.success === true) {\n              this.toastrService.showSuccess('Success', response.response.message);\n              this.getMedicineListingData();\n            } else {\n              this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n            }\n          },\n          err => {\n            console.error(err);\n            this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n          }\n        );\n      }\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong. Please try again later!!!');\n    }\n  }\n  // Method : to set pagination for list items\n  setPage(event) {\n    this.filterObj.currentPage = event.page;\n    this.navigateUser();\n  }\n  // End of the Above code\n}\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Medicine Listing</h1>\n      <!-- <form class=\"d-none d-sm-inline-block form-inline ml-auto ml-md-3 my-2 my-md-0 mw-100 w-25\" [formGroup]=\"searchForm\">\n         <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control small\" placeholder=\"Search Medicine...\" aria-label=\"Search\" formControlName=\"search\">\n            <div class=\"input-group-append\">\n               <button class=\"btn btn-primary\" type=\"button\">\n               <i class=\"fa fa-search fa-sm\"></i>\n               </button>\n            </div>\n         </div>\n      </form> -->\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" data-toggle=\"modal\" data-target=\"#filterModal\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i> Filter</a> -->\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/medicine/add-edit-medicine']\" [queryParams]=\"{ type: 'add'}\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add New Medicine</a> -->\n   </div>\n       <div class=\"row pb-4\" *ngIf=\"!!rows && !!pages\">\n         <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"card shadow mb-4\">\n               <ngx-datatable\n                  class=\"material striped\"\n                  [rows]=\"rows\"\n                  [columnMode]=\"ColumnMode.force\"\n                  [headerHeight]=\"50\"\n                  [footerHeight]=\"50\"\n                  [rowHeight]=\"auto\"\n                  [loadingIndicator]=\"loadingIndicator\"\n                  [externalPaging]=\"true\"\n                  [count]=\"pages.totalCount\"\n                  [offset]=\"pages.currentPage\"\n                  [limit]=\"pages.pageSize\"\n                  (page)=\"setPage($event)\"\n                  >\n                  <ngx-datatable-column name=\"S No\" prop=\"s_no\" [width]=\"100\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product ID\" prop=\"productId\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product Name\" prop=\"productName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Category\" prop=\"category\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Subcategory\" prop=\"subcategory\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Prescription\" prop=\"prescriptionRequired\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.prescriptionRequired === true\">Required</span>\n                        <span *ngIf=\"row.prescriptionRequired === false\">Not Required</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"MRP\" prop=\"mrp\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Availability\" prop=\"availabilityStatus\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"InStock\" prop=\"inStock\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.inStock === true\">Yes</span>\n                        <span *ngIf=\"row.inStock === false\">No</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Actions\" prop=\"product_id\" [sortable]=false [width]=\"250\">\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span class=\"mx-1 \"></span>\n                        <button class=\"btn btn-sm btn-outline-info btn-icon mx-1\" (click)=\"viewMedicine(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View Category\"><i class=\"fa fa-eye\"></i></button>\n                        <!-- <button class=\"btn btn-sm btn-outline-warning btn-icon mx-1\" (click)=\"editMedicine(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Edit Category\"><i class=\"fa fa-edit\"></i></button> -->\n                        <button class=\"btn btn-sm btn-outline-danger btn-icon mx-1\" (click)=\"deleteMedicine(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete Category\"><i class=\"fa fa-trash\"></i></button>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-footer *ngIf=\"!!pages.totalCount\">\n                     <ng-template\n                        ngx-datatable-footer-template\n                        let-rowCount=\"rowCount\"\n                        let-pageSize=\"pageSize\"\n                        let-count=\"totalCount\"\n                        let-selectedCount=\"selectedCount\"\n                        let-curPage=\"curPage\"\n                        let-offset=\"offset\"\n                        >\n                        <div class=\"w-25\" style=\"padding: 5px 10px\">\n                           <div> Showing {{((curPage - 1) * pageSize) + 1 }} - {{pageSize > rowCount ? rowCount : ((pageSize * curPage) > rowCount ? rowCount : pageSize * curPage)}} medicine of {{rowCount}} Medicines </div>\n                        </div>\n                        <datatable-pager\n                        [pagerLeftArrowIcon]=\"'datatable-icon-left'\"\n                        [pagerRightArrowIcon]=\"'datatable-icon-right'\"\n                        [pagerPreviousIcon]=\"'datatable-icon-prev'\"\n                        [pagerNextIcon]=\"'datatable-icon-skip'\"\n                        [page]=\"curPage\"\n                        [size]=\"pageSize\"\n                        [count]=\"rowCount\"\n                        [hidden]=\"!((rowCount / pageSize) > 1)\"\n                        (change)=\"setPage($event)\">\n                        </datatable-pager>\n                     </ng-template>\n                  </ngx-datatable-footer>\n               </ngx-datatable>\n            </div>\n         </div>\n      </div>\n</div>\n<!-- <div class=\"modal fade\" id=\"filterModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"filterModalLabel\" aria-hidden=\"true\">\n   <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form class=\"user\">\n         <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"filterModalLabel\">Filter</h5>\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n            </button>\n         </div>\n         <div class=\"modal-body\">\n            <div class=\"row pb-5\">\n               <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"form-row\">\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"services\">Services</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendortype\">Vendor Type*</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendorcategory\">Vendor Category</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"modal-footer\">\n            <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n            <button class=\"btn btn-secondary w-25\" type=\"submit\">Apply</button>\n         </div>\n         </form>\n      </div>\n   </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\n\n@Component({\n  selector: 'app-view-medicine',\n  templateUrl: './view-medicine.component.html',\n  styleUrls: ['./view-medicine.component.scss']\n})\nexport class ViewMedicineComponent {\n  sub: any;\n  productId: string;\n  responseCode = ResponseCode;\n  medicineDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService,\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      if (!!params.productId && params.productId !== '') {\n      this.productId = params.productId;\n      this.getMedicineData(this.productId);\n      }\n    });\n  }\n  // Method: to fetch Vendor Detail data from BE\n  getMedicineData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const medicineQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getMedicineDetailById(medicineQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.medicineDetails = response.response.data;\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/medicine'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  onNavigate(data) {\n    console.log(data);\n    if (!!data) {\n      const url = '' + data;\n      window.open(url, '_blank');\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong, Please try again later !!!');\n    }\n}\n}\n // End of code\n\n","<div class=\"container-fluid\">\n    <!-- Page Heading -->\n    <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n       <h1 class=\"h3 mb-0 text-gray-800\">Medicine Details</h1>\n       <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/medicine']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n    </div>\n    <!-- Page Body -->\n    <div class=\"row pb-4\" *ngIf=\"!!medicineDetails && medicineDetails !== null\">\n       <div class=\"col-xl-12 col-lg-12\">\n          <div class=\"card shadow p-4\">\n             <div class=\"table-responsive-sm\">\n                <table class=\"table table-bordered\">\n                   <tbody>\n                      <tr>\n                         <td>\n                            <span><strong>Vendor ID: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.vendorId && medicineDetails.vendorId !== '' ? medicineDetails.vendorId : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Vendor SKU : </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.vendorSku && medicineDetails.vendorSku !== '' ? medicineDetails.vendorSku : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Item Type: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.type && medicineDetails.type !== '' ? medicineDetails.type : 'NA'}}</span>\n                         </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>Medicine Name: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.itemName && medicineDetails.itemName !== '' ? medicineDetails.itemName : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Category: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.category && medicineDetails.category !== '' ? medicineDetails.category : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Subcategory: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.subcategory && medicineDetails.subcategory !== '' ? medicineDetails.subcategory : 'NA'}}</span>\n                         </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>MRP: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.mrp && medicineDetails.mrp !== '' ? medicineDetails.mrp : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>Cost To Company: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.costToCompany && medicineDetails.costToCompany !== '' ? medicineDetails.costToCompany : 'NA'}}</span>\n                         </td>\n                         <td>\n                           <span><strong>GST (%): </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.gst && medicineDetails.gst !== '' ? medicineDetails.gst : 'NA'}}</span>\n                        </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>Packaging Type: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.packing && medicineDetails.packing !== '' ? medicineDetails.packing : 'NA'}}</span>\n                         </td>\n                         <td>\n                           <span><strong>Prescription Required?: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"medicineDetails?.prescriptionRequired === true\">Yes</span>\n                           <span class=\"float-right\" *ngIf=\"medicineDetails?.prescriptionRequired === false\">No</span>\n                        </td>\n                         <td>\n                            <span><strong>Salt Name: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.saltName && medicineDetails.saltName !== '' ? medicineDetails.saltName : 'NA'}}</span>\n                         </td>\n                      </tr>\n                      <tr>\n                         <td>\n                            <span><strong>Total Margin: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.totalMargin && medicineDetails.totalMargin !== '' ? medicineDetails.totalMargin : 'NA'}}</span>\n                         </td>\n                         <td>\n                            <span><strong>SKU: </strong></span>\n                            <span class=\"float-right\">{{!!medicineDetails.sku && medicineDetails.sku !== '' ? medicineDetails.sku : 'NA'}}</span>\n                         </td>\n                         <td>\n                           <span><strong>Company: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.companyName && medicineDetails.companyName !== '' ? medicineDetails.companyName : 'NA'}}</span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                           <span><strong>Batch ID: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.batchId && medicineDetails.batchId !== '' ? medicineDetails.batchId : 'NA'}}</span>\n                        </td>\n                         <td>\n                            <span><strong>Available?: </strong></span>\n                            <span class=\"float-right\" *ngIf=\"medicineDetails?.isAvailable === true\">Yes</span>\n                            <span class=\"float-right\" *ngIf=\"medicineDetails?.isAvailable === false\">No</span>\n                         </td>\n                         <td>\n                           <span><strong>Status: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.availabilityStatus && medicineDetails.availabilityStatus !== '' ? medicineDetails.availabilityStatus : 'NA'}}</span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                           <span><strong>SSP Margin: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.SSP_Margin && medicineDetails.SSP_Margin !== '' ? medicineDetails.SSP_Margin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>SS Margin: </strong></span>\n                           <span class=\"float-right\">{{!!medicineDetails.SS_Margin && medicineDetails.SS_Margin !== '' ? medicineDetails.SS_Margin : 'NA'}}</span>\n                        </td>\n                      </tr>\n                   </tbody>\n                </table>\n                <table class=\"table table-bordered image-table\">\n                   <tbody>\n                      <tr>\n                         <td class=\"w-50\">\n                            <span><strong>Medicine Image: </strong></span>\n                         </td>\n                         <td class=\"w-50\">\n                           <div *ngIf=\"medicineDetails?.images.length != 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of medicineDetails?.images;\">\n                                 <img src=\"{{item}}\" alt=\"{{medicineDetails?.itemName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('jpeg')) || (item.includes('png')) || (item.includes('jpg'))\">\n                                 <img src=\"../../../../../assets/img/PDF.svg\" alt=\"{{medicineDetails?.itemName}}\" class=\"view-thumbnail-img\" *ngIf=\"(item.includes('.pdf'))\">\n                              </a>\n                            </div>\n                            <div *ngIf=\"medicineDetails?.images.length === 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"../../../../../assets/img/dummy.png\">\n                                 <img src=\"../../../../../assets/img/dummy.png\" alt=\"Dummy Image\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                         </td>\n                      </tr>\n                   </tbody>\n                </table>\n             </div>\n             <div class=\"text-left my-2 d-block\">\n                <p class=\"text-muted\"><small>*NA : Not Available</small></p>\n             </div>\n          </div>\n       </div>\n    </div>\n </div>","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { IOption } from 'ng-select';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { of } from 'rxjs';\nimport { isNumeric } from 'rxjs/util/isNumeric';\ndeclare var $:any;\n@Component({\n  selector: 'app-ace-products',\n  templateUrl: './ace-products.component.html',\n  styleUrls: ['./ace-products.component.scss']\n})\nexport class AceProductsComponent implements OnInit {\n  today: Date;\n  maxDate: Date;\n  minDate: Date;\n  productdetailsForm: FormGroup;\n  submitted = false;\n  fileDataproductimg: string [] = [];\n  previewUrlproductimg = [];\n  typeDropdownData: Array<IOption> = [];\n  categoryDropdownData: Array<IOption> = [];\n  serviceDropdownData: Array<IOption> = [];\n  dropdownData: any = {};\n  sub: any;\n  productDataFormType: string;\n  productId: string;\n  productDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      this.productDataFormType = params.type;\n      if ( this.productDataFormType !== 'add') {\n        if (!!params.productId && params.productId !== '') {\n          this.productId = params.productId;\n          this.getServiceDropdownData();\n        }\n      } \n      else {\n        this.bindAddForm();\n        this.gettypeDropdown();\n        this.getServiceDropdownData();\n      }\n    });\n    this.today = new Date();\n    this.minDate = new Date(this.today.getFullYear(), this.today.getMonth(), 2);\n  }\n  ngOnInit() {\n    \n  }\n  ngAfterViewInit() {\n    $(document).ready(function() {\n      $(document).on('change', '.custom-file-input', function (event) {\n        $(this).next('.custom-file-label').html(event.target.files[0].name);\n    })\n    });\n}\n  fileProgresspancard(event) {\n    if (event.target.files && event.target.files[0]) {\n      for (let i = 0; i < event.target.files.length; i++) {\n              var reader = new FileReader();\n              reader.onload = (event:any) => {\n                this.previewUrlproductimg.push(event.target.result);\n              }\n              reader.readAsDataURL(event.target.files[i]);\n      }\n  }\n      for (var i = 0; i < event.target.files.length; i++) { \n        this.fileDataproductimg.push(event.target.files[i]);\n      }\n  }\n  // Method: to bind and map fields data for adding data to category list\n  bindAddForm() {\n    this.productdetailsForm = this.formBuilder.group({\n      productImage: [null, Validators.required],\n      category: ['', Validators.required],\n      vendorId: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(8), Validators.pattern('^[0-9]*$')]],\n      productName: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      productShortName: ['', [Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      brandName: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packagingType: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packageSize: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      productDescription: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      ingredients: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      highlights: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      productusage: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      effect: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      HSN: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      upc: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      vendorSKU: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      ssSKU: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      costToCompany: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      mrp: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      per_unit_price: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      weight: ['', [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      gst: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      totalMargin: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SS_Margin: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SSP_Margin: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      stock_status: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(1), Validators.pattern('^[0-9]*$')]],\n      product_availability: [false],\n      tax_exempt: [false],\n      action: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      direction: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      tags: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n\n      type: ['', Validators.required],\n      services: ['', Validators.required],\n    });\n  }\n  // End of above code\n  // Method: to bind and map fields data for adding data to category list\n  bindEditForm(data) {\n    this.getCategoryByid(data.type);\n    this.productdetailsForm = this.formBuilder.group({\n      productImage: [null],\n      category: [data.category, Validators.required],\n      vendorId: [data.vendorId, [Validators.required, Validators.maxLength(20), Validators.minLength(8), Validators.pattern('^[0-9]*$')]],\n      productName: [data.productName, [Validators.required, Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      productShortName: [data.productShortName, [Validators.maxLength(50), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      brandName: [data.brandName, [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packagingType: [data.packagingType , [Validators.required, Validators.maxLength(20), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s-]+$/)]],\n      packageSize: [data.packageSize, [Validators.required, Validators.minLength(5), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      productDescription: [data.productDescription, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      ingredients: [data.ingredients, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      highlights: [data.highlights, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      productusage: [data.productusage, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      effect: [data.effect, [Validators.required, Validators.maxLength(100), Validators.minLength(2), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n      HSN: [data.HSN, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      upc: [data.upc, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      vendorSKU: [data.sku, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      ssSKU: [data.ssSKU, [Validators.required, Validators.minLength(10), Validators.maxLength(15), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      costToCompany: [data.costToCompany, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      mrp: [data.mrp, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      per_unit_price: [data.per_unit_price, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      weight: [data.weight, [Validators.required, Validators.pattern(/^[0-9\\.]+$/)]],\n      gst: [data.gst, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      totalMargin: [data.totalMargin, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SS_Margin: [data.SS_Margin, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      SSP_Margin: [data.SSP_Margin, [Validators.required, Validators.maxLength(5), Validators.minLength(1), Validators.pattern(/^[0-9\\.]+$/)]],\n      stock_status: [data.stock_status, [Validators.required, Validators.maxLength(10), Validators.minLength(1), Validators.pattern('^[0-9]*$')]],\n      product_availability: [data.isAvailable],\n      tax_exempt: [data.tax_exempt],\n      action: [data.action, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      direction: [data.direction, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s.]+$/)]],\n      tags: [data.tags, [Validators.required, Validators.maxLength(100), Validators.minLength(3), Validators.pattern(/^[a-zA-Z0-9\\s,]+$/)]],\n\n      type: [data.type, Validators.required],\n      services: [data.services, Validators.required],\n    });\n  }\n  // End of above code\n  // convenience getter for easy access to form fields\n  get productcheckout() { return this.productdetailsForm.controls; }\n  onSubmit(formData) {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.productdetailsForm.invalid) {\n      this.toastrService.showWarning('Missing Data', 'Check the entry again!');\n      return;\n    } else {\n      if (!!formData.valid && formData.valid === true) {\n        const formData = new FormData();\n        for (var i = 0; i < this.fileDataproductimg.length; i++) {\n          formData.append(\"productImage\", !!this.fileDataproductimg[i] ? this.fileDataproductimg[i] : null);\n        }\n        formData.append('category', this.productdetailsForm.get('category').value);\n        formData.append('productName', this.productdetailsForm.get('productName').value);\n        formData.append('productShortName', this.productdetailsForm.get('productShortName').value);\n        formData.append('brandName', this.productdetailsForm.get('brandName').value);\n        formData.append('mrp', this.productdetailsForm.get('mrp').value);\n        formData.append('per_unit_price', this.productdetailsForm.get('per_unit_price').value);\n        formData.append('weight', this.productdetailsForm.get('weight').value);\n        formData.append('productDescription', this.productdetailsForm.get('productDescription').value);\n        formData.append('action', this.productdetailsForm.get('action').value);\n        formData.append('direction', this.productdetailsForm.get('direction').value);\n        formData.append('tags', this.productdetailsForm.get('tags').value);\n        formData.append('ingredients', this.productdetailsForm.get('ingredients').value);\n        formData.append('highlights', this.productdetailsForm.get('highlights').value);\n        formData.append('productusage', this.productdetailsForm.get('productusage').value);\n        formData.append('effect', this.productdetailsForm.get('effect').value);\n        formData.append('vendorId', this.productdetailsForm.get('vendorId').value);\n        formData.append('packageSize', this.productdetailsForm.get('packageSize').value);\n        formData.append('HSN', this.productdetailsForm.get('HSN').value);\n        formData.append('upc', this.productdetailsForm.get('upc').value);\n        formData.append('vendorSKU', this.productdetailsForm.get('vendorSKU').value);\n        formData.append('ssSKU', this.productdetailsForm.get('ssSKU').value);\n        formData.append('gst', this.productdetailsForm.get('gst').value);\n        formData.append('totalMargin', this.productdetailsForm.get('totalMargin').value);\n        formData.append('SSP_Margin', this.productdetailsForm.get('SSP_Margin').value);\n        formData.append('SS_Margin', this.productdetailsForm.get('SS_Margin').value);\n        formData.append('costToCompany', this.productdetailsForm.get('costToCompany').value);\n        formData.append('packagingType', this.productdetailsForm.get('packagingType').value);\n        formData.append('stock_status', this.productdetailsForm.get('stock_status').value);\n        formData.append('product_availability', this.productdetailsForm.get('product_availability').value);\n        formData.append('tax_exempt', this.productdetailsForm.get('tax_exempt').value);\n\n        formData.append('type', this.productdetailsForm.get('type').value);\n        formData.append('services', JSON.stringify(this.productdetailsForm.get('services').value));\n        if (this.productDataFormType === 'edit') {\n          formData.append('productId', this.productId);\n          this.inventoryService.editProductData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/products'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        } else {\n          this.inventoryService.saveProductData(formData).subscribe(\n            response => {\n              if (!!response && !!response.success && response.success === true) {\n                console.log(response);\n                this.toastrService.showSuccess('Success', response.response.message);\n                this.router.navigate(['/app/inventory/products'], { queryParams: { currentPage: 1, perPage: 50}, queryParamsHandling: 'merge' });\n              } else {\n                this.toastrService.showError('Error', response.response.message);\n              }\n            },\n            err => console.error(err)\n          );\n        }\n      }\n    }\n}\n\nonReset() {\n    this.submitted = false;\n    this.productdetailsForm.reset();\n}\ngettypeDropdown() {\n  const typeQueryStr = '?name=[\"Services\",\"VENDOR_TYPES\"]';\n  this.inventoryService.getENUMData(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.typeDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.typeDropdownData = [];\n        console.log('No Type Coming from the BE');\n      }\n      if ( this.productDataFormType !== 'add') {\n      this.getProductData(this.productId);\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetCategoryByid(data) {\n  this.categoryDropdownData = [...[]];\n  let tempDataString = data.replaceAll(' ', '_');\n  tempDataString = data.replaceAll('\"', '');\n  const typeQueryStr = 'name=' + tempDataString;\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.categoryDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.categoryDropdownData = [];\n        console.log('No Category Coming from the BE');\n      }\n    },\n    err => console.error(err)\n  );\n}\ngetServiceDropdownData() {\n  const typeQueryStr = 'name=VENDOR_SERVICES';\n  this.inventoryService.gettypeDropdown(typeQueryStr).subscribe(\n    response => {\n      if (!!response && !!response.success && response.success === true && response.response.data.length !== 0 ) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < response.response.data.length; i++) {\n          this.serviceDropdownData.push(\n            {\n              value: response.response.data[i],\n              label: response.response.data[i]\n            });\n        }\n      } else {\n        this.serviceDropdownData = [];\n        console.log('No Sub Category Coming from the BE');\n      }\n      if ( this.productDataFormType !== 'add') {\n      this.gettypeDropdown();\n      }\n    },\n    err => console.error(err)\n  );\n}\n  // Method: to fetch Vendor Detail data from BE\n  getProductData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const productQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getProductDetailById(productQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.bindEditForm(response.response.data);\n            this.productDetails = response.response.data;\n            console.log(this.productDetails);\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/products'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n}\n","<!-- Add Vendor -->\n<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" *ngIf=\"!!productDataFormType && productDataFormType !== ''\">\n      <h1 class=\"h3 mb-0 text-gray-800 text-capitalize\">{{productDataFormType}} Product</h1>\n      <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i class=\"fa fa-upload fa-sm text-white-50\"></i> Import/Export</a> -->\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/products']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <div class=\"row pb-5\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <form class=\"user needs-validation\" novalidate [formGroup]=\"productdetailsForm\" #vendorForm=\"ngForm\" (ngSubmit)=\"onSubmit(vendorForm)\" *ngIf=\"productdetailsForm\">\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!serviceDropdownData && serviceDropdownData.length > 0\">\n                     <label for=\"services\">Services<span>*</span></label>\n                     <ng-select\n                     [options]=\"serviceDropdownData\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     [multiple]=\"true\"\n                     [closeOnSelect]=\"false\"\n                     [searchable]=\"true\"\n                     placeholder=\"Select Services\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"services\"\n                     name=\"services\"\n                     id=\"services\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && productcheckout.services.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && productcheckout.services.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.services.errors.required\">Service is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!typeDropdownData && typeDropdownData.length > 0\">\n                     <label for=\"vendortype\">Vendor Type<span>*</span></label>\n                     <ng-select\n                     [options]=\"typeDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Vendor type\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"type\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"type\"\n                     id=\"type\"\n                     class=\"form-control bg-light custom\"\n                     (ngModelChange)=\"getCategoryByid(productdetailsForm.value.type)\"\n                     [ngClass]=\"{ 'is-invalid': submitted && productcheckout.type.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && productcheckout.type.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.type.errors.required\">Type is required</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\" *ngIf=\"!!categoryDropdownData && categoryDropdownData.length > 0\">\n                     <label for=\"productcategory\">Product Category<span>*</span></label>\n                     <ng-select\n                     [options]=\"categoryDropdownData\"\n                     [multiple]=\"false\"\n                     placeholder=\"Select Category\"\n                     clearAllText=\"Clear\"\n                     formControlName=\"category\"\n                     bindValue=\"value\"\n                     bindLabel=\"value\"\n                     name=\"category\"\n                     id=\"productcategory\"\n                     class=\"form-control bg-light custom\"\n                     [ngClass]=\"{ 'is-invalid': submitted && productcheckout.category.errors }\"\n                     >\n                     </ng-select>\n                     <div *ngIf=\"submitted && productcheckout.category.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.category.errors.required\">Category is required</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"vendorId\">Vendor ID<span>*</span></label>\n                     <input type=\"text\" minlength=\"8\" maxlength=\"20\" class=\"form-control bg-light\" id=\"vendorId\" placeholder=\"26512735\" formControlName=\"vendorId\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.vendorId.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.vendorId.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.vendorId.errors.required\">Vendor ID is required</div>\n                        <div *ngIf=\"productcheckout.vendorId.errors.pattern\">Should contain only numbers</div>\n                        <div *ngIf=\"productcheckout.vendorId.errors.minlength\">Should be minimum 8 number</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productName\">Product Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"productName\" placeholder=\"Dettol-10ml\" formControlName=\"productName\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productName.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.productName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productName.errors.required\">Name is required</div>\n                        <div *ngIf=\"productcheckout.productName.errors.pattern\">Name should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.productName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productShortName\">Product Short Name</label>\n                     <input type=\"text\" minlength=\"3\" maxlength=\"50\" class=\"form-control bg-light\" id=\"productShortName\" placeholder=\"Name\" formControlName=\"productShortName\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productShortName.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.productShortName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productShortName.errors.pattern\">Name should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.productShortName.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"brandName\">Brand Name<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"brandName\" placeholder=\"Cipla\" formControlName=\"brandName\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.brandName.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.brandName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.brandName.errors.required\">Brand Name is required</div>\n                        <div *ngIf=\"productcheckout.brandName.errors.pattern\">Name should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.brandName.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"packagingType\">Packaging Type<span>*</span></label>\n                     <input type=\"text\" minlength=\"2\" maxlength=\"20\" class=\"form-control bg-light\" id=\"packagingType\" placeholder=\"Bottle\" formControlName=\"packagingType\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.packagingType.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.packagingType.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.packagingType.errors.required\">Packaging Type is required</div>\n                        <div *ngIf=\"productcheckout.packagingType.errors.pattern\">Should be alphanumeric and - symbol allowed.</div>\n                        <div *ngIf=\"productcheckout.packagingType.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"packageSize\">Package Size<span>*</span></label>\n                     <input type=\"text\" minlength=\"5\" maxlength=\"15\" class=\"form-control bg-light\" id=\"packageSize\" placeholder=\"23 Inches.\" formControlName=\"packageSize\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.packageSize.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.packageSize.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.packageSize.errors.required\">Size is required</div>\n                        <div *ngIf=\"productcheckout.packageSize.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.packageSize.errors.minlength\">Should be minimum 5 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"weight\">Weight (in grams)<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"weight\" placeholder=\"15.5\" formControlName=\"weight\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.weight.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.weight.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.weight.errors.required\">Weight is required</div>\n                        <div *ngIf=\"productcheckout.weight.errors.pattern\">Only decimals/numbers</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"hsnno\">HSN No<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"hsnno\" placeholder=\"123299129\" formControlName=\"HSN\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.HSN.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.HSN.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.HSN.errors.required\">HSN No. is required</div>\n                        <div *ngIf=\"productcheckout.HSN.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.HSN.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"costToCompany\">Purchase Price<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"costToCompany\" placeholder=\"400\" formControlName=\"costToCompany\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.costToCompany.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.costToCompany.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.costToCompany.errors.required\">Purchase Price is required</div>\n                        <div *ngIf=\"productcheckout.costToCompany.errors.pattern\">Should be only numeric/decimal</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"gst\">GST<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"gst\" placeholder=\"18.00\" formControlName=\"gst\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.gst.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.gst.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.gst.errors.required\">GST is required</div>\n                        <div *ngIf=\"productcheckout.gst.errors.pattern\">GST is invalid</div>\n                        <div *ngIf=\"productcheckout.gst.errors.minlength\">GST should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.gst.errors.maxlength\">GST should be maximum 5 digits</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"mrp\">MRP<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"mrp\" placeholder=\"23\" formControlName=\"mrp\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.mrp.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.mrp.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.mrp.errors.required\">MRP is required</div>\n                        <div *ngIf=\"productcheckout.mrp.errors.pattern\">Only decimals/numbers</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"per_unit_price\">Price Per Unit<span>*</span></label>\n                     <input type=\"text\" class=\"form-control bg-light\" id=\"per_unit_price\" placeholder=\"24.5\" formControlName=\"per_unit_price\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.per_unit_price.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.per_unit_price.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.per_unit_price.errors.required\">Price Per Unit is required</div>\n                        <div *ngIf=\"productcheckout.per_unit_price.errors.pattern\">Only decimals/numbers</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"totalMargin\">Total Margin(%)<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"totalMargin\" placeholder=\"12\" formControlName=\"totalMargin\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.totalMargin.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.totalMargin.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.totalMargin.errors.required\">Total Margin(%) is required</div>\n                        <div *ngIf=\"productcheckout.totalMargin.errors.pattern\">Total Margin(%) is invalid</div>\n                        <div *ngIf=\"productcheckout.totalMargin.errors.minlength\">Total Margin(%) should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.totalMargin.errors.maxlength\">Total Margin(%) should be maximum 5 digits</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"stock_status\">Stock Status<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"10\" class=\"form-control bg-light\" id=\"stock_status\" placeholder=\"100\" formControlName=\"stock_status\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.stock_status.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.stock_status.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.stock_status.errors.required\">Stock Status is required</div>\n                        <div *ngIf=\"productcheckout.stock_status.errors.pattern\">Stock Status should be numeric</div>\n                        <div *ngIf=\"productcheckout.stock_status.errors.minlength\">Stock Status should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.stock_status.errors.maxlength\">Stock Status should be maximum 10 digits</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"vendorSKU\">Vendor SKU<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"vendorSKU\" placeholder=\"JI88\" formControlName=\"vendorSKU\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.vendorSKU.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.vendorSKU.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.vendorSKU.errors.required\">Vendor SKU is required</div>\n                        <div *ngIf=\"productcheckout.vendorSKU.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.vendorSKU.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"ssSKU\">SS SKU<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"ssSKU\" placeholder=\"IP9\" formControlName=\"ssSKU\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.ssSKU.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.ssSKU.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.ssSKU.errors.required\">SS SKU is required</div>\n                        <div *ngIf=\"productcheckout.ssSKU.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.ssSKU.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"SS_Margin\">SS_Margin(%)<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"SS_Margin\" placeholder=\"12\" formControlName=\"SS_Margin\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.SS_Margin.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.SS_Margin.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.required\">SS_Margin is required</div>\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.pattern\">SS_Margin is invalid</div>\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.minlength\">SS_Margin should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.SS_Margin.errors.maxlength\">SS_Margin should be maximum 5 digits</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-3\">\n                     <label for=\"SSP_Margin\">SSP_Margin(%)<span>*</span></label>\n                     <input type=\"text\" minlength=\"1\" maxlength=\"5\" class=\"form-control bg-light\" id=\"SSP_Margin\" placeholder=\"43\" formControlName=\"SSP_Margin\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.SSP_Margin.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.SSP_Margin.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.required\">SSP_Margin is required</div>\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.pattern\">SSP_Margin is invalid</div>\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.minlength\">SSP_Margin should be minimum 1 digits</div>\n                        <div *ngIf=\"productcheckout.SSP_Margin.errors.maxlength\">SSP_Margin should be maximum 5 digits</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"ingredients\">Ingredients<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Calcium\" id=\"ingredients\" formControlName=\"ingredients\" name=\"ingredients\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.ingredients.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.ingredients.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.ingredients.errors.required\">Ingredients is required</div>\n                        <div *ngIf=\"productcheckout.ingredients.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.ingredients.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"effect\">Product Side Effects<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"2\" maxlength=\"100\" placeholder=\"NA\" id=\"effect\" formControlName=\"effect\" name=\"effect\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.effect.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.effect.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.effect.errors.required\">Cannot be blank</div>\n                        <div *ngIf=\"productcheckout.effect.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.effect.errors.minlength\">Should be minimum 2 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"upc\">Universal Product Code<span>*</span></label>\n                     <input type=\"text\" minlength=\"10\" maxlength=\"15\" class=\"form-control bg-light\" oninput=\"this.value = this.value.toUpperCase()\" id=\"upc\" placeholder=\"USDJS9832983\" formControlName=\"upc\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.upc.errors }\">\n                     <div *ngIf=\"submitted && productcheckout.upc.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.upc.errors.required\">UPC is required</div>\n                        <div *ngIf=\"productcheckout.upc.errors.pattern\">No Space / Special Characters allowed</div>\n                        <div *ngIf=\"productcheckout.upc.errors.minlength\">Should be minimum 10 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productusage\">Product Usage<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Daily\" id=\"productusage\" formControlName=\"productusage\" name=\"productusage\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productusage.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.productusage.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productusage.errors.required\">Usage is required</div>\n                        <div *ngIf=\"productcheckout.productusage.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.productusage.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"highlights\">Product Highlights<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"NA\" id=\"highlights\" formControlName=\"highlights\" name=\"highlights\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.highlights.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.highlights.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.highlights.errors.required\">Cannot be blank</div>\n                        <div *ngIf=\"productcheckout.highlights.errors.pattern\">Should be alphanumeric and , symbol allowed</div>\n                        <div *ngIf=\"productcheckout.highlights.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"productDescription\">Product Description<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Decription\" id=\"productDescription\" formControlName=\"productDescription\" name=\"productDescription\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productDescription.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.productDescription.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.productDescription.errors.required\">Description is required</div>\n                        <div *ngIf=\"productcheckout.productDescription.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.productDescription.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"action\">Product Action<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Headache\" id=\"action\" formControlName=\"action\" name=\"action\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.action.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.action.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.action.errors.required\">Action is required</div>\n                        <div *ngIf=\"productcheckout.action.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.action.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"direction\">Product Direction<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Direction for use\" id=\"direction\" formControlName=\"direction\" name=\"direction\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.direction.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.direction.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.direction.errors.required\">Direction is required</div>\n                        <div *ngIf=\"productcheckout.direction.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.direction.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                     <label for=\"tags\">Tags<span>*</span></label>\n                     <textarea class=\"form-control bg-light\" rows=\"3\" cols=\"50\" minlength=\"3\" maxlength=\"100\" placeholder=\"Cough\" id=\"tags\" formControlName=\"tags\" name=\"tags\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.tags.errors }\"></textarea>\n                     <div *ngIf=\"submitted && productcheckout.tags.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"productcheckout.tags.errors.required\">Tags is required</div>\n                        <div *ngIf=\"productcheckout.tags.errors.pattern\">Should be alphanumeric and . symbol allowed</div>\n                        <div *ngIf=\"productcheckout.tags.errors.minlength\">Should be minimum 3 characters</div>\n                     </div>\n                  </div>\n               </div>\n               <div class=\"form-row\">\n                  <div class=\"form-check ml-1\">\n                     <div class=\"form-group m-auto\">\n                        <input type=\"checkbox\" formControlName=\"product_availability\" id=\"product_availability\" class=\"form-check-input\"/>\n                        <label for=\"product_availability\" class=\"form-check-label\">Product Available</label>\n                     </div>\n                  </div>\n                  <div class=\"form-check ml-auto mr-1\">\n                     <div class=\"form-group m-auto\">\n                        <input type=\"checkbox\" formControlName=\"tax_exempt\" id=\"tax_exempt\" class=\"form-check-input\"/>\n                        <label for=\"tax_exempt\" class=\"form-check-label\">Tax Exempt</label>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"card shadow mb-4\">\n            <div class=\"card-body\">\n               <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                     <label>Upload Product Image<span>*</span></label>\n                     <div class=\"custom-file mb-4\">\n                        <input type=\"file\" multiple class=\"custom-file-input\" id=\"uploadproductimg\" (change)=\"fileProgresspancard($event)\" data-max-size=\"32154\" accept=\"image/jpeg, image/png\" formControlName=\"productImage\" [ngClass]=\"{ 'is-invalid': submitted && productcheckout.productImage.errors }\">\n                        <label class=\"custom-file-label bg-light\" for=\"uploadproductimg\">Choose file...</label>\n                        <div *ngIf=\"submitted && productcheckout.productImage.errors\" class=\"invalid-feedback\">\n                           <div *ngIf=\"productcheckout.productImage.errors.required\">Images should be uploaded</div>\n                        </div>\n                     </div>\n                     <div *ngIf=\"productDataFormType === 'add'\">\n                        <span class=\"m-1\" *ngFor=\"let url of previewUrlproductimg;\">\n                           <img [src]=\"url\" alt=\"Product Image\" class=\"view-thumbnail-img\">\n                        </span>\n                     </div>\n                     <div *ngIf=\"productDataFormType !== 'add' && !!productDetails && productDetails.productImages.length != 0 && !(!!previewUrlproductimg && previewUrlproductimg.length != 0)\">\n                        <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of productDetails?.productImages;\">\n                           <img [src]=\"item\" alt=\"Product Image\" class=\"view-thumbnail-img\">\n                        </a>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"form-row\">\n            <div class=\"col-md-6\">\n               <button class=\"btn btn-secondary w-25\" type=\"submit\">Submit</button>\n               <button class=\"btn btn-outline-secondary mx-2 w-25\" type=\"button\" (click)=\"onReset()\">Cancel</button>\n            </div>\n         </div>\n         </form>\n      </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {IOption} from 'ng-select';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { SelectionType, ColumnMode } from '@swimlane/ngx-datatable';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\nimport 'rxjs/Rx';\nimport { of } from 'rxjs';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-products-listing',\n  templateUrl: './products-listing.component.html',\n  styleUrls: ['./products-listing.component.scss']\n})\nexport class ProductsListingComponent implements OnInit {\n  cities2 = [\n    {id: 1, name: 'Vilnius'},\n    {id: 2, name: 'Kaunas'},\n    {id: 3, name: 'Pavilnys', disabled: true},\n    {id: 4, name: 'Pabradė'},\n    {id: 5, name: 'Klaipėda'}\n];\nselectService: string[];\n  display = 'none';\n  responseCode = ResponseCode;\n  SelectionType = SelectionType;\n  enableSummary = true;\n  summaryPosition = 'top';\n  pages: any;\n  rows: any;\n  selected = [];\n  ColumnMode = ColumnMode;\n  // object: for mapping label with api fields\n  columns = [\n    { name: 'S No', prop: 's_no' },\n    { name: 'Product ID', prop: 'productId'},\n    { name: 'Product Name', prop: 'productName' },\n    { name: 'Stock', prop: 'inStock' },\n    { name: 'Category', prop: 'category'},\n    { name: 'Brand Name', prop: 'brandName'},\n    { name: 'Availability', prop: 'availabilityStatus'},\n  ];\n  searchField: FormControl;\n  searchForm: FormGroup;\n  filterObj = {\n    search: '',\n    pageSize: 50,\n    currentPage: 1,\n    sort_by: '',\n    sort_type: ''\n  };\n  LIMITS = [\n    { name: '10', id: 10 },\n    { name: '25', id: 25 },\n    { name: '50', id: 50 },\n    { name: '100', id: 100 }\n  ];\n  limit: number = this.filterObj.pageSize;\n  sub: any;\n  constructor(private inventoryService: InventoryService,\n              private toastrService: ProductToasterService,\n              private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router) {\n                this.searchField = new FormControl();\n                this.searchForm = fb.group({search: this.searchField});\n                this.searchField.valueChanges\n                  .debounceTime(400)\n                  .switchMap(term => of(term)).subscribe(result => {\n                    this.filterObj.search = result;\n                    this.navigateUser();\n                  });\n              }\n  ngOnInit() {\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.filterObj.search = params.search || '';\n        this.filterObj.pageSize = params.pageSize || '',\n        this.filterObj.currentPage = params.currentPage || '';\n        this.filterObj.sort_by = params.sort_by || '';\n        this.filterObj.sort_type = params.sort_type || '';\n        this.getProductListingData();\n      });\n  }\n  // Method: is used to Navigate user to a desired filter Page\n   navigateUser() {\n    const tempUrlQuery = ProductUtilities.generateQueryString(this.filterObj);\n    const tempLink = '/app/inventory/products?' + tempUrlQuery;\n    this.router.navigateByUrl(tempLink);\n  }\n  // End of the Above Code\n  // Method: which is used to fetch the products list from the BE\n  getProductListingData(){\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n          return;\n      }\n      window.scrollTo(0, 0);\n    });\n    const productQueryStr = ProductUtilities.generateQueryString(this.filterObj);\n    this.inventoryService.getProductList(productQueryStr).subscribe(\n      response => {\n        if (!!response && response.success === true) {\n          if (!!response.response.data && response.response.data.length > 0) {\n            this.rows = response.response.data;\n            console.log(this.rows);\n            this.pages = response.response.metadata;\n          } else {\n            this.rows = [];\n            this.pages = {};\n          }\n        } else {\n          this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        }\n      },\n      err => {\n        this.toastrService.showError('Error', 'Something went wrong. Please try again later');\n        console.error(err);\n      }\n      // display error\n    );\n  }\n  // End of the above code\n  viewProduct(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/products/view-products'], { queryParams: { productId: data.productId} });\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  editProduct(data) {\n    if (!!data.productId && data.productId !== '') {\n      // tslint:disable-next-line: max-line-length\n      this.router.navigate(['/app/inventory/products/add-edit-products'], { queryParams: { productId: data.productId, type: 'edit'}});\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong please try again later');\n    }\n  }\n  deleteProduct(data) {\n    if (!!data && !!data.productId && data.productId !== '') {\n      const isConfirmed = confirm('Do you seriously want to delete ' + data.productName + '?');\n      if (isConfirmed === true) {\n        const request = {\n          productId: data.productId\n        };\n        const removeproductQueryStr = ProductUtilities.generateQueryString(request);\n        this.inventoryService.removeProduct(removeproductQueryStr).subscribe(\n          response => {\n            if (!!response && response.success === true) {\n              this.toastrService.showSuccess('Success', response.response.message);\n              this.getProductListingData();\n            } else {\n              this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n            }\n          },\n          err => {\n            console.error(err);\n            this.toastrService.showError('Error', 'Something went wrong. Please try again later !!!');\n          }\n        );\n      }\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong. Please try again later!!!');\n    }\n  }\n  // Method : to set pagination for list items\n  setPage(event) {\n    this.filterObj.currentPage = event.page;\n    this.navigateUser();\n  }\n  // End of the Above code\n}\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Products Listing</h1>\n      <form class=\"d-none d-sm-inline-block form-inline ml-auto ml-md-3 my-2 my-md-0 mw-100 w-25\" [formGroup]=\"searchForm\">\n         <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control small\" placeholder=\"Search Products...\" aria-label=\"Search\" formControlName=\"search\">\n            <div class=\"input-group-append\">\n               <button class=\"btn btn-primary\" type=\"button\">\n               <i class=\"fa fa-search fa-sm\"></i>\n               </button>\n            </div>\n         </div>\n      </form>\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm mx-1 ml-auto\" data-toggle=\"modal\" data-target=\"#importProduct\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i> Import Product</a>\n      <button type=\"button\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/products/add-edit-products']\" [queryParams]=\"{ type: 'add'}\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add New Product</button>\n   </div>\n       <div class=\"row pb-4\" *ngIf=\"!!rows && !!pages\">\n         <div class=\"col-xl-12 col-lg-12\">\n            <div class=\"card shadow mb-4\">\n               <ngx-datatable\n                  class=\"material striped\"\n                  [rows]=\"rows\"\n                  [columnMode]=\"ColumnMode.force\"\n                  [headerHeight]=\"50\"\n                  [footerHeight]=\"50\"\n                  [rowHeight]=\"auto\"\n                  [loadingIndicator]=\"loadingIndicator\"\n                  [externalPaging]=\"true\"\n                  [count]=\"pages.totalCount\"\n                  [offset]=\"pages.currentPage\"\n                  [limit]=\"pages.pageSize\"\n                  (page)=\"setPage($event)\"\n                  >\n                  <ngx-datatable-column name=\"Sr No.\" prop=\"s_no\" [width]=\"60\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product ID\" prop=\"productId\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Product Name\" prop=\"productName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Category\" prop=\"category\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Brand\" prop=\"brandName\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"Availability\" prop=\"availabilityStatus\" [sortable]=false></ngx-datatable-column>\n                  <ngx-datatable-column name=\"InStock\" prop=\"inStock\" [sortable]=false>\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span *ngIf=\"row.inStock === true\">Yes</span>\n                        <span *ngIf=\"row.inStock === false\">No</span>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Actions\" prop=\"product_id\" [sortable]=false [width]=\"250\">\n                     <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                        <span class=\"mx-1 \"></span>\n                        <button class=\"btn btn-sm btn-outline-info btn-icon mx-1\" (click)=\"viewProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View Product\"><i class=\"fa fa-eye\"></i></button>\n                        <button class=\"btn btn-sm btn-outline-warning btn-icon mx-1\" (click)=\"editProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Edit Product\"><i class=\"fa fa-edit\"></i></button> \n                        <!-- <button class=\"btn btn-sm btn-outline-success btn-icon mx-1\" (click)=\"copyProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Copy Category\"><i class=\"fa fa-copy\"></i></button>  -->\n                        <button class=\"btn btn-sm btn-outline-danger btn-icon mx-1\" (click)=\"deleteProduct(row)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete Product\"><i class=\"fa fa-trash\"></i></button>\n                     </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-footer *ngIf=\"!!pages.totalCount\">\n                     <ng-template\n                        ngx-datatable-footer-template\n                        let-rowCount=\"rowCount\"\n                        let-pageSize=\"pageSize\"\n                        let-count=\"totalCount\"\n                        let-selectedCount=\"selectedCount\"\n                        let-curPage=\"curPage\"\n                        let-offset=\"offset\"\n                        >\n                        <div class=\"w-25\" style=\"padding: 5px 10px\">\n                           <div> Showing {{((curPage - 1) * pageSize) + 1 }} - {{pageSize > rowCount ? rowCount : ((pageSize * curPage) > rowCount ? rowCount : pageSize * curPage)}} product of {{rowCount}} Products </div>\n                        </div>\n                        <datatable-pager\n                        [pagerLeftArrowIcon]=\"'datatable-icon-left'\"\n                        [pagerRightArrowIcon]=\"'datatable-icon-right'\"\n                        [pagerPreviousIcon]=\"'datatable-icon-prev'\"\n                        [pagerNextIcon]=\"'datatable-icon-skip'\"\n                        [page]=\"curPage\"\n                        [size]=\"pageSize\"\n                        [count]=\"rowCount\"\n                        [hidden]=\"!((rowCount / pageSize) > 1)\"\n                        (change)=\"setPage($event)\">\n                        </datatable-pager>\n                     </ng-template>\n                  </ngx-datatable-footer>\n               </ngx-datatable>\n            </div>\n         </div>\n      </div>\n</div>\n<!-- <div class=\"modal fade\" id=\"filterModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"filterModalLabel\" aria-hidden=\"true\">\n   <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form class=\"user\">\n         <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"filterModalLabel\">Filter</h5>\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n            </button>\n         </div>\n         <div class=\"modal-body\">\n            <div class=\"row pb-5\">\n               <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"form-row\">\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"services\">Services</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendortype\">Vendor Type*</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                           <div class=\"form-group col-md-4\">\n                              <label for=\"vendorcategory\">Vendor Category</label>\n                              <ng-select\n                              [options]=\"cities2\"\n                              bindLabel=\"name\"\n                              bindValue=\"id\"\n                              [multiple]=\"true\"\n                              placeholder=\"Select Services\"\n                              [(ngModel)]=\"selectService\"\n                              name=\"services\"\n                              id=\"services\"\n                              class=\"form-control bg-light custom\"\n                              >\n                              </ng-select>\n                           </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div class=\"modal-footer\">\n            <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n            <button class=\"btn btn-secondary w-25\" type=\"submit\">Apply</button>\n         </div>\n         </form>\n      </div>\n   </div>\n</div> -->\n<!-- Below code is for product import -->\n<div class=\"modal fade\" id=\"importProduct\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"importProduct\" aria-hidden=\"true\">\n   <!-- <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n         <form>\n            <div class=\"modal-header\">\n               <h5 class=\"modal-title\" id=\"importProductLabel\">Import Product</h5>\n               <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n               <span aria-hidden=\"true\">×</span>\n               </button>\n            </div>\n            <div class=\"modal-body\">\n               <div class=\"row pb-5\">\n                  <div class=\"col-12 p-0\">\n                     <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                           <label>Upload File<span>*</span></label>\n                           <div class=\"custom-file mb-4\">\n                              <input  id=\"importxls\" type=\"file\" accept=\".xlsx, .xls\" name=\"importxls\" required class=\"custom-file-input\" (change)=\"fileProgresspancard($event)\" formControlName=\"importxls\">\n                              <label class=\"custom-file-label bg-light\" for=\"uploadproductimg\">Choose file...</label>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div class=\"modal-footer\">\n               <button class=\"btn btn-outline-secondary w-25\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n               <button class=\"btn btn-secondary w-25\" type=\"button\">Import</button>\n            </div>\n         </form>\n      </div>\n   </div> -->\n</div>\n<!-- End of the above code -->\n","import { Component, OnInit } from '@angular/core';\nimport { ResponseCode } from 'src/app/core/dictionary/response-code';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductToasterService } from 'src/app/core/services/toaster.service';\nimport { InventoryService } from '../../../services/InventoryService';\nimport { ProductUtilities } from 'src/app/core/utilities/utility';\n\n@Component({\n  selector: 'app-view-products',\n  templateUrl: './view-products.component.html',\n  styleUrls: ['./view-products.component.scss']\n})\nexport class ViewProductsComponent {\n  sub: any;\n  productId: string;\n  responseCode = ResponseCode;\n  productDetails: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: ProductToasterService,\n  ) {\n    this.sub = this.route\n    .queryParams\n    .subscribe(params => {\n      if (!!params.productId && params.productId !== '') {\n      this.productId = params.productId;\n      this.getProductData(this.productId);\n      }\n    });\n  }\n  // Method: to fetch Vendor Detail data from BE\n  getProductData(cId) {\n    const queryObj = {\n      productId: cId\n    }\n    const productsQueryStr = ProductUtilities.generateQueryString(queryObj);\n    this.inventoryService.getProductDetailById(productsQueryStr).subscribe(\n      response => {\n        if ( response.success === true) {\n          if (!!response.response.data && response.response.data !== null) {\n            this.productDetails = response.response.data;\n            console.log(this.productDetails);\n          } else {\n            this.toastrService.showError('Error', 'Something went wrong. Please Try again latter');\n            this.router.navigate(['/app/inventory/products'], { queryParams: {  perPage: 50, currentPage: 1} });\n          }\n        }\n      },\n      err => console.error(err)\n    );\n  }\n  onNavigate(data) {\n    console.log(data);\n    if (!!data) {\n      const url = '' + data;\n      window.open(url, '_blank');\n    } else {\n      this.toastrService.showError('Error', 'Something went wrong, Please try again later !!!');\n    }\n}\n}\n // End of code\n\n","<div class=\"container-fluid\">\n   <!-- Page Heading -->\n   <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">Product Details</h1>\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" [routerLink]=\"['/app/inventory/products']\" [queryParams]=\"{ pageSize: 50, currentPage: 1}\"><i class=\"fa fa-angle-left\"></i>&nbsp; Back</a>\n   </div>\n   <!-- Page Body -->\n   <div class=\"row pb-4\" *ngIf=\"!!productDetails && productDetails !== null\">\n      <div class=\"col-xl-12 col-lg-12\">\n         <div class=\"card shadow p-4\">\n            <div class=\"table-responsive-sm\">\n               <table class=\"table table-bordered\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <span><strong>Product ID: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.sku && productDetails.sku !== '' ? productDetails.sku : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Vendor Name : </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.productName && productDetails.productName !== '' ? productDetails.productName : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Contact Person Name: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.productShortName && productDetails.productShortName !== '' ? productDetails.productShortName : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>HSN: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.HSN && productDetails.HSN !== '' ? productDetails.HSN : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Margin 1: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.SSP_Margin && productDetails.SSP_Margin !== '' ? productDetails.SSP_Margin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Margin 2: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.SS_Margin && productDetails.SS_Margin !== '' ? productDetails.SS_Margin : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>UPC: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.UPC && productDetails.UPC !== '' ? productDetails.UPC : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Action: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.action && productDetails.action !== '' ? productDetails.action : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Availability: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.availabilityStatus && productDetails.availabilityStatus !== '' ? productDetails.availabilityStatus : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Brand: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.brandName && productDetails.brandName !== '' ? productDetails.brandName : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Category: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.category && productDetails.category !== '' ? productDetails.category : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Created Date: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.createdAt && productDetails.createdAt !== ''\">{{productDetails.createdAt | date: 'dd-MM-yyyy'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.createdAt && productDetails.createdAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Cost to Company: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.costToCompany && productDetails.costToCompany !== '' ? productDetails.costToCompany : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Description: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.description && productDetails.description !== '' ? productDetails.description : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Direction: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.direction && productDetails.direction !== '' ? productDetails.direction : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Effects: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.effect && productDetails.effect !== '' ? productDetails.effect : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>GST: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.gst && productDetails.gst !== '' ? productDetails.gst : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Highlights: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.highlights && productDetails.highlights !== '' ? productDetails.highlights : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Indication: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.indication && productDetails.indication !== '' ? productDetails.indication : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Ingredients: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.ingredients && productDetails.ingredients !== '' ? productDetails.ingredients : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>MRP: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.mrp && productDetails.mrp !== '' ? productDetails.mrp : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Is Available: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"productDetails?.isAvailable === true\">Yes</span>\n                           <span class=\"float-right\" *ngIf=\"productDetails?.isAvailable === false\">No</span>\n                        </td>\n                        <td>\n                           <span><strong>Package Size: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.packageSize && productDetails.packageSize !== '' ? productDetails.packageSize : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Packaging Type: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.packagingType && productDetails.packagingType !== '' ? productDetails.packagingType : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Product Description: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.productDescription && productDetails.productDescription !== '' ? productDetails.productDescription : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Tags: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.tags && productDetails.tags !== '' ? productDetails.tags : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Targeted User: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.targetedUser && productDetails.targetedUser !== '' ? productDetails.targetedUser : 'NA'}}</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Total Margin: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.totalMargin && productDetails.totalMargin !== '' ? productDetails.totalMargin : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Type: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.type && productDetails.type !== '' ? productDetails.type : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Updated At: </strong></span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.updatedAt && productDetails.updatedAt !== ''\">{{productDetails.updatedAt | date: 'medium'}}</span>\n                           <span class=\"float-right\" *ngIf=\"!!productDetails.updatedAt && productDetails.updatedAt === ''\">NA</span>\n                        </td>\n                     </tr>\n                     <tr>\n                        <td>\n                           <span><strong>Variant: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.variant && productDetails.variant !== '' ? productDetails.variant : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Vendor ID: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.vendorId && productDetails.vendorId !== '' ? productDetails.vendorId : 'NA'}}</span>\n                        </td>\n                        <td>\n                           <span><strong>Weight: </strong></span>\n                           <span class=\"float-right\">{{!!productDetails.weight && productDetails.weight !== '' ? productDetails.weight : 'NA'}}</span>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n               <table class=\"table table-bordered image-table\">\n                  <tbody>\n                     <tr>\n                        <td>\n                           <p><strong>Product Images: </strong></p>\n                           <div *ngIf=\"productDetails?.productImages.length != 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"{{item}}\" *ngFor=\"let item of productDetails?.productImages;\">\n                              <img src=\"{{item}}\" alt=\"{{productDetails?.productName}}\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                           <div *ngIf=\"productDetails?.productImages.length === 0\">\n                              <a class=\"m-1\" target=\"_blank\" href=\"../../../../../assets/img/dummy.png\">\n                              <img src=\"../../../../../assets/img/dummy.png\" alt=\"Dummy Image\" class=\"view-thumbnail-img\">\n                              </a>\n                           </div>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n            </div>\n            <div class=\"text-left my-2 d-block\">\n               <p class=\"text-muted\"><small>*NA : Not Available</small></p>\n            </div>\n         </div>\n      </div>\n   </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SelectModule } from 'ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ProductsListingComponent } from './components/products/products-listing/products-listing.component';\nimport { AceProductsComponent } from './components/products/ace-products/ace-products.component';\nimport { ViewProductsComponent } from './components/products/view-products/view-products.component';\nimport { DiagnosticsListingComponent } from './components/diagnostics/diagnostics-listing/diagnostics-listing.component';\nimport { AceDiagnosticsComponent } from './components/diagnostics/ace-diagnostics/ace-diagnostics.component';\nimport { ViewDiagnosticsComponent } from './components/diagnostics/view-diagnostics/view-diagnostics.component';\nimport { MedicineListingComponent } from './components/medicine/medicine-listing/medicine-listing.component';\nimport { AceMedicineComponent } from './components/medicine/ace-medicine/ace-medicine.component';\nimport { ViewMedicineComponent } from './components/medicine/view-medicine/view-medicine.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nconst inventoryRoutes: Routes = [\n  {\n    path: 'products', component: ProductsListingComponent\n  },\n  {\n    path: 'products/add-edit-products', component: AceProductsComponent\n  },\n  {\n    path: 'products/view-products', component: ViewProductsComponent\n  },\n  {\n    path: 'diagnostics', component: DiagnosticsListingComponent\n  },\n  {\n    path: 'diagnostics/add-edit-diagnostics', component: AceDiagnosticsComponent\n  },\n  {\n    path: 'diagnostics/view-diagnostics', component: ViewDiagnosticsComponent\n  },\n  {\n    path: 'medicine', component: MedicineListingComponent\n  },\n  {\n    path: 'medicine/add-edit-medicine', component: AceMedicineComponent\n  },\n  {\n    path: 'medicine/view-medicine', component: ViewMedicineComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    ProductsListingComponent,\n    AceProductsComponent,\n    ViewProductsComponent,\n    DiagnosticsListingComponent,\n    AceDiagnosticsComponent,\n    ViewDiagnosticsComponent,\n    MedicineListingComponent,\n    AceMedicineComponent,\n    ViewMedicineComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    SelectModule,\n    BsDatepickerModule.forRoot(),\n    RouterModule.forChild(inventoryRoutes)\n  ]\n})\nexport class InventoryModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from '../../../core/app-settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n  baseUrl = AppSettings.API_ENDPOINT;\n  constructor(private http: HttpClient) { }\n  // Method: declaring api to fetch product-listing data\n  getProductList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/allProducts' + queryStr);\n  }\n  // Method: declaring api to fetch diagnostic-listing data\n  getDiagnosticsList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/allDiagnosticProducts' + queryStr);\n  }\n  // Method: declaring api to fetch diagnostic-listing data\n  getMedicineList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/allMedicines' + queryStr);\n  }\n  // Method: getting Type from BE\n  gettypeDropdown(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'api/user/eproducts/get/getEnumByName' + queryStr);\n  }\n  // Method: getting Array from BE\n  getENUMData(queryStr) {\n    return this.http.get<any>(this.baseUrl + 'api/user/eproducts/get/getEnumByName' + queryStr);\n  }\n  // Method: Save Product Data from BE\n  saveProductData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/create/addProduct', data);\n  }\n  // Method: Edit Product Data from BE\n  editProductData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/update/product', data);\n  }\n  // Method: declaring api to view products details\n  getProductDetailById(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/getProductDetails' + queryStr);\n  }\n  // Method: declaring api to view diagnostic products details\n  getDiagnosticDetailById(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/getDiagnosticProductDetails' + queryStr);\n  }\n  // Method: declaring api to view diagnostic products details\n  getMedicineDetailById(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/web/inventory/api/get/getMedicineDetails' + queryStr);\n  }\n  // Method: declaring api to view item details\n  getpincodedetails(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'public/api/get/locationByPincode' + queryStr);\n  }\n  // Method: declaring api to delete product\n  removeProduct(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.delete<any>(this.baseUrl + 'admin/web/inventory/api/delete/removeProductById' + queryStr);\n  }\n  // Method: declaring api to delete diagnostic product\n  removeDiagnosticProduct(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.delete<any>(this.baseUrl + 'admin/web/inventory/api/delete/removeDiagnosticProductById' + queryStr);\n  }\n  // Method: declaring api to delete medicine\n  removeMedicine(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.delete<any>(this.baseUrl + 'admin/web/inventory/api/delete/removeMedicine' + queryStr);\n  }\n  // End of above code\n  // Method: declaring api to fetch items for category-listing\n  getCategoryList(queryStr: string) {\n    if (!!queryStr) {\n      queryStr = '?' + queryStr;\n    } else {\n      queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'category-listing/' + queryStr);\n  }\n  // End of above cod\n  // Method: declaring api to fetch items for dropdown in categpry-add in category list\n  getCategoryDropdownData() {\n    return this.http.get<any>(this.baseUrl + 'category-create/');\n  }\n  // End of above code\n  // Method: declaring api to send data to add items to category-listing\n  saveCategoryData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'category-create/', data);\n  }\n  // End of above code\n  // Method: declaring api to edit data to add items to category-listing\n  editCategoryData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'category-edit/', data);\n  }\n\n  // Below Methpds are used for Temporary Use\n  getVendorDetailById(queryStr: string) {\n    if (!!queryStr) {\n        queryStr = '?' + queryStr;\n    } else {\n        queryStr = '';\n    }\n    return this.http.get<any>(this.baseUrl + 'admin/api/vendor/getVendorDetails' + queryStr);\n  }\n  saveVendorData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/create/addProduct', data);\n  }\n  editVendorData(data: any) {\n    return this.http.post<any>(this.baseUrl + 'admin/web/inventory/api/update/product', data);\n  }\n}\n"],"sourceRoot":"webpack:///"}